@page "/"
@using System.Runtime.InteropServices
<PageTitle>Index</PageTitle>

@code {
    // Inject the IJSRuntime dependency
    [Inject]
    private IJSRuntime JSRuntime { get; set; }

    // Method to load the main script and handle any errors
    private async Task LoadMainScriptAsync()
    {
        /*
        try
        {
    // Load the "system.js" script
            await JSRuntime.InvokeVoidAsync("eval", await GetScriptContentAsync("https://cdn.jsdelivr.net/gh/flyover/system.ts/build/system.js"));
            
            Console.WriteLine("system.js loaded");
        }
        catch (Exception ex)
        {
    // Handle any errors
            Console.WriteLine($"Error loading 'system.js': {ex.Message}");
        }
        

        try
        {
    // Load the "system.config.js" script
            await JSRuntime.InvokeVoidAsync("eval", await GetScriptContentAsync("https://www.alisengine.com/web/try/wwwroot/system.config.js"));
            
            Console.WriteLine("system.config.js loaded");
        }
        catch (Exception ex)
        {
    // Handle any errors
            Console.WriteLine($"Error loading 'system.config.js': {ex.Message}");
        }
*/

        try
        {
    // Import "main" and execute the default function
            await JSRuntime.InvokeVoidAsync("eval", "System.import('main').then(function (main) { main.default(); }).catch(console.error);");
            
            Console.WriteLine("main imported");
        }
        catch (Exception ex)
        {
    // Handle any errors
            Console.WriteLine($"Error importing 'main': {ex.Message}");
        }
    }


    // Method to get the script content from the provided URL
    private async Task<string> GetScriptContentAsync(string url)
    {
        using (var httpClient = new HttpClient())
        {
            return await httpClient.GetStringAsync(url);
        }
    }

    // Call the LoadMainScriptAsync method when the component is initialized
    protected override async Task OnInitializedAsync()
    {
        await LoadMainScriptAsync();
        
        Console.WriteLine("main script loaded");
    }
}
