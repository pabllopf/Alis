<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <OutputType>Exe</OutputType>
        <OutDir>bin/$(Configuration)/$(RuntimeIdentifier)/lib/</OutDir>
        <LangVersion>13</LangVersion>
        <Nullable>disable</Nullable>
        <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
        <SonarQubeExclude>true</SonarQubeExclude>
    </PropertyGroup>

    <PropertyGroup>
        <NoWarn>$(NoWarn);CS1685;</NoWarn> <!-- Error CS1685 : Warning As Error: Define on differente assemblys of alias gloabal -->
        <NoWarn>$(NoWarn);CS0436;</NoWarn> <!-- Error CS0436 : Warning As Error: Overriding dependency version -->
        <NoWarn>$(NoWarn);NU1903;</NoWarn> <!-- Error NU1903 : Warning As Error: Package has high severity vulnerability -->
        <NoWarn>$(NoWarn);NU1902;</NoWarn> <!-- Error NU1902 : Warning As Error: Package has moderate severity vulnerabilities -->
        <NoWarn>$(NoWarn);CS0162;</NoWarn>
        <NoWarn>$(NoWarn);ALIS001;ALIS009;ALIS010;ALIS007;ALIS003;</NoWarn>
    </PropertyGroup>

    <PropertyGroup Condition="($([MSBuild]::IsOSPlatform('linux')) AND '$(RuntimeIdentifier)' == '') OR $(RuntimeIdentifier.Contains('linux'))">
        <DefineConstants>$(DefineConstants);LINUX</DefineConstants>
        <IsLinux>true</IsLinux>
    </PropertyGroup>

    <PropertyGroup Condition="($([MSBuild]::IsOSPlatform('osx')) AND '$(RuntimeIdentifier)' == '')  OR $(RuntimeIdentifier.Contains('osx'))">
        <DefineConstants>$(DefineConstants);OSX</DefineConstants>
        <IsOSX>true</IsOSX>
    </PropertyGroup>

    <PropertyGroup Condition="($([MSBuild]::IsOSPlatform('windows')) AND '$(RuntimeIdentifier)' == '') OR $(RuntimeIdentifier.Contains('win'))">
        <DefineConstants>$(DefineConstants);WIN</DefineConstants>
        <IsWindows>true</IsWindows>
    </PropertyGroup>

    <ItemGroup>
        <AssemblyAttribute Include="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute"/>
    </ItemGroup>

    <ItemGroup Condition="Exists('$(ProjectDir)Assets/')">
        <None
            Update="$(ProjectDir)Assets/**"
            LinkBase="Assets"
            CopyToOutputDirectory="Always"
            CopyToPublishDirectory="Always"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="MonoMac.NetStandard" Version="0.0.4"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference
            Include="
          $(SolutionDir)4_Operation/**/**/generator/**/*Generator.csproj;
          $(SolutionDir)6_Ideation/**/**/generator/**/*Generator.csproj;"
            OutputItemType="Analyzer"
            PrivateAssets="all"
            ReferenceOutputAssembly="false"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="$(SolutionDir)2_Application/**/**/src/**/Alis.csproj;"/>
        <ProjectReference Include="$(SolutionDir)1_Presentation/**/**/src/**/Alis.Extension.*.csproj;"/>
    </ItemGroup>


    <Target Name="BuildAndCopyEngineOutput" AfterTargets="Build;Publish" Condition="$(AssemblyName.Equals('Alis.App.Hub'))">
        <MSBuild Projects="$(SolutionDir)1_Presentation/Engine/src/Alis.App.Engine.csproj" Targets="Build" Properties="Configuration=$(Configuration)"/>
        <PropertyGroup>
            <EngineOutputDir>$(SolutionDir)1_Presentation/Engine/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/</EngineOutputDir>
            <DestinationDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/Editor/v$(AssemblyVersion)/</DestinationDir>
        </PropertyGroup>
        <ItemGroup>
            <EngineOutputFiles Include="$(EngineOutputDir)**/*"/>
        </ItemGroup>
        <RemoveDir Directories="$(DestinationDir)"/>
        <MakeDir Directories="$(DestinationDir)"/>
        <Copy SourceFiles="@(EngineOutputFiles)" DestinationFiles="@(EngineOutputFiles->'$(DestinationDir)%(RecursiveDir)%(Filename)%(Extension)')"/>
    </Target>

    <Target Name="BuildAndCopyInstallerOutput" AfterTargets="Build;Publish" Condition="$(AssemblyName.Equals('Alis.App.Hub'))">
        <MSBuild Projects="$(SolutionDir)1_Presentation/Installer/src/Alis.App.Installer.csproj" Targets="Build" Properties="Configuration=$(Configuration)"/>
        <PropertyGroup>
            <InstallerOutputDir>$(SolutionDir)1_Presentation/Installer/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/</InstallerOutputDir>
            <DestinationDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/Installer/</DestinationDir>
        </PropertyGroup>
        <ItemGroup>
            <InstallerOutputFiles Include="$(InstallerOutputDir)**/*"/>
        </ItemGroup>
        <RemoveDir Directories="$(DestinationDir)"/>
        <MakeDir Directories="$(DestinationDir)"/>
        <Copy SourceFiles="@(InstallerOutputFiles)" DestinationFiles="@(InstallerOutputFiles->'$(DestinationDir)%(RecursiveDir)%(Filename)%(Extension)')"/>
    </Target>

    <Target Name="CreateMacOsBundle"
            AfterTargets="Build;Publish"
            Condition="$(AssemblyName.Equals('Alis.App.Hub')) 
                   And '$(IsOSX)' == 'true' 
                   And $(Configuration) == 'Release'">

        <PropertyGroup>
            <AppBundleDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/publish/Alis.app/</AppBundleDir>
            <ContentsDir>$(AppBundleDir)Contents/</ContentsDir>
            <MacOSDir>$(ContentsDir)MacOS/</MacOSDir>
            <ResourcesDir>$(ContentsDir)Resources/</ResourcesDir>
            <HubOutputDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/</HubOutputDir>
            <DmgFileName>$(HubOutputDir)publish/Alis_$(RuntimeIdentifier).dmg</DmgFileName>
        </PropertyGroup>

        <!-- Limpiar bundle anterior -->
        <RemoveDir Directories="$(AppBundleDir)"/>

        <!-- Crear estructura de carpetas -->
        <MakeDir Directories="$(MacOSDir)"/>
        <MakeDir Directories="$(ResourcesDir)"/>

        <!-- Archivos del Hub (excepto el .app) -->
        <ItemGroup>
            <HubOutputFiles Include="$(HubOutputDir)**/*" Exclude="$(AppBundleDir)**/*"/>
        </ItemGroup>

        <Copy SourceFiles="$(SolutionDir)1_Presentation/Hub/src/Properties/Info.plist"
              DestinationFolder="$(ContentsDir)"/>
        <Copy SourceFiles="$(SolutionDir)1_Presentation/Hub/src/Properties/logo.png"
              DestinationFolder="$(ResourcesDir)"/>

        <Copy SourceFiles="@(HubOutputFiles)"
              DestinationFiles="@(HubOutputFiles->'$(MacOSDir)%(RecursiveDir)%(Filename)%(Extension)')"/>

        <!-- Copiar Editor si existe -->
        <ItemGroup>
            <EditorFiles Include="$(HubOutputDir)Editor/**/*"/>
        </ItemGroup>
        <Copy SourceFiles="@(EditorFiles)"
              DestinationFiles="@(EditorFiles->'$(MacOSDir)Editor/%(RecursiveDir)%(Filename)%(Extension)')"
              Condition="Exists('$(HubOutputDir)Editor')"/>

        <!-- Borrar dmg previo -->
        <Delete Files="$(DmgFileName)"/>

        <!-- Desmontar volumen previo si quedÃ³ montado -->
        <Exec Command="hdiutil detach /Volumes/Alis || true" IgnoreExitCode="true"/>

        <!-- Crear dmg con reintento por si Spotlight bloquea -->
        <Exec Command="bash -c '
      for i in {1..3}; do
        hdiutil create -volname Alis -srcfolder &quot;$(AppBundleDir)&quot; -ov -format UDZO &quot;$(DmgFileName)&quot; &amp;&amp; exit 0
        echo &quot;Retrying dmg creation in 5s...&quot;
        sleep 5
      done
      exit 1
    '"/>
    </Target>

    <Target Name="CreateLinuxBundle" AfterTargets="Build;Publish" Condition="$(AssemblyName.Equals('Alis.App.Hub')) And '$(IsLinux)' == 'true' AND $(Configuration) == 'Release'">
        <PropertyGroup>
            <PublishDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/publish/</PublishDir>
            <HubOutputDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/</HubOutputDir>
            <ZipFileName>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/Alis_$(RuntimeIdentifier).zip</ZipFileName>
        </PropertyGroup>
        <ItemGroup>
            <HubOutputFiles Include="$(HubOutputDir)**/*" Exclude="$(PublishDir)**/*;$(HubOutputDir)**/*.zip"/>
        </ItemGroup>
        <RemoveDir Directories="$(PublishDir)"/>
        <MakeDir Directories="$(PublishDir)"/>
        <CreateItem Include="@(EngineOutputFiles)" AdditionalMetadata="MyRecursiveDir=%(RecursiveDir)">
            <Output TaskParameter="Include" ItemName="EngineOutputFilesWithMyRecursiveDir"/>
        </CreateItem>
        <CreateItem Include="@(InstallerOutputFiles)" AdditionalMetadata="MyRecursiveDir=%(RecursiveDir)">
            <Output TaskParameter="Include" ItemName="InstallerOutputFilesWithMyRecursiveDir"/>
        </CreateItem>
        <CreateItem Include="@(HubOutputFiles)" AdditionalMetadata="MyRecursiveDir=%(RecursiveDir)">
            <Output TaskParameter="Include" ItemName="HubOutputFilesWithMyRecursiveDir"/>
        </CreateItem>
        <Copy SourceFiles="@(HubOutputFilesWithMyRecursiveDir)" DestinationFiles="@(HubOutputFilesWithMyRecursiveDir->'$(PublishDir)%(MyRecursiveDir)%(Filename)%(Extension)')"/>
        <ItemGroup>
            <EditorFiles Include="$(HubOutputDir)Editor/**/*"/>
        </ItemGroup>
        <Copy SourceFiles="@(EditorFiles)" DestinationFiles="@(EditorFiles->'$(PublishDir)Editor/%(RecursiveDir)%(Filename)%(Extension)')" Condition="Exists('$(HubOutputDir)Editor')"/>
        <Delete Files="$(ZipFileName)"/>
        <ZipDirectory SourceDirectory="$(PublishDir)" DestinationFile="$(ZipFileName)"/>
    </Target>

    <Target Name="CreateWindowsBundle" AfterTargets="Build;Publish" Condition="$(AssemblyName.Equals('Alis.App.Hub')) And '$(IsWindows)' == 'true' AND $(Configuration) == 'Release'">
        <PropertyGroup>
            <PublishDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/publish/</PublishDir>
            <HubOutputDir>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/</HubOutputDir>
            <ZipFileName>$(SolutionDir)1_Presentation/Hub/src/bin/$(Configuration)/$(RuntimeIdentifier)/lib/Alis_$(RuntimeIdentifier).zip</ZipFileName>
        </PropertyGroup>
        <ItemGroup>
            <HubOutputFiles Include="$(HubOutputDir)**/*" Exclude="$(PublishDir)**/*;$(HubOutputDir)**/*.zip"/>
        </ItemGroup>
        <RemoveDir Directories="$(PublishDir)"/>
        <MakeDir Directories="$(PublishDir)"/>
        <CreateItem Include="@(EngineOutputFiles)" AdditionalMetadata="MyRecursiveDir=%(RecursiveDir)">
            <Output TaskParameter="Include" ItemName="EngineOutputFilesWithMyRecursiveDir"/>
        </CreateItem>
        <CreateItem Include="@(InstallerOutputFiles)" AdditionalMetadata="MyRecursiveDir=%(RecursiveDir)">
            <Output TaskParameter="Include" ItemName="InstallerOutputFilesWithMyRecursiveDir"/>
        </CreateItem>
        <CreateItem Include="@(HubOutputFiles)" AdditionalMetadata="MyRecursiveDir=%(RecursiveDir)">
            <Output TaskParameter="Include" ItemName="HubOutputFilesWithMyRecursiveDir"/>
        </CreateItem>
        <Copy SourceFiles="@(HubOutputFilesWithMyRecursiveDir)" DestinationFiles="@(HubOutputFilesWithMyRecursiveDir->'$(PublishDir)%(MyRecursiveDir)%(Filename)%(Extension)')"/>
        <ItemGroup>
            <EditorFiles Include="$(HubOutputDir)Editor/**/*"/>
        </ItemGroup>
        <Copy SourceFiles="@(EditorFiles)" DestinationFiles="@(EditorFiles->'$(PublishDir)Editor/%(RecursiveDir)%(Filename)%(Extension)')" Condition="Exists('$(HubOutputDir)Editor')"/>
        <Delete Files="$(ZipFileName)"/>
        <ZipDirectory SourceDirectory="$(PublishDir)" DestinationFile="$(ZipFileName)"/>
    </Target>

</Project>