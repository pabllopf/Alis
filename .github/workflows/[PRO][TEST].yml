name: "[PRO][TEST]"

on:
  push:
    branches: [ master ]

jobs:
  macos_13_x64:
    runs-on: macOS-13
    if: "contains(github.event.head_commit.message, 'test: pro')"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            3.0.103
            3.1.426
            5.0.408
            6.0.420
            7.0.408
            8.0.202
            9.x.x

      - name: install
        run: |
          brew install sdl2 sdl2_image sdl2_ttf ffmpeg
          brew link ffmpeg

      - name: Dotnet test Release
        run: dotnet test alis.sln -c Release -f net8.0
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - uses: dorny/test-reporter@v1
        with:
          name: MacOs 12 x64 Test Report                  # Name of the check run which will be created
          path: '.test/**/**/*.trx'                     # Path to test results (inside artifact .zip)
          reporter: dotnet-trx              # Format of test results

  windows_2022_x64:
    runs-on: windows-2022
    if: "contains(github.event.head_commit.message, 'test: pro')"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            3.0.103
            3.1.426
            5.0.408
            6.0.420
            7.0.408
            8.0.202
            9.x.x

      - name: install
        run: |
          choco install ffmpeg -y

      - name: Dotnet test Release
        run: dotnet test alis.sln -c Release -f net8.0
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - uses: dorny/test-reporter@v1
        with:
          name: Windows 2022 x64 Test Report                  # Name of the check run which will be created
          path: '.test/**/**/*.trx'                     # Path to test results (inside artifact .zip)
          reporter: dotnet-trx              # Format of test results

  ubuntu_22_04_x64:
    runs-on: ubuntu-22.04
    if: "contains(github.event.head_commit.message, 'test: pro')"
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            3.0.103
            3.1.426
            5.0.408
            6.0.420
            7.0.408
            8.0.202
            9.x.x

      - name: install
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev ffmpeg

      - name: free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Dotnet test Release
        run: dotnet test alis.sln -c Release -f net8.0
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - uses: dorny/test-reporter@v1
        with:
          name: Ubuntu 22_04 x64 Test Report                  # Name of the check run which will be created
          path: '.test/**/**/*.trx'                      # Path to test results (inside artifact .zip)
          reporter: dotnet-trx              # Format of test results

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: |
            .test/**/**/*.trx

      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@v2.0.3
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for master branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'master' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/master'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.github.com/pabllopf/46071d4896642c7fad2dc67a5abebb5c
          file: badge.svg
