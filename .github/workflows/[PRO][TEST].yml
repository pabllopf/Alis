name: "[PRO][TEST]"

on:
  schedule:
    - cron: '30 1 * * *'
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.git/**'
      - '.config/**'

jobs:
  Run_Test_On_MacOs_Latest:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Dotnet test Debug
        run: dotnet test alis.sln --configuration Debug

      - name: Dotnet test Release
        run: dotnet test alis.sln --configuration Release

      - uses: dorny/test-reporter@v1
        with:
          name: MacOs Test Report                  # Name of the check run which will be created
          path: './.test/*.trx'                     # Path to test results (inside artifact .zip)
          reporter: dotnet-trx              # Format of test results
  
  Run_Test_On_Windows_Latest:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Dotnet test Debug
        run: dotnet test alis.sln --configuration Debug

      - name: Dotnet test Release
        run: dotnet test alis.sln --configuration Release

      - uses: dorny/test-reporter@v1
        with:
          name: Windows Test Report                  # Name of the check run which will be created
          path: './.test/*.trx'                     # Path to test results (inside artifact .zip)
          reporter: dotnet-trx              # Format of test results
  
  Run_Test_On_Ubuntu_Latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: update
        run: sudo apt-get update

      - name: Setup Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install wayland-protocols \
            pkg-config \
            ninja-build \
            libasound2-dev \
            libdbus-1-dev \
            libegl1-mesa-dev \
            libgl1-mesa-dev \
            libgles2-mesa-dev \
            libglu1-mesa-dev \
            libibus-1.0-dev \
            libpulse-dev \
            libsdl2-2.0-0 \
            libsndio-dev \
            libudev-dev \
            libwayland-dev \
            libwayland-client++0 \
            wayland-scanner++ \
            libwayland-cursor++0 \
            libx11-dev \
            libxcursor-dev \
            libxext-dev \
            libxi-dev \
            libxinerama-dev \
            libxkbcommon-dev \
            libxrandr-dev \
            libxss-dev \
            libxt-dev \
            libxv-dev \
            libxxf86vm-dev \
            libdrm-dev \
            libgbm-dev\
            libpulse-dev
          
      - name: Install SDL2
        run: sudo apt-get install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
  
      - name: update
        run: sudo apt-get install wayland-protocols pkg-config ninja-build
        
      - name: Dotnet test Debug
        run: dotnet test alis.sln --configuration Debug

      - name: Dotnet test Release
        run: dotnet test alis.sln --configuration Release

      - uses: dorny/test-reporter@v1
        with:
          name: Ubuntu Test Report                  # Name of the check run which will be created
          path: './.test/*.trx'                     # Path to test results (inside artifact .zip)
          reporter: dotnet-trx              # Format of test results

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: |
            .test/**/*.trx

      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for master branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'master' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/master'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.github.com/pabllopf/46071d4896642c7fad2dc67a5abebb5c
          file: badge.svg
    
