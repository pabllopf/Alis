name: "[PRO][SONARCLOUD]"

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'releases/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: windows-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install SDL2 and ffmpeg dependencies
      - name: Install dependencies
        run: |
          choco install ffmpeg -y

      # 3. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      # 4. Setup .NET 8.0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            3.0.103
            3.1.426
            5.0.408
            6.0.420
            7.0.408
            8.0.202
            9.x.x
            
      # 7. Run tests
      - name: Run tests
        run: |
          dotnet tool install --global dotnet-coverage
          
          # Utiliza la ruta a tu soluci√≥n (.sln) en el comando dotnet-coverage collect
          dotnet-coverage collect "dotnet test -c Release -f net8.0 .\\alis.sln" -f xml -o "coverage.xml"

      - name: SonarQube Scan
        run: |
          dotnet tool install --global dotnet-coverage --version 17.13.1
          dotnet tool install --global dotnet-sonarscanner --version 8.0.2
          
          dotnet sonarscanner begin /k:"pabllopf_Alis" /o:"pabllopf" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.scanner.skipJreProvisioning=true /d:sonar.scanner.scanAll=true /d:sonar.language=cs /d:sonar.dotnet.version=8.0 /d:sonar.cs.ignoreHeaderComments=true /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.verbose=true

          dotnet build --no-incremental
          
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          
          dotnet sonarscanner end /d:sonar.token="<sonar-token>"


          
