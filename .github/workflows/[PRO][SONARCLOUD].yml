name: "[PRO][SONARCLOUD]"

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'releases/**'
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build-and-analyze:
    runs-on: macOS-13

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install SDL2 and ffmpeg dependencies
      - name: install
        run: |
          brew install sdl2 sdl2_image sdl2_ttf ffmpeg
          brew link ffmpeg

      # 3. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      # 4. Setup .NET 8.0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            3.0.103
            3.1.426
            5.0.408
            6.0.420
            7.0.408
            8.0.202
            9.x.x

      - name: SonarQube Scan
        run: |
          dotnet tool install --global coverlet.console --version 6.0.3
          dotnet tool install --global dotnet-sonarscanner --version 8.0.2

          dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /o:"${{ secrets.SONAR_ORGANIZATION }}" /d:sonar.scanner.scanAll=false /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.scanner.skipJreProvisioning=true /d:sonar.language=cs /d:sonar.dotnet.version=8.0 /d:sonar.verbose=true /d:sonar.cs.opencover.reportsPaths="./.test/**/*.opencover.xml"
          dotnet build --no-incremental -c Release -f net8.0 ./alis.sln
          dotnet test --no-build -f net8.0 -c Release ./alis.sln --collect "XPlat Code Coverage;Format=opencover" --results-directory ./.test
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
