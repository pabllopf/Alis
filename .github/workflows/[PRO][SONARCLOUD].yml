name: "[PRO][SONARCLOUD]"
on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-2022
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.420

      - name: Install FFmpeg
        run: |
          choco install ffmpeg -y

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          # Install coverage and coverlet
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global coverlet.console
          dotnet tool install --global JetBrains.dotCover.GlobalTool

          # Run SonarCloud Scanner with coverage results
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"pabllopf_Alis" /o:"pabllopf" /d:sonar.scanner.scanAll=false /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
          
          dotnet build â€“no-incremental -c Release -f net6.0
          dotnet dotcover test --dcReportType=HTML
          
          # End SonarCloud analysis
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
