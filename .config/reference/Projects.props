<?xml version="1.0" encoding="utf-8"?>
<Project>
    
    <ItemGroup>
        <ProjectReference Condition="
            '$(ProjectDir)' != '' AND 
            $(ProjectDir.Contains('1_Presentation')) AND 
            $([System.Text.RegularExpressions.Regex]::IsMatch($(ProjectDir), 'Extension|Engine|Hub|Installer'))" 
                          Include="$(SolutionDir)2_Application/**/src/**/Alis.csproj;"/>

        <ProjectReference Condition="
            '$(ProjectDir)' != '' AND 
            $(ProjectDir.Contains('1_Presentation')) AND 
            $([System.Text.RegularExpressions.Regex]::IsMatch($(ProjectDir), 'Engine|Hub|Installer'))" 
                          Include="$(SolutionDir)1_Presentation/**/Extension/**/src/**/*.csproj;"/>
    </ItemGroup>

    <ItemGroup Condition="
        $(AssemblyName.Contains('Test')) == False AND
        $(AssemblyName.Contains('Sample')) == False AND
        $(AssemblyName.Contains('Template')) == False AND 
        $(AssemblyName.Contains('Benchmark')) == False AND 
        $(AssemblyName.Contains('Generator')) == False AND
        $(Configuration) == 'Debug'">
        
        <ProjectReference Condition="$(ProjectDir.Contains('2_Application'))"
                          Include="$(SolutionDir)3_Structuration/**/*.csproj"
                          Exclude="
                          $(SolutionDir)3_Structuration/**/*.Sample.csproj; 
                          $(SolutionDir)**/**/*Generator*.csproj; 
                          $(SolutionDir)3_Structuration/**/*.Test.csproj;
                          $(SolutionDir)**/**/*.Benchmark.csproj; 
                          $(SolutionDir)**/**/*Benchmark*.csproj; 
                          $(SolutionDir)**/Extension/**/**/*.csproj;"/>

        <ProjectReference Condition="$(ProjectDir.Contains('3_Structuration'))"
                          Include="$(SolutionDir)4_Operation/**/*.csproj"
                          Exclude="
                          $(SolutionDir)4_Operation/**/*.Sample.csproj; 
                          $(SolutionDir)**/**/*Generator*.csproj; 
                          $(SolutionDir)4_Operation/**/*.Test.csproj;
                          $(SolutionDir)**/**/*.Benchmark.csproj; 
                          $(SolutionDir)**/**/*Benchmark*.csproj; 
                          $(SolutionDir)**/Extension/**/**/*.csproj;"/>

        <ProjectReference Condition="$(ProjectDir.Contains('4_Operation'))"
                          Include="$(SolutionDir)5_Declaration/**/*.csproj"
                          Exclude="
                          $(SolutionDir)5_Declaration/**/*.Sample.csproj; 
                          $(SolutionDir)**/**/*Generator*.csproj; 
                          $(SolutionDir)5_Declaration/**/*.Test.csproj;
                          $(SolutionDir)**/Extension/**/**/*.Benchmark.csproj; 
                          $(SolutionDir)**/Extension/**/**/*Benchmark*.csproj; 
                          $(SolutionDir)**/Extension/**/**/*.csproj;"/>

        <ProjectReference Condition="$(ProjectDir.Contains('5_Declaration'))"
                          Include="$(SolutionDir)6_Ideation/**/*.csproj"
                          Exclude="
                          $(SolutionDir)6_Ideation/**/*.Sample.csproj; 
                          $(SolutionDir)**/**/*Generator*.csproj; 
                          $(SolutionDir)6_Ideation/**/*.Test.csproj;
                          $(SolutionDir)**/**/*.Benchmark.csproj; 
                          $(SolutionDir)**/**/*Benchmark*.csproj; 
                          $(SolutionDir)**/Extension/**/**/*.csproj;"/>
    </ItemGroup>

    <ItemGroup Condition="
        $(AssemblyName.Contains('Test')) == False AND
        $(AssemblyName.Contains('Sample')) == False AND
        $(AssemblyName.Contains('Template')) == False AND 
        $(AssemblyName.Contains('Benchmark')) == False AND
        $(AssemblyName.Contains('Generator')) == False AND
        $(Configuration) == 'Release'">
        
        <Compile Condition="$(ProjectDir.Contains('2_Application'))"
                 Include="$(SolutionDir)3_Structuration/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>

        <Compile Condition="$(ProjectDir.Contains('2_Application'))"
                 Include="$(SolutionDir)4_Operation/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="Core/$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>

        <Compile Condition="$(ProjectDir.Contains('2_Application'))"
                 Include="$(SolutionDir)5_Declaration/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="Core/$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>

        <Compile Condition="$(ProjectDir.Contains('2_Application'))"
                 Include="$(SolutionDir)6_Ideation/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="Core/Aspect/$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>


        <Compile Condition="$(ProjectDir.Contains('3_Structuration'))"
                 Include="$(SolutionDir)4_Operation/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>

        <Compile Condition="$(ProjectDir.Contains('3_Structuration')) OR $(ProjectDir.Contains('4_Operation'))"
                 Include="$(SolutionDir)5_Declaration/**/src/**/*.resx"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>

        <Compile Condition="$(ProjectDir.Contains('3_Structuration')) OR $(ProjectDir.Contains('4_Operation'))"
                 Include="$(SolutionDir)6_Ideation/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="Aspect/$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>
        
        <Compile Condition="$(ProjectDir.Contains('5_Declaration'))"
                 Include="$(SolutionDir)6_Ideation/**/src/**/*.cs;"
                 Exclude="$(SolutionDir)**/obj/**/*.cs;$(SolutionDir)**/bin/**/*.cs;"
                 Link="$([System.String]::Copy('%(RecursiveDir)').Replace('src',''))%(Filename)%(Extension)"/>
    </ItemGroup>

    <ItemGroup  Condition="
        $(AssemblyName.Contains('Generator')) == False AND
        (
            $(AssemblyName.Equals('Alis')) OR 
            $(AssemblyName.Contains('Alis.Sample')) OR 
            $(AssemblyName.Equals('Alis.Test')) OR 
            $(AssemblyName.Equals('Alis.Core')) OR
            $(AssemblyName.Contains('Alis.Core.Sample')) OR 
            $(AssemblyName.Equals('Alis.Core.Test')) OR 
            $(AssemblyName.Equals('Alis.Core.Ecs')) OR
            $(AssemblyName.Contains('Alis.Core.Ecs.Sample')) OR 
            $(AssemblyName.Equals('Alis.Core.Ecs.Test'))
        )
    ">
        <ProjectReference
            Include="$(SolutionDir)4_Operation/Ecs/generator/Alis.Core.Ecs.Generator.csproj"
            OutputItemType="Analyzer"
            ReferenceOutputAssembly="false"/>
    </ItemGroup>


    <PropertyGroup Condition="$(AssemblyName.Contains('Test'))">
        <NameTest>$([System.Text.RegularExpressions.Regex]::Replace('$(AssemblyName)', '.[^.]*Test[^*]*', ''))</NameTest>
    </PropertyGroup>

    <ItemGroup Condition="$(AssemblyName.Contains('Test'))">
        <ProjectReference
            Condition="Exists('$(ProjectDir)/../src/$(NameTest).csproj') == True"
            Include="$(ProjectDir)/../src/$(NameTest).csproj"/>
    </ItemGroup>


    <PropertyGroup Condition="$(AssemblyName.Contains('Sample'))">
        <NameTest>$([System.Text.RegularExpressions.Regex]::Replace('$(AssemblyName)', '.[^.]*Sample[^*]*', ''))</NameTest>
    </PropertyGroup>
    
    <ItemGroup Condition="$(AssemblyName.Contains('Sample'))">
        <ProjectReference
            Condition="Exists('$(ProjectDir)/../src/$(NameTest).csproj') == True"
            Include="$(ProjectDir)/../src/$(NameTest).csproj"/>

        <ProjectReference
            Condition="Exists('$(ProjectDir)/../src/$(NameTest).csproj') == False"
            Include="$(ProjectDir)/../../src/$(NameTest).csproj"/>
    </ItemGroup>


   
    
</Project>