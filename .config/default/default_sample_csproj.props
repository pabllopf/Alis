<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <OutputType>Exe</OutputType>
        <OutDir>bin/$(Configuration)/$(RuntimeIdentifier)/lib/</OutDir>
        <LangVersion>13</LangVersion>
        <Nullable>disable</Nullable>
        <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
        <SonarQubeExclude>true</SonarQubeExclude>
    </PropertyGroup>
    
    <ItemGroup>
        <AssemblyAttribute Include="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute"/>
    </ItemGroup>

    <ItemGroup Condition="Exists('$(ProjectDir)Assets/')">
        <None
            Update="$(ProjectDir)Assets/**"
            LinkBase="Assets"
            CopyToOutputDirectory="Always"
            CopyToPublishDirectory="Always"/>
    </ItemGroup>

    <PropertyGroup>
        <NameTest>$([System.Text.RegularExpressions.Regex]::Replace('$(AssemblyName)', '.[^.]*Sample[^*]*', ''))</NameTest>
    </PropertyGroup>

    <PropertyGroup Condition="($([MSBuild]::IsOSPlatform('linux')) AND '$(RuntimeIdentifier)' == '') OR $(RuntimeIdentifier.Contains('linux'))">
        <DefineConstants>$(DefineConstants);LINUX</DefineConstants>
        <IsLinux>true</IsLinux>
    </PropertyGroup>

    <PropertyGroup Condition="($([MSBuild]::IsOSPlatform('osx')) AND '$(RuntimeIdentifier)' == '')  OR $(RuntimeIdentifier.Contains('osx'))">
        <DefineConstants>$(DefineConstants);OSX</DefineConstants>
        <IsOSX>true</IsOSX>
    </PropertyGroup>

    <PropertyGroup Condition="($([MSBuild]::IsOSPlatform('windows')) AND '$(RuntimeIdentifier)' == '') OR $(RuntimeIdentifier.Contains('win'))">
        <DefineConstants>$(DefineConstants);WIN</DefineConstants>
        <IsWindows>true</IsWindows>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference
            Condition="Exists('$(ProjectDir)../src/$(NameTest).csproj') == True"
            Include="$(ProjectDir)../src/$(NameTest).csproj"/>

        <ProjectReference
            Condition="Exists('$(ProjectDir)../src/$(NameTest).csproj') == False"
            Include="$(ProjectDir)../../src/$(NameTest).csproj"/>
        
        <ProjectReference
            Condition="Exists('$(ProjectDir)../generator/$(NameTest).Generator.csproj')"
            Include="$(ProjectDir)../generator/$(NameTest).Generator.csproj"
            OutputItemType="Analyzer"
            PrivateAssets="all"
            ReferenceOutputAssembly="false"/>
    </ItemGroup>


    <ItemGroup Condition="$(AssemblyName.Contains('Generator')) == false">
        <ProjectReference Condition="$(ProjectDir.Contains('1_Presentation')) OR $(ProjectDir.Contains('2_Application'))"
                          Include="
          $(SolutionDir)4_Operation/**/**/generator/**/*Generator.csproj;
          $(SolutionDir)6_Ideation/**/**/generator/**/*Generator.csproj;"
                          OutputItemType="Analyzer"
                          PrivateAssets="all"
                          ReferenceOutputAssembly="false"/>
    </ItemGroup>

</Project>