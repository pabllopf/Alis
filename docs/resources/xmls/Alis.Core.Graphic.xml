<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core.Graphic</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.Graphic.D2.FrameBase">
            <summary>
                The frame base class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.FrameBase.filePath">
            <summary>
                The file path
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.FrameBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.D2.FrameBase" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.FrameBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.D2.FrameBase" /> class
            </summary>
            <param name="filePath">The file path</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.FrameBase.Texture">
            <summary>
                Gets or sets the value of the texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.FrameBase.SetFrame(System.String)">
            <summary>
                Sets the frame using the specified file path
            </summary>
            <param name="filePath">The file path</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode">
            <summary>
                Blending modes for drawing
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor">
            <summary>
                Enumeration of the blending factors
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.Zero">
            <summary>(0, 0, 0, 0)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.One">
            <summary>(1, 1, 1, 1)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.SrcColor">
            <summary>(src.r, src.g, src.b, src.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.OneMinusSrcColor">
            <summary>(1, 1, 1, 1) - (src.r, src.g, src.b, src.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.DstColor">
            <summary>(dst.r, dst.g, dst.b, dst.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.OneMinusDstColor">
            <summary>(1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.SrcAlpha">
            <summary>(src.a, src.a, src.a, src.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.OneMinusSrcAlpha">
            <summary>(1, 1, 1, 1) - (src.a, src.a, src.a, src.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.DstAlpha">
            <summary>(dst.a, dst.a, dst.a, dst.a)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor.OneMinusDstAlpha">
            <summary>(1, 1, 1, 1) - (dst.a, dst.a, dst.a, dst.a)</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation">
            <summary>
                Enumeration of the blending equations
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation.Add">
            <summary>Pixel = Src * SrcFactor + Dst * DstFactor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation.Subtract">
            <summary>Pixel = Src * SrcFactor - Dst * DstFactor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation.ReverseSubtract">
            <summary>Pixel = Dst * DstFactor - Src * SrcFactor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Alpha">
            <summary>Blend source and dest according to dest alpha</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Add">
            <summary>Add source to dest</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Multiply">
            <summary>Multiply source and dest</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.None">
            <summary>Overwrite dest with source</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor)">
            <summary>
                Construct the blend mode given the factors and equation
            </summary>
            <param name="sourceFactor">Specifies how to compute the source factor for the color and alpha channels.</param>
            <param name="destinationFactor">Specifies how to compute the destination factor for the color and alpha channels.</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation)">
            <summary>
                Construct the blend mode given the factors and equation
            </summary>
            <param name="sourceFactor">Specifies how to compute the source factor for the color and alpha channels.</param>
            <param name="destinationFactor">Specifies how to compute the destination factor for the color and alpha channels.</param>
            <param name="blendEquation">Specifies how to combine the source and destination colors and alpha.</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Factor,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equation)">
            <summary>
                Construct the blend mode given the factors and equation
            </summary>
            <param name="colorSourceFactor">Specifies how to compute the source factor for the color channels.</param>
            <param name="colorDestinationFactor">Specifies how to compute the destination factor for the color channels.</param>
            <param name="colorBlendEquation">Specifies how to combine the source and destination colors.</param>
            <param name="alphaSourceFactor">Specifies how to compute the source factor.</param>
            <param name="alphaDestinationFactor">Specifies how to compute the destination factor.</param>
            <param name="alphaBlendEquation">Specifies how to combine the source and destination alphas.</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.op_Equality(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode)">
            <summary>
                Compare two blend modes and checks if they are equal
            </summary>
            <returns>Blend Modes are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.op_Inequality(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode,Alis.Core.Graphic.D2.SFML.Graphics.BlendMode)">
            <summary>
                Compare two blend modes and checks if they are not equal
            </summary>
            <returns>Blend Modes are not equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equals(System.Object)">
            <summary>
                Compare blend mode and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and blend mode are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.Equals(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode)">
            <summary>
                Compare two blend modes and checks if they are equal
            </summary>
            <param name="other">Blend Mode to check</param>
            <returns>blend modes are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.ColorSrcFactor">
            <summary>Source blending factor for the color channels</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.ColorDstFactor">
            <summary>Destination blending factor for the color channels</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.ColorEquation">
            <summary>Blending equation for the color channels</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.AlphaSrcFactor">
            <summary>Source blending factor for the alpha channel</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.AlphaDstFactor">
            <summary>Destination blending factor for the alpha channel</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.BlendMode.AlphaEquation">
            <summary>Blending equation for the alpha channel</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape">
            <summary>
                Specialized shape representing a circle
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.myPointCount">
            <summary>
                The my point count
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.myRadius">
            <summary>
                The my radius
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.#ctor(System.Single)">
            <summary>
                Construct the shape with an initial radius
            </summary>
            <param name="radius">Radius of the shape</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.#ctor(System.Single,System.UInt32)">
            <summary>
                Construct the shape with an initial radius and point count
            </summary>
            <param name="radius">Radius of the shape</param>
            <param name="pointCount">Number of points of the shape</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.CircleShape)">
            <summary>
                Construct the shape from another shape
            </summary>
            <param name="copy">Shape to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.Radius">
            <summary>
                The radius of the shape
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.GetPointCount">
            <summary>
                Get the total number of points of the circle
            </summary>
            <returns>The total point count</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.SetPointCount(System.UInt32)">
            <summary>
                Set the number of points of the circle.
                The count must be greater than 2 to define a valid shape.
            </summary>
            <param name="count">New number of points of the circle</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.CircleShape.GetPoint(System.UInt32)">
            <summary>
                Get the position of a point
                The returned point is in local coordinates, that is,
                the shape's transforms (position, rotation, scale) are
                not taken into account.
                The result is undefined if index is out of the valid range.
            </summary>
            <param name="index">Index of the point to get, in range [0 .. PointCount - 1]</param>
            <returns>index-th point of the shape</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Clock">
            <summary>
                Utility class that measures the elapsed time
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.#ctor">
            <summary>
                Default Constructor
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Clock.ElapsedTime">
            <summary>
                Gets the time elapsed since the last call to Restart
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.Restart">
            <summary>
                This function puts the time counter back to zero.
            </summary>
            <returns>Time elapsed since the clock was started.</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.sfClock_create">
            <summary>
                Sfs the clock create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.sfClock_destroy(System.IntPtr)">
            <summary>
                Sfs the clock destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.sfClock_getElapsedTime(System.IntPtr)">
            <summary>
                Sfs the clock get elapsed time using the specified clock
            </summary>
            <param name="clock">The clock</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Clock.sfClock_restart(System.IntPtr)">
            <summary>
                Sfs the clock restart using the specified clock
            </summary>
            <param name="clock">The clock</param>
            <returns>The time</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Color">
            <summary>
                Utility class for manipulating 32-bits RGBA colors
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
                Construct the color from its red, green and blue components
            </summary>
            <param name="red">Red component</param>
            <param name="green">Green component</param>
            <param name="blue">Blue component</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Construct the color from its red, green, blue and alpha components
            </summary>
            <param name="red">Red component</param>
            <param name="green">Green component</param>
            <param name="blue">Blue component</param>
            <param name="alpha">Alpha (transparency) component</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.#ctor(System.UInt32)">
            <summary>
                Construct the color from 32-bit unsigned integer
            </summary>
            <param name="color">Number containing the RGBA components (in that order)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Construct the color from another
            </summary>
            <param name="color">Color to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.ToInteger">
            <summary>
                Convert a color to a 32-bit unsigned integer
            </summary>
            <returns>Color represented as a 32-bit unsigned integer</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.Equals(System.Object)">
            <summary>
                Compare color and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and color are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.Equals(Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Compare two colors and checks if they are equal
            </summary>
            <param name="other">Color to check</param>
            <returns>Colors are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.op_Equality(Alis.Core.Graphic.D2.SFML.Graphics.Color,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Compare two colors and checks if they are equal
            </summary>
            <returns>Colors are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.op_Inequality(Alis.Core.Graphic.D2.SFML.Graphics.Color,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Compare two colors and checks if they are not equal
            </summary>
            <returns>Colors are not equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.op_Addition(Alis.Core.Graphic.D2.SFML.Graphics.Color,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                This operator returns the component-wise sum of two colors.
                Components that exceed 255 are clamped to 255.
            </summary>
            <returns>Result of left + right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.op_Subtraction(Alis.Core.Graphic.D2.SFML.Graphics.Color,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                This operator returns the component-wise subtraction of two colors.
                Components below 0 are clamped to 0.
            </summary>
            <returns>Result of left - right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Color.op_Multiply(Alis.Core.Graphic.D2.SFML.Graphics.Color,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                This operator returns the component-wise multiplication of two colors.
                Components above 255 are clamped to 255.
            </summary>
            <returns>Result of left * right</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.R">
            <summary>Red component of the color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.G">
            <summary>Green component of the color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.B">
            <summary>Blue component of the color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.A">
            <summary>Alpha (transparent) component of the color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Black">
            <summary>Predefined black color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.White">
            <summary>Predefined white color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Red">
            <summary>Predefined red color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Green">
            <summary>Predefined green color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Blue">
            <summary>Predefined blue color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Yellow">
            <summary>Predefined yellow color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Magenta">
            <summary>Predefined magenta color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Cyan">
            <summary>Predefined cyan color</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Color.Transparent">
            <summary>Predefined (black) transparent color</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape">
            <summary>
                Specialized shape representing a convex polygon
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.myPoints">
            <summary>
                The my points
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.#ctor(System.UInt32)">
            <summary>
                Construct the shape with an initial point count
            </summary>
            <param name="pointCount">Number of points of the shape</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape)">
            <summary>
                Construct the shape from another shape
            </summary>
            <param name="copy">Shape to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.GetPointCount">
            <summary>
                Get the total number of points of the polygon
            </summary>
            <returns>The total point count</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.SetPointCount(System.UInt32)">
            <summary>
                Set the number of points of the polygon.
                The count must be greater than 2 to define a valid shape.
            </summary>
            <param name="count">New number of points of the polygon</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.GetPoint(System.UInt32)">
            <summary>
                Get the position of a point
                The returned point is in local coordinates, that is,
                the shape's transforms (position, rotation, scale) are
                not taken into account.
                The result is undefined if index is out of the valid range.
            </summary>
            <param name="index">Index of the point to get, in range [0 .. PointCount - 1]</param>
            <returns>index-th point of the shape</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.ConvexShape.SetPoint(System.UInt32,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Set the position of a point.
                Don't forget that the polygon must remain convex, and
                the points need to stay ordered!
                PointCount must be set first in order to set the total
                number of points. The result is undefined if index is out
                of the valid range.
            </summary>
            <param name="index">Index of the point to change, in range [0 .. PointCount - 1]</param>
            <param name="point">New position of the point</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.IDrawable">
            <summary>
                Interface for every object that can be drawn to a render window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IDrawable.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw the object to a render target
                This is a function that has to be implemented by the
                derived class to define how the drawable should be drawn.
            </summary>
            <param name="target">Render target to draw to</param>
            <param name="states">Current render states</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Font">
            <summary>
                Font is the low-level class for loading and
                manipulating character fonts. This class is meant to
                be used by String2D
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Font.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Font.myTextures">
            <summary>
                The texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.#ctor(System.String)">
            <summary>
                Construct the font from a file
            </summary>
            <param name="filename">Font file to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.#ctor(System.IO.Stream)">
            <summary>
                Construct the font from a custom stream
            </summary>
            <param name="stream">Source stream to read from</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.#ctor(System.Byte[])">
            <summary>
                Construct the font from a file in memory
            </summary>
            <param name="bytes">Byte array containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Font)">
            <summary>
                Construct the font from another font
            </summary>
            <param name="copy">Font to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.#ctor(System.IntPtr)">
            <summary>
                Internal constructor
            </summary>
            <param name="cPointer">Pointer to the object in C library</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetGlyph(System.UInt32,System.UInt32,System.Boolean,System.Single)">
            <summary>
                Get a glyph in the font
            </summary>
            <param name="codePoint">Unicode code point of the character to get</param>
            <param name="characterSize">Character size</param>
            <param name="bold">Retrieve the bold version or the regular one?</param>
            <param name="outlineThickness">Thickness of outline (when != 0 the glyph will not be filled)</param>
            <returns>The glyph corresponding to the character</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetKerning(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Get the kerning offset between two glyphs
            </summary>
            <param name="first">Unicode code point of the first character</param>
            <param name="second">Unicode code point of the second character</param>
            <param name="characterSize">Character size</param>
            <returns>Kerning offset, in pixels</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetLineSpacing(System.UInt32)">
            <summary>
                Get spacing between two consecutive lines
            </summary>
            <param name="characterSize">Character size</param>
            <returns>Line spacing, in pixels</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetUnderlinePosition(System.UInt32)">
            <summary>
                Get the position of the underline
            </summary>
            <param name="characterSize">Character size</param>
            <returns>Underline position, in pixels</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetUnderlineThickness(System.UInt32)">
            <summary>
                Get the thickness of the underline
            </summary>
            <param name="characterSize">Character size</param>
            <returns>Underline thickness, in pixels</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetTexture(System.UInt32)">
            <summary>
                Get the texture containing the glyphs of a given size
            </summary>
            <param name="characterSize">Character size</param>
            <returns>Texture storing the glyphs for the given size</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.GetInfo">
            <summary>
                Get the font information
            </summary>
            <returns>A structure that holds the font information</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_createFromFile(System.String)">
            <summary>
                Sfs the font create from file using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_createFromStream(System.IntPtr)">
            <summary>
                Sfs the font create from stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_createFromMemory(System.IntPtr,System.UInt64)">
            <summary>
                Sfs the font create from memory using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_copy(System.IntPtr)">
            <summary>
                Sfs the font copy using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_destroy(System.IntPtr)">
            <summary>
                Sfs the font destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getGlyph(System.IntPtr,System.UInt32,System.UInt32,System.Boolean,System.Single)">
            <summary>
                Sfs the font get glyph using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="codePoint">The code point</param>
            <param name="characterSize">The character size</param>
            <param name="bold">The bold</param>
            <param name="outlineThickness">The outline thickness</param>
            <returns>The glyph</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getKerning(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Sfs the font get kerning using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="first">The first</param>
            <param name="second">The second</param>
            <param name="characterSize">The character size</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getLineSpacing(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the font get line spacing using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="characterSize">The character size</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getUnderlinePosition(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the font get underline position using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="characterSize">The character size</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getUnderlineThickness(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the font get underline thickness using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="characterSize">The character size</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getTexture(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the font get texture using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="characterSize">The character size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Font.sfFont_getInfo(System.IntPtr)">
            <summary>
                Sfs the font get info using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The info marshal data</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Font.Info">
            <summary>
                Info holds various information about a font
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Font.Info.Family">
            <summary>The font family</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Font.InfoMarshalData">
            <summary>
                Internal struct used for marshaling the font info
                struct from unmanaged code.
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Font.InfoMarshalData.Family">
            <summary>
                The family
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Glyph">
            <summary>
                Structure describing a glyph (a visual character)
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Glyph.Advance">
            <summary>Offset to move horizontally to the next character</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Glyph.Bounds">
            <summary>Bounding rectangle of the glyph, in coordinates relative to the baseline</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Glyph.TextureRect">
            <summary>Texture coordinates of the glyph inside the font's texture</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Image">
            <summary>
                Image is the low-level class for loading and
                manipulating images
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the image with black color
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Construct the image from a single color
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="color">Color to fill the image with</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.String)">
            <summary>
                Construct the image from a file
            </summary>
            <param name="filename">Path of the image file to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.IO.Stream)">
            <summary>
                Construct the image from a file in a stream
            </summary>
            <param name="stream">Stream containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.Byte[])">
            <summary>
                Construct the image from a file in memory
            </summary>
            <param name="bytes">Byte array containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Color[0:,0:])">
            <summary>
                Construct the image directly from an array of pixels
            </summary>
            <param name="pixels">2 dimensions array containing the pixels</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
                Construct the image directly from an array of pixels
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="pixels">array containing the pixels</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Image)">
            <summary>
                Construct the image from another image
            </summary>
            <param name="copy">Image to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.#ctor(System.IntPtr)">
            <summary>
                Internal constructor
            </summary>
            <param name="cPointer">Pointer to the object in C library</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Image.Pixels">
            <summary>
                Get a copy of the array of pixels (RGBA 8 bits integers components)
                Array size is Width x Height x 4
            </summary>
            <returns>Array of pixels</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Image.Size">
            <summary>
                Size of the image, in pixels
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.SaveToFile(System.String)">
            <summary>
                Save the contents of the image to a file
            </summary>
            <param name="filename">Path of the file to save (overwritten if already exist)</param>
            <returns>True if saving was successful</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.CreateMaskFromColor(Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Create a transparency mask from a specified colorkey
            </summary>
            <param name="color">Color to become transparent</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.CreateMaskFromColor(Alis.Core.Graphic.D2.SFML.Graphics.Color,System.Byte)">
            <summary>
                Create a transparency mask from a specified colorkey
            </summary>
            <param name="color">Color to become transparent</param>
            <param name="alpha">Alpha value to use for transparent pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.Copy(Alis.Core.Graphic.D2.SFML.Graphics.Image,System.UInt32,System.UInt32)">
            <summary>
                Copy pixels from another image onto this one.
                This function does a slow pixel copy and should only
                be used at initialization time
            </summary>
            <param name="source">Source image to copy</param>
            <param name="destX">X coordinate of the destination position</param>
            <param name="destY">Y coordinate of the destination position</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.Copy(Alis.Core.Graphic.D2.SFML.Graphics.Image,System.UInt32,System.UInt32,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Copy pixels from another image onto this one.
                This function does a slow pixel copy and should only
                be used at initialization time
            </summary>
            <param name="source">Source image to copy</param>
            <param name="destX">X coordinate of the destination position</param>
            <param name="destY">Y coordinate of the destination position</param>
            <param name="sourceRect">Sub-rectangle of the source image to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.Copy(Alis.Core.Graphic.D2.SFML.Graphics.Image,System.UInt32,System.UInt32,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,System.Boolean)">
            <summary>
                Copy pixels from another image onto this one.
                This function does a slow pixel copy and should only
                be used at initialization time
            </summary>
            <param name="source">Source image to copy</param>
            <param name="destX">X coordinate of the destination position</param>
            <param name="destY">Y coordinate of the destination position</param>
            <param name="sourceRect">Sub-rectangle of the source image to copy</param>
            <param name="applyAlpha">Should the copy take in account the source transparency?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.GetPixel(System.UInt32,System.UInt32)">
            <summary>
                Get a pixel from the image
            </summary>
            <param name="x">X coordinate of pixel in the image</param>
            <param name="y">Y coordinate of pixel in the image</param>
            <returns>Color of pixel (x, y)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.SetPixel(System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Change the color of a pixel
            </summary>
            <param name="x">X coordinate of pixel in the image</param>
            <param name="y">Y coordinate of pixel in the image</param>
            <param name="color">New color for pixel (x, y)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.FlipHorizontally">
            <summary>
                Flip the image horizontally
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.FlipVertically">
            <summary>
                Flip the image vertically
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_createFromColor(System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the image create from color using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="col">The col</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_createFromPixels(System.UInt32,System.UInt32,System.Byte*)">
            <summary>
                Sfs the image create from pixels using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pixels">The pixels</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_createFromFile(System.String)">
            <summary>
                Sfs the image create from file using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_createFromStream(System.IntPtr)">
            <summary>
                Sfs the image create from stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_createFromMemory(System.IntPtr,System.UInt64)">
            <summary>
                Sfs the image create from memory using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_copy(System.IntPtr)">
            <summary>
                Sfs the image copy using the specified image
            </summary>
            <param name="image">The image</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_destroy(System.IntPtr)">
            <summary>
                Sfs the image destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_saveToFile(System.IntPtr,System.String)">
            <summary>
                Describes whether sf image save to file
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="filename">The filename</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_createMaskFromColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color,System.Byte)">
            <summary>
                Sfs the image create mask from color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="col">The col</param>
            <param name="alpha">The alpha</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_copyImage(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,System.Boolean)">
            <summary>
                Sfs the image copy image using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="source">The source</param>
            <param name="destX">The dest</param>
            <param name="destY">The dest</param>
            <param name="sourceRect">The source rect</param>
            <param name="applyAlpha">The apply alpha</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_setPixel(System.IntPtr,System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the image set pixel using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_getPixel(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Sfs the image get pixel using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_getPixelsPtr(System.IntPtr)">
            <summary>
                Sfs the image get pixels ptr using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_getSize(System.IntPtr)">
            <summary>
                Sfs the image get size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2u</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_flipHorizontally(System.IntPtr)">
            <summary>
                Sfs the image flip horizontally using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Image.sfImage_flipVertically(System.IntPtr)">
            <summary>
                Sfs the image flip vertically using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType">
            <summary>
                Types of primitives that a VertexArray can render.
                Points and lines have no area, therefore their thickness
                will always be 1 pixel, regardless the current transform
                and view.
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.Points">
            List of individual points
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.Lines">
            List of individual lines
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.LineStrip">
            List of connected lines, a point uses the previous point to form a line
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.Triangles">
            List of individual triangles
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.TriangleStrip">
            List of connected triangles, a point uses the two previous points to form a triangle
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.TriangleFan">
            List of connected triangles, a point uses the common center and the previous point to form a triangle
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.Quads">
            List of individual quads
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.LinesStrip">
            List of connected lines, a point uses the previous point to form a line
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.TrianglesStrip">
            List of connected triangles, a point uses the two previous points to form a triangle
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType.TrianglesFan">
            List of connected triangles, a point uses the common center and the previous point to form a triangle
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape">
            <summary>
                Specialized shape representing a rectangle
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.mySize">
            <summary>
                The my size
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the shape with an initial size
            </summary>
            <param name="size">Size of the shape</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape)">
            <summary>
                Construct the shape from another shape
            </summary>
            <param name="copy">Shape to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.Size">
            <summary>
                The size of the rectangle
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.GetPointCount">
            <summary>
                Get the total number of points of the rectangle.
            </summary>
            <returns>
                The total point count. For rectangle shapes,
                this number is always 4.
            </returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RectangleShape.GetPoint(System.UInt32)">
            <summary>
                Get the position of a point
                The returned point is in local coordinates, that is,
                the shape's transforms (position, rotation, scale) are
                not taken into account.
                The result is undefined if index is out of the valid range.
            </summary>
            <param name="index">Index of the point to get, in range [0 .. 3]</param>
            <returns>index-th point of the shape</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates">
            <summary>
                Define the states used for drawing to a RenderTarget
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode)">
            <summary>
                Construct a default set of render states with a custom blend mode
            </summary>
            <param name="blendMode">Blend mode to use</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Transform)">
            <summary>
                Construct a default set of render states with a custom transform
            </summary>
            <param name="transform">Transform to use</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Construct a default set of render states with a custom texture
            </summary>
            <param name="texture">Texture to use</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Shader)">
            <summary>
                Construct a default set of render states with a custom shader
            </summary>
            <param name="shader">Shader to use</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.BlendMode,Alis.Core.Graphic.D2.SFML.Graphics.Transform,Alis.Core.Graphic.D2.SFML.Graphics.Texture,Alis.Core.Graphic.D2.SFML.Graphics.Shader)">
            <summary>
                Construct a set of render states with all its attributes
            </summary>
            <param name="blendMode">Blend mode to use</param>
            <param name="transform">Transform to use</param>
            <param name="texture">Texture to use</param>
            <param name="shader">Shader to use</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Copy constructor
            </summary>
            <param name="copy">States to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.Default">
            <summary>Special instance holding the default render states</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.BlendMode">
            <summary>Blending mode</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.Transform">
            <summary>Transform</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.Texture">
            <summary>Texture</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.Shader">
            <summary>Shader</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.Marshal">
            <summary>
                Marshals this instance
            </summary>
            <returns>The data</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData">
            <summary>
                The marshal data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData.blendMode">
            <summary>
                The blend mode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData.transform">
            <summary>
                The transform
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData.texture">
            <summary>
                The texture
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData.shader">
            <summary>
                The shader
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget">
            <summary>
                Abstract base class for render targets (renderwindow, renderimage)
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Size">
            <summary>
                Size of the rendering region of the target
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.DefaultView">
            <summary>
                Default view of the target
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.GetView">
            <summary>
                Return the current active view
            </summary>
            <returns>The current view</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.SetView(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Change the current active view
            </summary>
            <param name="view">New view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.GetViewport(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Get the viewport of a view applied to this target
            </summary>
            <param name="view">Target view</param>
            <returns>Viewport rectangle, expressed in pixels in the current target</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.MapPixelToCoords(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Convert a point from target coordinates to world
                coordinates, using the current view
                This function is an overload of the MapPixelToCoords
                function that implicitly uses the current view.
                It is equivalent to:
                target.MapPixelToCoords(point, target.GetView());
            </summary>
            <param name="point">Pixel to convert</param>
            <returns>The converted point, in "world" coordinates</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.MapPixelToCoords(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Convert a point from target coordinates to world coordinates
                This function finds the 2D position that matches the
                given pixel of the render-target. In other words, it does
                the inverse of what the graphics card does, to find the
                initial position of a rendered pixel.
                Initially, both coordinate systems (world units and target pixels)
                match perfectly. But if you define a custom view or resize your
                render-target, this assertion is not true anymore, ie. a point
                located at (10, 50) in your render-target may map to the point
                (150, 75) in your 2D world -- if the view is translated by (140, 25).
                For render-windows, this function is typically used to find
                which point (or object) is located below the mouse cursor.
                This version uses a custom view for calculations, see the other
                overload of the function if you want to use the current view of the
                render-target.
            </summary>
            <param name="point">Pixel to convert</param>
            <param name="view">The view to use for converting the point</param>
            <returns>The converted point, in "world" coordinates</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.MapCoordsToPixel(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Convert a point from world coordinates to target
                coordinates, using the current view
                This function is an overload of the mapCoordsToPixel
                function that implicitly uses the current view.
                It is equivalent to:
                target.MapCoordsToPixel(point, target.GetView());
            </summary>
            <param name="point">Point to convert</param>
            <returns>The converted point, in target coordinates (pixels)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.MapCoordsToPixel(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Convert a point from world coordinates to target coordinates
                This function finds the pixel of the render-target that matches
                the given 2D point. In other words, it goes through the same process
                as the graphics card, to compute the final position of a rendered point.
                Initially, both coordinate systems (world units and target pixels)
                match perfectly. But if you define a custom view or resize your
                render-target, this assertion is not true anymore, ie. a point
                located at (150, 75) in your 2D world may map to the pixel
                (10, 50) of your render-target -- if the view is translated by (140, 25).
                This version uses a custom view for calculations, see the other
                overload of the function if you want to use the current view of the
                render-target.
            </summary>
            <param name="point">Point to convert</param>
            <param name="view">The view to use for converting the point</param>
            <returns>The converted point, in target coordinates (pixels)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Clear">
            <summary>
                Clear the entire target with black color
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Clear(Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Clear the entire target with a single color
            </summary>
            <param name="color">Color to use to clear the window</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IDrawable)">
            <summary>
                Draw a drawable object to the render-target, with default render states
            </summary>
            <param name="drawable">Object to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IDrawable,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw a drawable object to the render-target
            </summary>
            <param name="drawable">Object to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Draw primitives defined by an array of vertices, with default render states
            </summary>
            <param name="vertices">Array of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw primitives defined by an array of vertices
            </summary>
            <param name="vertices">Array of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Draw primitives defined by a sub-array of vertices, with default render states
            </summary>
            <param name="vertices">Array of vertices to draw</param>
            <param name="start">Index of the first vertex to draw in the array</param>
            <param name="count">Number of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw primitives defined by a sub-array of vertices
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="start">Index of the first vertex to use in the array</param>
            <param name="count">Number of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.PushGlStates">
            <summary>
                Save the current OpenGL render states and matrices.
                This function can be used when you mix SFML drawing
                and direct OpenGL rendering. Combined with PopGLStates,
                it ensures that:
                \li SFML's internal states are not messed up by your OpenGL code
                \li your OpenGL states are not modified by a call to a SFML function
                More specifically, it must be used around code that
                calls Draw functions. Example:
                // OpenGL code here...
                window.PushGLStates();
                window.Draw(...);
                window.Draw(...);
                window.PopGLStates();
                // OpenGL code here...
                Note that this function is quite expensive: it saves all the
                possible OpenGL states and matrices, even the ones you
                don't care about. Therefore it should be used wisely.
                It is provided for convenience, but the best results will
                be achieved if you handle OpenGL states yourself (because
                you know which states have really changed, and need to be
                saved and restored). Take a look at the ResetGLStates
                function if you do so.
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.PopGlStates">
            <summary>
                Restore the previously saved OpenGL render states and matrices.
                See the description of PushGLStates to get a detailed
                description of these functions.
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget.ResetGlStates">
            <summary>
                Reset the internal OpenGL states so that the target is ready for drawing.
                This function can be used when you mix SFML drawing
                and direct OpenGL rendering, if you choose not to use
                PushGLStates/PopGLStates. It makes sure that all OpenGL
                states needed by SFML are set, so that subsequent Draw()
                calls will work as expected.
                Example:
                // OpenGL code here...
                glPushAttrib(...);
                window.ResetGLStates();
                window.Draw(...);
                window.Draw(...);
                glPopAttrib(...);
                // OpenGL code here...
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture">
            <summary>
                Target for off-screen 2D rendering into an texture
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.myDefaultView">
            <summary>
                The my default view
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.myTexture">
            <summary>
                The my texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.#ctor(System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings)">
            <summary>
                Create the render-texture with the given dimensions and
                a ContextSettings.
            </summary>
            <param name="width">Width of the render-texture</param>
            <param name="height">Height of the render-texture</param>
            <param name="contextSettings"></param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Repeated">
            <summary>
                Enable or disable texture repeating
            </summary>
            <remarks>
                This property is similar to <see />.
                This parameter is disabled by default.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Texture">
            <summary>
                Target texture of the render texture
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.MaximumAntialiasingLevel">
            <summary>
                The maximum anti-aliasing level supported by the system
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Smooth">
            <summary>
                Control the smooth filter
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Size">
            <summary>
                Size of the rendering region of the render texture
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.DefaultView">
            <summary>
                Default view of the render texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.GetView">
            <summary>
                Return the current active view
            </summary>
            <returns>The current view</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.SetView(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Change the current active view
            </summary>
            <param name="view">New view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.GetViewport(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Get the viewport of a view applied to this target
            </summary>
            <param name="view">Target view</param>
            <returns>Viewport rectangle, expressed in pixels in the current target</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.MapPixelToCoords(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Convert a point from target coordinates to world
                coordinates, using the current view
                This function is an overload of the MapPixelToCoords
                function that implicitly uses the current view.
                It is equivalent to:
                target.MapPixelToCoords(point, target.GetView());
            </summary>
            <param name="point">Pixel to convert</param>
            <returns>The converted point, in "world" coordinates</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.MapPixelToCoords(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Convert a point from target coordinates to world coordinates
                This function finds the 2D position that matches the
                given pixel of the render-target. In other words, it does
                the inverse of what the graphics card does, to find the
                initial position of a rendered pixel.
                Initially, both coordinate systems (world units and target pixels)
                match perfectly. But if you define a custom view or resize your
                render-target, this assertion is not true anymore, ie. a point
                located at (10, 50) in your render-target may map to the point
                (150, 75) in your 2D world -- if the view is translated by (140, 25).
                For render-windows, this function is typically used to find
                which point (or object) is located below the mouse cursor.
                This version uses a custom view for calculations, see the other
                overload of the function if you want to use the current view of the
                render-target.
            </summary>
            <param name="point">Pixel to convert</param>
            <param name="view">The view to use for converting the point</param>
            <returns>The converted point, in "world" coordinates</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.MapCoordsToPixel(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Convert a point from world coordinates to target
                coordinates, using the current view
                This function is an overload of the mapCoordsToPixel
                function that implicitly uses the current view.
                It is equivalent to:
                target.MapCoordsToPixel(point, target.GetView());
            </summary>
            <param name="point">Point to convert</param>
            <returns>The converted point, in target coordinates (pixels)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.MapCoordsToPixel(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Convert a point from world coordinates to target coordinates
                This function finds the pixel of the render-target that matches
                the given 2D point. In other words, it goes through the same process
                as the graphics card, to compute the final position of a rendered point.
                Initially, both coordinate systems (world units and target pixels)
                match perfectly. But if you define a custom view or resize your
                render-target, this assertion is not true anymore, ie. a point
                located at (150, 75) in your 2D world may map to the pixel
                (10, 50) of your render-target -- if the view is translated by (140, 25).
                This version uses a custom view for calculations, see the other
                overload of the function if you want to use the current view of the
                render-target.
            </summary>
            <param name="point">Point to convert</param>
            <param name="view">The view to use for converting the point</param>
            <returns>The converted point, in target coordinates (pixels)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Clear">
            <summary>
                Clear the entire render texture with black color
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Clear(Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Clear the entire render texture with a single color
            </summary>
            <param name="color">Color to use to clear the texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IDrawable)">
            <summary>
                Draw a drawable object to the render-target, with default render states
            </summary>
            <param name="drawable">Object to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IDrawable,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw a drawable object to the render-target
            </summary>
            <param name="drawable">Object to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Draw primitives defined by an array of vertices, with default render states
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="type">Type of primitives to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw primitives defined by an array of vertices
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="type">Type of primitives to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Draw primitives defined by a sub-array of vertices, with default render states
            </summary>
            <param name="vertices">Array of vertices to draw</param>
            <param name="start">Index of the first vertex to draw in the array</param>
            <param name="count">Number of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw primitives defined by a sub-array of vertices
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="start">Index of the first vertex to use in the array</param>
            <param name="count">Number of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.PushGlStates">
            <summary>
                Save the current OpenGL render states and matrices.
                This function can be used when you mix SFML drawing
                and direct OpenGL rendering. Combined with PopGLStates,
                it ensures that:
                \li SFML's internal states are not messed up by your OpenGL code
                \li your OpenGL states are not modified by a call to a SFML function
                More specifically, it must be used around code that
                calls Draw functions. Example:
                // OpenGL code here...
                window.PushGLStates();
                window.Draw(...);
                window.Draw(...);
                window.PopGLStates();
                // OpenGL code here...
                Note that this function is quite expensive: it saves all the
                possible OpenGL states and matrices, even the ones you
                don't care about. Therefore it should be used wisely.
                It is provided for convenience, but the best results will
                be achieved if you handle OpenGL states yourself (because
                you know which states have really changed, and need to be
                saved and restored). Take a look at the ResetGLStates
                function if you do so.
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.PopGlStates">
            <summary>
                Restore the previously saved OpenGL render states and matrices.
                See the description of PushGLStates to get a detailed
                description of these functions.
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.ResetGlStates">
            <summary>
                Reset the internal OpenGL states so that the target is ready for drawing.
                This function can be used when you mix SFML drawing
                and direct OpenGL rendering, if you choose not to use
                PushGLStates/PopGLStates. It makes sure that all OpenGL
                states needed by SFML are set, so that subsequent Draw()
                calls will work as expected.
                Example:
                // OpenGL code here...
                glPushAttrib(...);
                window.ResetGLStates();
                window.Draw(...);
                window.Draw(...);
                glPopAttrib(...);
                // OpenGL code here...
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.SetActive(System.Boolean)">
            <summary>
                Activate of deactivate the render texture as the current target
                for rendering
            </summary>
            <param name="active">True to activate, false to deactivate (true by default)</param>
            <returns>True if operation was successful, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.GenerateMipmap">
            <summary>
                Generate a mipmap using the current texture data
            </summary>
            <remarks>
                This function is similar to <see /> and operates
                on the texture used as the target for drawing.
                Be aware that any draw operation may modify the base level image data.
                For this reason, calling this function only makes sense after all
                drawing is completed and display has been called. Not calling display
                after subsequent drawing will lead to undefined behavior if a mipmap
                had been previously generated.
            </remarks>
            <returns>True if mipmap generation was successful, false if unsuccessful</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Display">
            <summary>
                Update the contents of the target texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_create(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
                Sfs the render texture create using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depthBuffer">The depth buffer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_createWithSettings(System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings)">
            <summary>
                Sfs the render texture create with settings using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="settings">The settings</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_destroy(System.IntPtr)">
            <summary>
                Sfs the render texture destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_clear(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the render texture clear using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="clearColor">The clear color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_getSize(System.IntPtr)">
            <summary>
                Sfs the render texture get size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2u</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_setActive(System.IntPtr,System.Boolean)">
            <summary>
                Describes whether sf render texture set active
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="active">The active</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_saveGLStates(System.IntPtr)">
            <summary>
                Describes whether sf render texture save gl states
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_restoreGLStates(System.IntPtr)">
            <summary>
                Describes whether sf render texture restore gl states
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_display(System.IntPtr)">
            <summary>
                Describes whether sf render texture display
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_setView(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the render texture set view using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="view">The view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_getView(System.IntPtr)">
            <summary>
                Sfs the render texture get view using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_getDefaultView(System.IntPtr)">
            <summary>
                Sfs the render texture get default view using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_getViewport(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the render texture get viewport using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="targetView">The target view</param>
            <returns>The int rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_mapCoordsToPixel(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2F,System.IntPtr)">
            <summary>
                Sfs the render texture map coords to pixel using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="point">The point</param>
            <param name="view">The view</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_mapPixelToCoords(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2I,System.IntPtr)">
            <summary>
                Sfs the render texture map pixel to coords using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="point">The point</param>
            <param name="view">The view</param>
            <returns>The vector 2f</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_getTexture(System.IntPtr)">
            <summary>
                Sfs the render texture get texture using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_getMaximumAntialiasingLevel">
            <summary>
                Sfs the render texture get maximum antialiasing level
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_setSmooth(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render texture set smooth using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="smooth">The smooth</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_isSmooth(System.IntPtr)">
            <summary>
                Describes whether sf render texture is smooth
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_setRepeated(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render texture set repeated using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="repeated">The repeated</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_isRepeated(System.IntPtr)">
            <summary>
                Describes whether sf render texture is repeated
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_generateMipmap(System.IntPtr)">
            <summary>
                Describes whether sf render texture generate mipmap
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_drawPrimitives(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Vertex*,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render texture draw primitives using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexPtr">The vertex ptr</param>
            <param name="vertexCount">The vertex count</param>
            <param name="type">The type</param>
            <param name="renderStates">The render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_pushGLStates(System.IntPtr)">
            <summary>
                Sfs the render texture push gl states using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_popGLStates(System.IntPtr)">
            <summary>
                Sfs the render texture pop gl states using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderTexture.sfRenderTexture_resetGLStates(System.IntPtr)">
            <summary>
                Sfs the render texture reset gl states using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow">
            <summary>
                Simple wrapper for Window that allows easy
                2D rendering
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.myDefaultView">
            <summary>
                The my default view
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.#ctor(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String)">
            <summary>
                Create the window with default style and creation settings
            </summary>
            <param name="mode">Video mode to use</param>
            <param name="title">Title of the window</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.#ctor(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String,Alis.Core.Graphic.D2.SFML.Windows.Styles)">
            <summary>
                Create the window with default creation settings
            </summary>
            <param name="mode">Video mode to use</param>
            <param name="title">Title of the window</param>
            <param name="style">Window style (Resize | Close by default)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.#ctor(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String,Alis.Core.Graphic.D2.SFML.Windows.Styles,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings)">
            <summary>
                Create the window
            </summary>
            <param name="mode">Video mode to use</param>
            <param name="title">Title of the window</param>
            <param name="style">Window style (Resize | Close by default)</param>
            <param name="settings">Creation parameters</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.#ctor(System.IntPtr)">
            <summary>
                Create the window from an existing control with default creation settings
            </summary>
            <param name="handle">Platform-specific handle of the control</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.#ctor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings)">
            <summary>
                Create the window from an existing control
            </summary>
            <param name="handle">Platform-specific handle of the control</param>
            <param name="settings">Creation parameters</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.IsOpen">
            <summary>
                Tell whether or not the window is opened (ie. has been created).
                Note that a hidden window (Show(false))
                will still return true
            </summary>
            <returns>True if the window is opened</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Settings">
            <summary>
                Creation settings of the window
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Position">
            <summary>
                Position of the window
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SystemHandle">
            <summary>
                OS-specific handle of the window
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Size">
            <summary>
                Size of the rendering region of the window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Clear">
            <summary>
                Clear the entire window with black color
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Clear(Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Clear the entire window with a single color
            </summary>
            <param name="color">Color to use to clear the window</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetView(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Change the current active view
            </summary>
            <param name="view">New view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.GetView">
            <summary>
                Return the current active view
            </summary>
            <returns>The current view</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.DefaultView">
            <summary>
                Default view of the window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.GetViewport(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Get the viewport of a view applied to this target
            </summary>
            <param name="view">Target view</param>
            <returns>Viewport rectangle, expressed in pixels in the current target</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.MapPixelToCoords(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Convert a point from target coordinates to world
                coordinates, using the current view
                This function is an overload of the MapPixelToCoords
                function that implicitly uses the current view.
                It is equivalent to:
                target.MapPixelToCoords(point, target.GetView());
            </summary>
            <param name="point">Pixel to convert</param>
            <returns>The converted point, in "world" coordinates</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.MapPixelToCoords(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Convert a point from target coordinates to world coordinates
                This function finds the 2D position that matches the
                given pixel of the render-target. In other words, it does
                the inverse of what the graphics card does, to find the
                initial position of a rendered pixel.
                Initially, both coordinate systems (world units and target pixels)
                match perfectly. But if you define a custom view or resize your
                render-target, this assertion is not true anymore, ie. a point
                located at (10, 50) in your render-target may map to the point
                (150, 75) in your 2D world -- if the view is translated by (140, 25).
                For render-windows, this function is typically used to find
                which point (or object) is located below the mouse cursor.
                This version uses a custom view for calculations, see the other
                overload of the function if you want to use the current view of the
                render-target.
            </summary>
            <param name="point">Pixel to convert</param>
            <param name="view">The view to use for converting the point</param>
            <returns>The converted point, in "world" coordinates</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.MapCoordsToPixel(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Convert a point from world coordinates to target
                coordinates, using the current view
                This function is an overload of the mapCoordsToPixel
                function that implicitly uses the current view.
                It is equivalent to:
                target.MapCoordsToPixel(point, target.GetView());
            </summary>
            <param name="point">Point to convert</param>
            <returns>The converted point, in target coordinates (pixels)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.MapCoordsToPixel(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Convert a point from world coordinates to target coordinates
                This function finds the pixel of the render-target that matches
                the given 2D point. In other words, it goes through the same process
                as the graphics card, to compute the final position of a rendered point.
                Initially, both coordinate systems (world units and target pixels)
                match perfectly. But if you define a custom view or resize your
                render-target, this assertion is not true anymore, ie. a point
                located at (150, 75) in your 2D world may map to the pixel
                (10, 50) of your render-target -- if the view is translated by (140, 25).
                This version uses a custom view for calculations, see the other
                overload of the function if you want to use the current view of the
                render-target.
            </summary>
            <param name="point">Point to convert</param>
            <param name="view">The view to use for converting the point</param>
            <returns>The converted point, in target coordinates (pixels)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IDrawable)">
            <summary>
                Draw a drawable object to the render-target, with default render states
            </summary>
            <param name="drawable">Object to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IDrawable,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw a drawable object to the render-target
            </summary>
            <param name="drawable">Object to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Draw primitives defined by an array of vertices, with default render states
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="type">Type of primitives to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw primitives defined by an array of vertices
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="type">Type of primitives to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Draw primitives defined by a sub-array of vertices, with default render states
            </summary>
            <param name="vertices">Array of vertices to draw</param>
            <param name="start">Index of the first vertex to draw in the array</param>
            <param name="count">Number of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Draw(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw primitives defined by a sub-array of vertices
            </summary>
            <param name="vertices">Pointer to the vertices</param>
            <param name="start">Index of the first vertex to use in the array</param>
            <param name="count">Number of vertices to draw</param>
            <param name="type">Type of primitives to draw</param>
            <param name="states">Render states to use for drawing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.PushGlStates">
            <summary>
                Save the current OpenGL render states and matrices.
            </summary>
            <example>
                // OpenGL code here...
                window.PushGLStates();
                window.Draw(...);
                window.Draw(...);
                window.PopGLStates();
                // OpenGL code here...
            </example>
            <remarks>
                <para>
                    This function can be used when you mix SFML drawing
                    and direct OpenGL rendering. Combined with PopGLStates,
                    it ensures that:
                </para>
                <para>SFML's internal states are not messed up by your OpenGL code</para>
                <para>Your OpenGL states are not modified by a call to a SFML function</para>
                <para>
                    More specifically, it must be used around code that
                    calls Draw functions.
                </para>
                <para>
                    Note that this function is quite expensive: it saves all the
                    possible OpenGL states and matrices, even the ones you
                    don't care about. Therefore it should be used wisely.
                    It is provided for convenience, but the best results will
                    be achieved if you handle OpenGL states yourself (because
                    you know which states have really changed, and need to be
                    saved and restored). Take a look at the <seealso cref="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.ResetGlStates" />
                    function if you do so.
                </para>
            </remarks>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.PopGlStates">
            <summary>
                Restore the previously saved OpenGL render states and matrices.
                See the description of <seealso cref="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.PushGlStates" /> to get a detailed
                description of these functions.
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.ResetGlStates">
            <summary>
                Reset the internal OpenGL states so that the target is ready for drawing.
            </summary>
            <remarks>
                This function can be used when you mix SFML drawing
                and direct OpenGL rendering, if you choose not to use
                PushGLStates/PopGLStates. It makes sure that all OpenGL
                states needed by SFML are set, so that subsequent Draw()
                calls will work as expected.
            </remarks>
            <example>
                // OpenGL code here...
                glPushAttrib(...);
                window.ResetGLStates();
                window.Draw(...);
                window.Draw(...);
                glPopAttrib(...);
                // OpenGL code here...
            </example>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Close">
            <summary>
                Close (destroy) the window.
                The Window instance remains valid and you can call
                Create to recreate the window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetTitle(System.String)">
            <summary>
                Change the title of the window
            </summary>
            <param name="title">New title</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetIcon(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
                Change the window's icon
            </summary>
            <param name="width">Icon's width, in pixels</param>
            <param name="height">Icon's height, in pixels</param>
            <param name="pixels">Array of pixels, format must be RGBA 32 bits</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetVisible(System.Boolean)">
            <summary>
                Show or hide the window
            </summary>
            <param name="visible">True to show the window, false to hide it</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetVerticalSyncEnabled(System.Boolean)">
            <summary>
                Enable / disable vertical synchronization
            </summary>
            <param name="enable">True to enable v-sync, false to deactivate</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetMouseCursorVisible(System.Boolean)">
            <summary>
                Show or hide the mouse cursor
            </summary>
            <param name="visible">True to show, false to hide</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetMouseCursorGrabbed(System.Boolean)">
            <summary>
                Grab or release the mouse cursor
            </summary>
            <param name="grabbed">True to grab, false to release</param>
            <remarks>
                If set, grabs the mouse cursor inside this window's client
                area so it may no longer be moved outside its bounds.
                Note that grabbing is only active while the window has
                focus and calling this function for fullscreen windows
                won't have any effect (fullscreen windows always grab the
                cursor).
            </remarks>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetMouseCursor(Alis.Core.Graphic.D2.SFML.Windows.Cursor)">
            <summary>
                Set the displayed cursor to a native system cursor
            </summary>
            <param name="cursor">Native system cursor type to display</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetKeyRepeatEnabled(System.Boolean)">
            <summary>
                Enable or disable automatic key-repeat.
                Automatic key-repeat is enabled by default
            </summary>
            <param name="enable">True to enable, false to disable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetFramerateLimit(System.UInt32)">
            <summary>
                Limit the framerate to a maximum fixed frequency
            </summary>
            <param name="limit">Framerate limit, in frames per seconds (use 0 to disable limit)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetJoystickThreshold(System.Single)">
            <summary>
                Change the joystick threshold, ie. the value below which
                no move event will be generated
            </summary>
            <param name="threshold">New threshold, in range [0, 100]</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.SetActive(System.Boolean)">
            <summary>
                Activate of deactivate the window as the current target
                for rendering
            </summary>
            <param name="active">True to activate, false to deactivate (true by default)</param>
            <returns>True if operation was successful, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.RequestFocus">
            <summary>
                Request the current window to be made the active
                foreground window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.HasFocus">
            <summary>
                Check whether the window has the input focus
            </summary>
            <returns>True if the window has focus, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Display">
            <summary>
                Display the window on screen
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Capture">
            <summary>
                Capture the current contents of the window into an image.
            </summary>
            <remarks>
                Deprecated. Use <see cref="T:Alis.Core.Graphic.D2.SFML.Graphics.Texture" /> and <see cref="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow)" />
                instead:
                <code>
               Texture texture = new Texture(window.Size);
               texture.update(window);
               Image img = texture.CopyToImage();
               </code>
            </remarks>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.PollEvent(Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Internal function to get the next event
            </summary>
            <param name="eventToFill">Variable to fill with the raw pointer to the event structure</param>
            <returns>True if there was an event, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.WaitEvent(Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Internal function to get the next event (blocking)
            </summary>
            <param name="eventToFill">Variable to fill with the raw pointer to the event structure</param>
            <returns>False if any error occured</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.InternalGetMousePosition">
            <summary>
                Internal function to get the mouse position relative to the window.
                This function is protected because it is called by another class,
                it is not meant to be called by users.
            </summary>
            <returns>Relative mouse position</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.InternalSetMousePosition(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Internal function to set the mouse position relative to the window.
                This function is protected because it is called by another class,
                it is not meant to be called by users.
            </summary>
            <param name="position">Relative mouse position</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.InternalGetTouchPosition(System.UInt32)">
            <summary>
                Internal function to get the touch position relative to the window.
                This function is protected because it is called by another class of
                another module, it is not meant to be called by users.
            </summary>
            <param name="finger">Finger index</param>
            <returns>Relative touch position</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.Initialize">
            <summary>
                Do common initializations
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_create(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String,Alis.Core.Graphic.D2.SFML.Windows.Styles,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings@)">
            <summary>
                Sfs the render window create using the specified mode
            </summary>
            <param name="mode">The mode</param>
            <param name="title">The title</param>
            <param name="style">The style</param>
            <param name="params">The params</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_createUnicode(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.Styles,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings@)">
            <summary>
                Sfs the render window create unicode using the specified mode
            </summary>
            <param name="mode">The mode</param>
            <param name="title">The title</param>
            <param name="style">The style</param>
            <param name="params">The params</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_createFromHandle(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings@)">
            <summary>
                Sfs the render window create from handle using the specified handle
            </summary>
            <param name="handle">The handle</param>
            <param name="params">The params</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_destroy(System.IntPtr)">
            <summary>
                Sfs the render window destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_close(System.IntPtr)">
            <summary>
                Sfs the render window close using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_isOpen(System.IntPtr)">
            <summary>
                Describes whether sf render window is open
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getSettings(System.IntPtr)">
            <summary>
                Sfs the render window get settings using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The context settings</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_pollEvent(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Describes whether sf render window poll event
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="evt">The evt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_waitEvent(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Describes whether sf render window wait event
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="evt">The evt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getPosition(System.IntPtr)">
            <summary>
                Sfs the render window get position using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setPosition(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Sfs the render window set position using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="position">The position</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getSize(System.IntPtr)">
            <summary>
                Sfs the render window get size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2u</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setSize(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Sfs the render window set size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="size">The size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setTitle(System.IntPtr,System.String)">
            <summary>
                Sfs the render window set title using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="title">The title</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setUnicodeTitle(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the render window set unicode title using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="title">The title</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setIcon(System.IntPtr,System.UInt32,System.UInt32,System.Byte*)">
            <summary>
                Sfs the render window set icon using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pixels">The pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setVisible(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render window set visible using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="visible">The visible</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setVerticalSyncEnabled(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render window set vertical sync enabled using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="enable">The enable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setMouseCursorVisible(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render window set mouse cursor visible using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="visible">The visible</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setMouseCursorGrabbed(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render window set mouse cursor grabbed using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setMouseCursor(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the render window set mouse cursor using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setKeyRepeatEnabled(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the render window set key repeat enabled using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="enable">The enable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setFramerateLimit(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the render window set framerate limit using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="limit">The limit</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setJoystickThreshold(System.IntPtr,System.Single)">
            <summary>
                Sfs the render window set joystick threshold using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="threshold">The threshold</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setActive(System.IntPtr,System.Boolean)">
            <summary>
                Describes whether sf render window set active
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="active">The active</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_requestFocus(System.IntPtr)">
            <summary>
                Sfs the render window request focus using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_hasFocus(System.IntPtr)">
            <summary>
                Describes whether sf render window has focus
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_display(System.IntPtr)">
            <summary>
                Sfs the render window display using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getSystemHandle(System.IntPtr)">
            <summary>
                Sfs the render window get system handle using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_clear(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the render window clear using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="clearColor">The clear color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_setView(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the render window set view using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="view">The view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getView(System.IntPtr)">
            <summary>
                Sfs the render window get view using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getDefaultView(System.IntPtr)">
            <summary>
                Sfs the render window get default view using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getViewport(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the render window get viewport using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="targetView">The target view</param>
            <returns>The int rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_mapPixelToCoords(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2I,System.IntPtr)">
            <summary>
                Sfs the render window map pixel to coords using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="point">The point</param>
            <param name="view">The view</param>
            <returns>The vector 2f</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_mapCoordsToPixel(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2F,System.IntPtr)">
            <summary>
                Sfs the render window map coords to pixel using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="point">The point</param>
            <param name="view">The view</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_drawPrimitives(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Vertex*,System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render window draw primitives using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexPtr">The vertex ptr</param>
            <param name="vertexCount">The vertex count</param>
            <param name="type">The type</param>
            <param name="renderStates">The render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_pushGLStates(System.IntPtr)">
            <summary>
                Sfs the render window push gl states using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_popGLStates(System.IntPtr)">
            <summary>
                Sfs the render window pop gl states using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_resetGLStates(System.IntPtr)">
            <summary>
                Sfs the render window reset gl states using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_capture(System.IntPtr)">
            <summary>
                Sfs the render window capture using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfMouse_getPositionRenderWindow(System.IntPtr)">
            <summary>
                Sfs the mouse get position render window using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfMouse_setPositionRenderWindow(Alis.Core.Aspect.Math.Vector.Vector2I,System.IntPtr)">
            <summary>
                Sfs the mouse set position render window using the specified position
            </summary>
            <param name="position">The position</param>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfTouch_getPositionRenderWindow(System.UInt32,System.IntPtr)">
            <summary>
                Sfs the touch get position render window using the specified finger
            </summary>
            <param name="finger">The finger</param>
            <param name="relativeTo">The relative to</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_saveGLStates(System.IntPtr)">
            <summary>
                Describes whether sf render window save gl states
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_restoreGLStates(System.IntPtr)">
            <summary>
                Describes whether sf render window restore gl states
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow.sfRenderWindow_getFrameTime(System.IntPtr)">
            <summary>
                Sfs the render window get frame time using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Shader">
            <summary>
                Wrapper for pixel shaders
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Shader.myTextures">
            <summary>
                The texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.#ctor(System.String,System.String,System.String)">
            <summary>
                Load the vertex, geometry and fragment shaders from files
            </summary>
            <remarks>
                This function loads the vertex, geometry and fragment
                shaders. Pass NULL if you don't want to load
                a specific shader.
                The sources must be text files containing valid shaders
                in GLSL language. GLSL is a C-like language dedicated to
                OpenGL shaders; you'll probably need to read a good documentation
                for it before writing your own shaders.
            </remarks>
            <param name="vertexShaderFilename">Path of the vertex shader file to load, or null to skip this shader</param>
            <param name="geometryShaderFilename">Path of the geometry shader file to load, or null to skip this shader</param>
            <param name="fragmentShaderFilename">Path of the fragment shader file to load, or null to skip this shader</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.#ctor(System.IO.Stream,System.IO.Stream,System.IO.Stream)">
            <summary>
                Load the vertex, geometry and fragment shaders from custom streams
            </summary>
            <remarks>
                This function loads the vertex, geometry and fragment
                shaders. Pass NULL if you don't want to load
                a specific shader.
                The sources must be valid shaders in GLSL language. GLSL is
                a C-like language dedicated to OpenGL shaders; you'll
                probably need to read a good documentation for it before
                writing your own shaders.
            </remarks>
            <param name="vertexShaderStream">Source stream to read the vertex shader from, or null to skip this shader</param>
            <param name="geometryShaderStream">Source stream to read the geometry shader from, or null to skip this shader</param>
            <param name="fragmentShaderStream">Source stream to read the fragment shader from, or null to skip this shader</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.#ctor(System.IntPtr)">
            <summary>
                Construct the shader from a pointer
            </summary>
            <param name="ptr">Pointer to the shader instance</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shader.NativeHandle">
            <summary>
                Get the underlying OpenGL handle of the shader.
            </summary>
            <remarks>
                You shouldn't need to use this handle, unless you have
                very specific stuff to implement that SFML doesn't support.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shader.IsAvailable">
            <summary>
                Tell whether or not the system supports shaders.
            </summary>
            <remarks>
                This property should always be checked before using
                the shader features. If it returns false, then
                any attempt to use Shader will fail.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shader.IsGeometryAvailable">
            <summary>
                Tell whether or not the system supports geometry shaders.
            </summary>
            <remarks>
                <para>
                    This property should always be checked before using
                    the geometry shader features. If it returns false, then
                    any attempt to use geometry shader features will fail.
                </para>
                <para>
                    Note: The first call to this function, whether by your
                    code or SFML will result in a context switch.
                </para>
            </remarks>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Shader.CurrentTexture">
            <summary>
                Special value that can be passed to SetParameter,
                and that represents the texture of the object being drawn
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.FromString(System.String,System.String,System.String)">
            <summary>
                Load the vertex, geometry and fragment shaders from source code in memory
            </summary>
            <remarks>
                This function loads the vertex, geometry and fragment
                shaders. Pass NULL if you don't want to load
                a specific shader.
                The sources must be valid shaders in GLSL language. GLSL is
                a C-like language dedicated to OpenGL shaders; you'll
                probably need to read a good documentation for it before
                writing your own shaders.
            </remarks>
            <param name="vertexShader">String containing the source code of the vertex shader</param>
            <param name="geometryShader">String containing the source code of the geometry shader</param>
            <param name="fragmentShader">String containing the source code of the fragment shader</param>
            <returns>New shader instance</returns>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,System.Single)">
            <summary>
                Specify value for <c>float</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="x">Value of the float scalar</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,System.Numerics.Vector2)">
            <summary>
                Specify value for <c>vec2</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the vec2 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Specify value for <c>vec3</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the vec3 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector4F)">
            <summary>
                Specify value for <c>vec4</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the vec4 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,System.Int32)">
            <summary>
                Specify value for <c>int</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="x">Value of the int scalar</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Specify value for <c>ivec2</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the ivec2 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector3I)">
            <summary>
                Specify value for <c>ivec3</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the ivec3 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector4I)">
            <summary>
                Specify value for <c>ivec4</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the ivec4 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,System.Boolean)">
            <summary>
                Specify value for <c>bool</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="x">Value of the bool scalar</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector2B)">
            <summary>
                Specify value for <c>bvec2</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the bvec2 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector3B)">
            <summary>
                Specify value for <c>bvec3</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the bvec3 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Vector.Vector4B)">
            <summary>
                Specify value for <c>bvec4</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="vector">Value of the bvec4 vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Matrix.Matrix3X3F)">
            <summary>
                Specify value for <c>mat3</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="matrix">Value of the mat3 matrix</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>
                Specify value for <c>mat4</c> uniform
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="matrix">Value of the mat4 matrix</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Specify a texture as <c>sampler2D</c> uniform
            </summary>
            <remarks>
                <para>
                    name is the name of the variable to change in the shader.
                    The corresponding parameter in the shader must be a 2D texture
                    (<c>sampler2D</c> GLSL type).
                </para>
                <para>
                    Example:
                    <code>
            uniform sampler2D the_texture; // this is the variable in the shader
            </code>
                    <code>
            sf::Texture texture;
            ...
            shader.setUniform("the_texture", texture);
            </code>
                    It is important to note that <paramref name="texture" /> must remain alive as long
                    as the shader uses it, no copy is made internally.
                </para>
                <para>
                    To use the texture of the object being drawn, which cannot be
                    known in advance, you can pass the special value
                    Shader.CurrentTexture:
                    <code>
            shader.setUniform("the_texture", Shader.CurrentTexture);
            </code>
                </para>
            </remarks>
            <param name="name">Name of the texture in the shader</param>
            <param name="texture">Texture to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniform(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Shader.CurrentTextureType)">
            <summary>
                Specify current texture as \p sampler2D uniform
            </summary>
            <remarks>
                <para>
                    This overload maps a shader texture variable to the
                    texture of the object being drawn, which cannot be
                    known in advance. The second argument must be
                    <see cref="F:Alis.Core.Graphic.D2.SFML.Graphics.Shader.CurrentTexture" />.
                    The corresponding parameter in the shader must be a 2D texture
                    (<c>sampler2D</c> GLSL type).
                </para>
                <para>
                    Example:
                    <code>
            uniform sampler2D current; // this is the variable in the shader
            </code>
                    <code>
            shader.setUniform("current", Shader.CurrentTexture);
            </code>
                </para>
            </remarks>
            <param name="name">Name of the texture in the shader</param>
            <param name="current" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniformArray(System.String,System.Single[])">
            <summary>
                Specify values for <c>float[]</c> array uniforms
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="array">array of <c>float</c> values</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniformArray(System.String,System.Numerics.Vector2[])">
            <summary>
                Specify values for <c>vec2[]</c> array uniforms
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="array">array of <c>vec2</c> values</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniformArray(System.String,Alis.Core.Aspect.Math.Vector.Vector3F[])">
            <summary>
                Specify values for <c>vec3[]</c> array uniforms
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="array">array of <c>vec3</c> values</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniformArray(System.String,Alis.Core.Aspect.Math.Vector.Vector4F[])">
            <summary>
                Specify values for <c>vec4[]</c> array uniforms
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="array">array of <c>vec4</c> values</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniformArray(System.String,Alis.Core.Aspect.Math.Matrix.Matrix3X3F[])">
            <summary>
                Specify values for <c>mat3[]</c> array uniforms
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="array">array of <c>mat3</c> values</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetUniformArray(System.String,Alis.Core.Aspect.Math.Matrix.Matrix4X4F[])">
            <summary>
                Specify values for <c>mat4[]</c> array uniforms
            </summary>
            <param name="name">Name of the uniform variable in GLSL</param>
            <param name="array">array of <c>mat4</c> values</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,System.Single)">
            <summary>
                Change a float parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a float
                (float GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="x">Value to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,System.Single,System.Single)">
            <summary>
                Change a 2-components vector parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 2x1 vector
                (vec2 GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="x">First component of the value to assign</param>
            <param name="y">Second component of the value to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,System.Single,System.Single,System.Single)">
            <summary>
                Change a 3-components vector parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 3x1 vector
                (vec3 GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="x">First component of the value to assign</param>
            <param name="y">Second component of the value to assign</param>
            <param name="z">Third component of the value to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Change a 4-components vector parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 4x1 vector
                (vec4 GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="x">First component of the value to assign</param>
            <param name="y">Second component of the value to assign</param>
            <param name="z">Third component of the value to assign</param>
            <param name="w">Fourth component of the value to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Change a 2-components vector parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 2x1 vector
                (vec2 GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="vector">Vector to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Change a color parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 4x1 vector
                (vec4 GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="color">Color to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Transform)">
            <summary>
                Change a matrix parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 4x4 matrix
                (mat4 GLSL type).
            </summary>
            <param name="name">Name of the parameter in the shader</param>
            <param name="transform">Transform to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Change a texture parameter of the shader
                "name" is the name of the variable to change in the shader.
                The corresponding parameter in the shader must be a 2D texture
                (sampler2D GLSL type).
                It is important to note that \a texture must remain alive as long
                as the shader uses it, no copy is made internally.
                To use the texture of the object being draw, which cannot be
                known in advance, you can pass the special value
                Shader.CurrentTexture.
            </summary>
            <param name="name">Name of the texture in the shader</param>
            <param name="texture">Texture to assign</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.SetParameter(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Shader.CurrentTextureType)">
            <summary>
                Change a texture parameter of the shader
                This overload maps a shader texture variable to the
                texture of the object being drawn, which cannot be
                known in advance. The second argument must be
                sf::Shader::CurrentTexture.
                The corresponding parameter in the shader must be a 2D texture
                (sampler2D GLSL type).
            </summary>
            <param name="name">Name of the texture in the shader</param>
            <param name="current">Always pass the spacial value Shader.CurrentTexture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.Bind(Alis.Core.Graphic.D2.SFML.Graphics.Shader)">
            <summary>
                Bind a shader for rendering
            </summary>
            <param name="shader">Shader to bind (can be null to use no shader)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_createFromFile(System.String,System.String,System.String)">
            <summary>
                Sfs the shader create from file using the specified vertex shader filename
            </summary>
            <param name="vertexShaderFilename">The vertex shader filename</param>
            <param name="geometryShaderFilename">The geometry shader filename</param>
            <param name="fragmentShaderFilename">The fragment shader filename</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_createFromMemory(System.String,System.String,System.String)">
            <summary>
                Sfs the shader create from memory using the specified vertex shader
            </summary>
            <param name="vertexShader">The vertex shader</param>
            <param name="geometryShader">The geometry shader</param>
            <param name="fragmentShader">The fragment shader</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_createFromStream(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the shader create from stream using the specified vertex shader stream
            </summary>
            <param name="vertexShaderStream">The vertex shader stream</param>
            <param name="geometryShaderStream">The geometry shader stream</param>
            <param name="fragmentShaderStream">The fragment shader stream</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_destroy(System.IntPtr)">
            <summary>
                Sfs the shader destroy using the specified shader
            </summary>
            <param name="shader">The shader</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setFloatUniform(System.IntPtr,System.String,System.Single)">
            <summary>
                Sfs the shader set float uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setVec2Uniform(System.IntPtr,System.String,System.Numerics.Vector2)">
            <summary>
                Sfs the shader set vec 2 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setVec3Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Sfs the shader set vec 3 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setVec4Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector4F)">
            <summary>
                Sfs the shader set vec 4 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setIntUniform(System.IntPtr,System.String,System.Int32)">
            <summary>
                Sfs the shader set int uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setIvec2Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Sfs the shader set ivec 2 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setIvec3Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector3I)">
            <summary>
                Sfs the shader set ivec 3 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setIvec4Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector4I)">
            <summary>
                Sfs the shader set ivec 4 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setBoolUniform(System.IntPtr,System.String,System.Boolean)">
            <summary>
                Sfs the shader set bool uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setBvec2Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector2B)">
            <summary>
                Sfs the shader set bvec 2 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setBvec3Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector3B)">
            <summary>
                Sfs the shader set bvec 3 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setBvec4Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector4B)">
            <summary>
                Sfs the shader set bvec 4 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="vector">The vector</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setMat3Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Matrix.Matrix3X3F)">
            <summary>
                Sfs the shader set mat 3 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="matrix">The matrix</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setMat4Uniform(System.IntPtr,System.String,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>
                Sfs the shader set mat 4 uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="matrix">The matrix</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setTextureUniform(System.IntPtr,System.String,System.IntPtr)">
            <summary>
                Sfs the shader set texture uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setCurrentTextureUniform(System.IntPtr,System.String)">
            <summary>
                Sfs the shader set current texture uniform using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setFloatUniformArray(System.IntPtr,System.String,System.Single*,System.UInt32)">
            <summary>
                Sfs the shader set float uniform array using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="data">The data</param>
            <param name="length">The length</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setVec2UniformArray(System.IntPtr,System.String,System.Numerics.Vector2*,System.UInt32)">
            <summary>
                Sfs the shader set vec 2 uniform array using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="data">The data</param>
            <param name="length">The length</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setVec3UniformArray(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector3F*,System.UInt32)">
            <summary>
                Sfs the shader set vec 3 uniform array using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="data">The data</param>
            <param name="length">The length</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setVec4UniformArray(System.IntPtr,System.String,Alis.Core.Aspect.Math.Vector.Vector4F*,System.UInt32)">
            <summary>
                Sfs the shader set vec 4 uniform array using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="data">The data</param>
            <param name="length">The length</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setMat3UniformArray(System.IntPtr,System.String,Alis.Core.Aspect.Math.Matrix.Matrix3X3F*,System.UInt32)">
            <summary>
                Sfs the shader set mat 3 uniform array using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="data">The data</param>
            <param name="length">The length</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setMat4UniformArray(System.IntPtr,System.String,Alis.Core.Aspect.Math.Matrix.Matrix4X4F*,System.UInt32)">
            <summary>
                Sfs the shader set mat 4 uniform array using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="data">The data</param>
            <param name="length">The length</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setFloatParameter(System.IntPtr,System.String,System.Single)">
            <summary>
                Sfs the shader set float parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setFloat2Parameter(System.IntPtr,System.String,System.Single,System.Single)">
            <summary>
                Sfs the shader set float 2 parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setFloat3Parameter(System.IntPtr,System.String,System.Single,System.Single,System.Single)">
            <summary>
                Sfs the shader set float 3 parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setFloat4Parameter(System.IntPtr,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Sfs the shader set float 4 parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="z">The </param>
            <param name="w">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setColorParameter(System.IntPtr,System.String,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the shader set color parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setTransformParameter(System.IntPtr,System.String,Alis.Core.Graphic.D2.SFML.Graphics.Transform)">
            <summary>
                Sfs the shader set transform parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="transform">The transform</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setTextureParameter(System.IntPtr,System.String,System.IntPtr)">
            <summary>
                Sfs the shader set texture parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_setCurrentTextureParameter(System.IntPtr,System.String)">
            <summary>
                Sfs the shader set current texture parameter using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="name">The name</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_getNativeHandle(System.IntPtr)">
            <summary>
                Sfs the shader get native handle using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_bind(System.IntPtr)">
            <summary>
                Sfs the shader bind using the specified shader
            </summary>
            <param name="shader">The shader</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_isAvailable">
            <summary>
                Describes whether sf shader is available
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shader.sfShader_isGeometryAvailable">
            <summary>
                Describes whether sf shader is geometry available
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Shader.CurrentTextureType">
            <summary>
                Special type that can be passed to SetParameter,
                and that represents the texture of the object being drawn
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Shape">
            <summary>
                Base class for textured shapes with outline
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Shape.myGetPointCallback">
            <summary>
                The my get point callback
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Shape.myGetPointCountCallback">
            <summary>
                The my get point count callback
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Shape.myTexture">
            <summary>
                The my texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Shape)">
            <summary>
                Construct the shape from another shape
            </summary>
            <param name="copy">Shape to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shape.Texture">
            <summary>
                Source texture of the shape
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shape.TextureRect">
            <summary>
                Sub-rectangle of the texture that the shape will display
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shape.FillColor">
            <summary>
                Fill color of the shape
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shape.OutlineColor">
            <summary>
                Outline color of the shape
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Shape.OutlineThickness">
            <summary>
                Thickness of the shape's outline
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw the shape to a render target
            </summary>
            <param name="target">Render target to draw to</param>
            <param name="states">Current render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetPointCount">
            <summary>
                Get the total number of points of the shape
            </summary>
            <returns>The total point count</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetPoint(System.UInt32)">
            <summary>
                Get the position of a point
                The returned point is in local coordinates, that is,
                the shape's transforms (position, rotation, scale) are
                not taken into account.
                The result is undefined if index is out of the valid range.
            </summary>
            <param name="index">Index of the point to get, in range [0 .. PointCount - 1]</param>
            <returns>index-th point of the shape</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetLocalBounds">
            <summary>
                Get the local bounding rectangle of the entity.
                The returned rectangle is in local coordinates, which means
                that it ignores the transformations (translation, rotation,
                scale, ...) that are applied to the entity.
                In other words, this function returns the bounds of the
                entity in the entity's coordinate system.
            </summary>
            <returns>Local bounding rectangle of the entity</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetGlobalBounds">
            <summary>
                Get the global bounding rectangle of the entity.
                The returned rectangle is in global coordinates, which means
                that it takes in account the transformations (translation,
                rotation, scale, ...) that are applied to the entity.
                In other words, this function returns the bounds of the
                sprite in the global 2D world's coordinate system.
            </summary>
            <returns>Global bounding rectangle of the entity</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.Update">
            <summary>
                Recompute the internal geometry of the shape.
                This function must be called by the derived class everytime
                the shape's points change (ie. the result of either
                PointCount or GetPoint is different).
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.InternalGetPointCount(System.IntPtr)">
            <summary>
                Callback passed to the C API
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.InternalGetPoint(System.UInt32,System.IntPtr)">
            <summary>
                Callback passed to the C API
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_create(Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetPointCountCallbackType,Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetPointCallbackType,System.IntPtr)">
            <summary>
                Sfs the shape create using the specified get point count
            </summary>
            <param name="getPointCount">The get point count</param>
            <param name="getPoint">The get point</param>
            <param name="userData">The user data</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_copy(System.IntPtr)">
            <summary>
                Sfs the shape copy using the specified shape
            </summary>
            <param name="shape">The shape</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_destroy(System.IntPtr)">
            <summary>
                Sfs the shape destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_setTexture(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
                Sfs the shape set texture using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="texture">The texture</param>
            <param name="adjustToNewSize">The adjust to new size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_setTextureRect(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Sfs the shape set texture rect using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_getTextureRect(System.IntPtr)">
            <summary>
                Sfs the shape get texture rect using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_setFillColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the shape set fill color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_getFillColor(System.IntPtr)">
            <summary>
                Sfs the shape get fill color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_setOutlineColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the shape set outline color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_getOutlineColor(System.IntPtr)">
            <summary>
                Sfs the shape get outline color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_setOutlineThickness(System.IntPtr,System.Single)">
            <summary>
                Sfs the shape set outline thickness using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_getOutlineThickness(System.IntPtr)">
            <summary>
                Sfs the shape get outline thickness using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_getLocalBounds(System.IntPtr)">
            <summary>
                Sfs the shape get local bounds using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfShape_update(System.IntPtr)">
            <summary>
                Sfs the shape update using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfRenderWindow_drawShape(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render window draw shape using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="shape">The shape</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Shape.sfRenderTexture_drawShape(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render texture draw shape using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="shape">The shape</param>
            <param name="states">The states</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetPointCountCallbackType">
            <summary>
                The get point count callback type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Shape.GetPointCallbackType">
            <summary>
                The get point callback type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Sprite">
            <summary>
                This class defines a sprite : texture, transformations,
                color, and draw on screen
            </summary>
            <remarks>
                See also the note on coordinates and undistorted rendering in SFML.Graphics.Transformable.
            </remarks>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.myTexture">
            <summary>
                The my texture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Construct the sprite from a source texture
            </summary>
            <param name="texture">Source texture to assign to the sprite</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Texture,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Construct the sprite from a source texture
            </summary>
            <param name="texture">Source texture to assign to the sprite</param>
            <param name="rectangle">Sub-rectangle of the texture to assign to the sprite</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Sprite)">
            <summary>
                Construct the sprite from another sprite
            </summary>
            <param name="copy">Sprite to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.Color">
            <summary>
                Global color of the object
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.Texture">
            <summary>
                Source texture displayed by the sprite
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.TextureRect">
            <summary>
                Sub-rectangle of the source image displayed by the sprite
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw the sprite to a render target
            </summary>
            <param name="target">Render target to draw to</param>
            <param name="states">Current render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.GetLocalBounds">
            <summary>
                Get the local bounding rectangle of the entity.
                The returned rectangle is in local coordinates, which means
                that it ignores the transformations (translation, rotation,
                scale, ...) that are applied to the entity.
                In other words, this function returns the bounds of the
                entity in the entity's coordinate system.
            </summary>
            <returns>Local bounding rectangle of the entity</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.GetGlobalBounds">
            <summary>
                Get the global bounding rectangle of the entity.
                The returned rectangle is in global coordinates, which means
                that it takes in account the transformations (translation,
                rotation, scale, ...) that are applied to the entity.
                In other words, this function returns the bounds of the
                sprite in the global 2D world's coordinate system.
            </summary>
            <returns>Global bounding rectangle of the entity</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_create">
            <summary>
                Sfs the sprite create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_copy(System.IntPtr)">
            <summary>
                Sfs the sprite copy using the specified sprite
            </summary>
            <param name="sprite">The sprite</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_destroy(System.IntPtr)">
            <summary>
                Sfs the sprite destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_setColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the sprite set color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_getColor(System.IntPtr)">
            <summary>
                Sfs the sprite get color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfRenderWindow_drawSprite(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render window draw sprite using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="sprite">The sprite</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfRenderTexture_drawSprite(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render texture draw sprite using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="sprite">The sprite</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_setTexture(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
                Sfs the sprite set texture using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="texture">The texture</param>
            <param name="adjustToNewSize">The adjust to new size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_setTextureRect(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Sfs the sprite set texture rect using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_getTextureRect(System.IntPtr)">
            <summary>
                Sfs the sprite get texture rect using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Sprite.sfSprite_getLocalBounds(System.IntPtr)">
            <summary>
                Sfs the sprite get local bounds using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float rect</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Text">
            <summary>
                This class defines a graphical 2D text, that can be drawn on screen
            </summary>
            <remarks>
                See also the note on coordinates and undistorted rendering in SFML.Graphics.Transformable.
            </remarks>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Text.myFont">
            <summary>
                The my font
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.#ctor(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Font)">
            <summary>
                Construct the text from a string and a font
            </summary>
            <param name="str">String to display</param>
            <param name="font">Font to use</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.#ctor(System.String,Alis.Core.Graphic.D2.SFML.Graphics.Font,System.UInt32)">
            <summary>
                Construct the text from a string, font and size
            </summary>
            <param name="str">String to display</param>
            <param name="font">Font to use</param>
            <param name="characterSize">Base characters size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Text)">
            <summary>
                Construct the text from another text
            </summary>
            <param name="copy">Text to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.Color">
            <summary>
                Fill color of the object
            </summary>
            <remarks>
                Deprecated. Use <see cref="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.FillColor" /> instead.
                By default, the text's fill color is opaque white.
                Setting the fill color to a transparent color with an outline
                will cause the outline to be displayed in the fill area of the text.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.FillColor">
            <summary>
                Fill color of the object
            </summary>
            <remarks>
                By default, the text's fill color is opaque white.
                Setting the fill color to a transparent color with an outline
                will cause the outline to be displayed in the fill area of the text.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.OutlineColor">
            <summary>
                Outline color of the object
            </summary>
            <remarks>
                By default, the text's outline color is opaque black.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.OutlineThickness">
            <summary>
                Thickness of the object's outline
            </summary>
            <remarks>
                <para>By default, the outline thickness is 0.</para>
                <para>
                    Be aware that using a negative value for the outline
                    thickness will cause distorted rendering.
                </para>
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.DisplayedString">
            <summary>
                String which is displayed
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.Font">
            <summary>
                Font used to display the text
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.CharacterSize">
            <summary>
                Base size of characters
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.LetterSpacing">
            <summary>
                Size of the letter spacing factor
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.LineSpacing">
            <summary>
                Size of the line spacing factor
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Text.Style">
            <summary>
                Style of the text (see Styles enum)
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles">
            <summary>
                Enumerate the string drawing styles
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles.Regular">
            <summary>Regular characters, no style</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles.Bold">
            <summary>Bold characters</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles.Italic">
            <summary>Italic characters</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles.Underlined">
            <summary>Underlined characters</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles.StrikeThrough">
            <summary>Strike through characters</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw the text to a render target
            </summary>
            <param name="target">Render target to draw to</param>
            <param name="states">Current render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.FindCharacterPos(System.UInt32)">
            <summary>
                Return the visual position of the Index-th character of the text,
                in coordinates relative to the text
                (note : translation, origin, rotation and scale are not applied)
            </summary>
            <param name="index">Index of the character</param>
            <returns>Position of the Index-th character (end of text if Index is out of range)</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.GetLocalBounds">
            <summary>
                Get the local bounding rectangle of the entity.
                The returned rectangle is in local coordinates, which means
                that it ignores the transformations (translation, rotation,
                scale, ...) that are applied to the entity.
                In other words, this function returns the bounds of the
                entity in the entity's coordinate system.
            </summary>
            <returns>Local bounding rectangle of the entity</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.GetGlobalBounds">
            <summary>
                Get the global bounding rectangle of the entity.
                The returned rectangle is in global coordinates, which means
                that it takes in account the transformations (translation,
                rotation, scale, ...) that are applied to the entity.
                In other words, this function returns the bounds of the
                sprite in the global 2D world's coordinate system.
            </summary>
            <returns>Global bounding rectangle of the entity</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_create">
            <summary>
                Sfs the text create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_copy(System.IntPtr)">
            <summary>
                Sfs the text copy using the specified text
            </summary>
            <param name="text">The text</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_destroy(System.IntPtr)">
            <summary>
                Sfs the text destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the text set color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setFillColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the text set fill color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setOutlineColor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Sfs the text set outline color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setOutlineThickness(System.IntPtr,System.Single)">
            <summary>
                Sfs the text set outline thickness using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getColor(System.IntPtr)">
            <summary>
                Sfs the text get color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getFillColor(System.IntPtr)">
            <summary>
                Sfs the text get fill color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getOutlineColor(System.IntPtr)">
            <summary>
                Sfs the text get outline color using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The color</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getOutlineThickness(System.IntPtr)">
            <summary>
                Sfs the text get outline thickness using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfRenderWindow_drawText(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render window draw text using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="text">The text</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfRenderTexture_drawText(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render texture draw text using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="text">The text</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setUnicodeString(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the text set unicode string using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="text">The text</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setFont(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the text set font using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="font">The font</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setCharacterSize(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the text set character size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="size">The size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setLineSpacing(System.IntPtr,System.Single)">
            <summary>
                Sfs the text set line spacing using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="spacingFactor">The spacing factor</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setLetterSpacing(System.IntPtr,System.Single)">
            <summary>
                Sfs the text set letter spacing using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="spacingFactor">The spacing factor</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_setStyle(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Text.Styles)">
            <summary>
                Sfs the text set style using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="style">The style</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getString(System.IntPtr)">
            <summary>
                Sfs the text get string using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getUnicodeString(System.IntPtr)">
            <summary>
                Sfs the text get unicode string using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getCharacterSize(System.IntPtr)">
            <summary>
                Sfs the text get character size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getLetterSpacing(System.IntPtr)">
            <summary>
                Sfs the text get letter spacing using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getLineSpacing(System.IntPtr)">
            <summary>
                Sfs the text get line spacing using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getStyle(System.IntPtr)">
            <summary>
                Sfs the text get style using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The styles</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getRect(System.IntPtr)">
            <summary>
                Sfs the text get rect using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_findCharacterPos(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the text find character pos using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="index">The index</param>
            <returns>The vector 2f</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Text.sfText_getLocalBounds(System.IntPtr)">
            <summary>
                Sfs the text get local bounds using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float rect</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Texture">
            <summary>
                Image living on the graphics card that can be used for drawing
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Texture.myExternal">
            <summary>
                The my external
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the texture
            </summary>
            <param name="width">Texture width</param>
            <param name="height">Texture height</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.String)">
            <summary>
                Construct the texture from a file
            </summary>
            <param name="filename">Path of the image file to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.String,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Construct the texture from a file
            </summary>
            <param name="filename">Path of the image file to load</param>
            <param name="area">Area of the image to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.IO.Stream)">
            <summary>
                Construct the texture from a file in a stream
            </summary>
            <param name="stream">Stream containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.IO.Stream,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Construct the texture from a file in a stream
            </summary>
            <param name="stream">Stream containing the file contents</param>
            <param name="area">Area of the image to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Image)">
            <summary>
                Construct the texture from an image
            </summary>
            <param name="image">Image to load to the texture</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Image,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Construct the texture from an image
            </summary>
            <param name="image">Image to load to the texture</param>
            <param name="area">Area of the image to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.Byte[])">
            <summary>
                Construct the texture from a file in memory
            </summary>
            <param name="bytes">Byte array containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Construct the texture from another texture
            </summary>
            <param name="copy">Texture to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.#ctor(System.IntPtr)">
            <summary>
                Internal constructor
            </summary>
            <param name="cPointer">Pointer to the object in C library</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Texture.NativeHandle">
            <summary>
                Get the underlying OpenGL handle of the texture.
            </summary>
            <remarks>
                You shouldn't need to use this handle, unless you have
                very specific stuff to implement that SFML doesn't support.
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Smooth">
            <summary>
                Control the smooth filter
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Srgb">
            <summary>
                Enable or disable conversion from sRGB
            </summary>
            <remarks>
                <para>
                    When providing texture data from an image file or memory, it can
                    either be stored in a linear color space or an sRGB color space.
                    Most digital images account for gamma correction already, so they
                    would need to be "uncorrected" back to linear color space before
                    being processed by the hardware. The hardware can automatically
                    convert it from the sRGB color space to a linear color space when
                    it gets sampled. When the rendered image gets output to the final
                    framebuffer, it gets converted back to sRGB.
                </para>
                <para>
                    After enabling or disabling sRGB conversion, make sure to reload
                    the texture data in order for the setting to take effect.
                </para>
                <para>
                    This option is only useful in conjunction with an sRGB capable
                    framebuffer. This can be requested during window creation.
                </para>
            </remarks>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Repeated">
            <summary>
                Control the repeat mode
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Size">
            <summary>
                Size of the texture, in pixels
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Texture.MaximumSize">
            <summary>
                Maximum texture size allowed
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.CopyToImage">
            <summary>
                Copy a texture's pixels to an image
            </summary>
            <returns>Image containing the texture's pixels</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(System.Byte[])">
            <summary>
                Update a texture from an array of pixels
            </summary>
            <param name="pixels">Array of pixels to copy to the texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(System.Byte[],System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Update a texture from an array of pixels
            </summary>
            <param name="pixels">Array of pixels to copy to the texture</param>
            <param name="width">Width of the pixel region contained in pixels</param>
            <param name="height">Height of the pixel region contained in pixels</param>
            <param name="x">X offset in the texture where to copy the source pixels</param>
            <param name="y">Y offset in the texture where to copy the source pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Graphics.Texture,System.UInt32,System.UInt32)">
            <summary>
                Update a part of this texture from another texture
            </summary>
            <param name="texture">Source texture to copy to destination texture</param>
            <param name="x">X offset in this texture where to copy the source texture</param>
            <param name="y">Y offset in this texture where to copy the source texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Graphics.Image)">
            <summary>
                Update a texture from an image
            </summary>
            <param name="image">Image to copy to the texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Graphics.Image,System.UInt32,System.UInt32)">
            <summary>
                Update a texture from an image
            </summary>
            <param name="image">Image to copy to the texture</param>
            <param name="x">X offset in the texture where to copy the source pixels</param>
            <param name="y">Y offset in the texture where to copy the source pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Windows.Window)">
            <summary>
                Update a texture from the contents of a window
            </summary>
            <param name="window">Window to copy to the texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Windows.Window,System.UInt32,System.UInt32)">
            <summary>
                Update a texture from the contents of a window
            </summary>
            <param name="window">Window to copy to the texture</param>
            <param name="x">X offset in the texture where to copy the source pixels</param>
            <param name="y">Y offset in the texture where to copy the source pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow)">
            <summary>
                Update a texture from the contents of a render-window
            </summary>
            <param name="window">Render-window to copy to the texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Update(Alis.Core.Graphic.D2.SFML.Graphics.RenderWindow,System.UInt32,System.UInt32)">
            <summary>
                Update a texture from the contents of a render-window
            </summary>
            <param name="window">Render-window to copy to the texture</param>
            <param name="x">X offset in the texture where to copy the source pixels</param>
            <param name="y">Y offset in the texture where to copy the source pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.GenerateMipmap">
            <summary>
                Generate a mipmap using the current texture data
            </summary>
            <remarks>
                <para>
                    Mipmaps are pre-computed chains of optimized textures. Each
                    level of texture in a mipmap is generated by halving each of
                    the previous level's dimensions. This is done until the final
                    level has the size of 1x1. The textures generated in this process may
                    make use of more advanced filters which might improve the visual quality
                    of textures when they are applied to objects much smaller than they are.
                    This is known as minification. Because fewer texels (texture elements)
                    have to be sampled from when heavily minified, usage of mipmaps
                    can also improve rendering performance in certain scenarios.
                </para>
                <para>
                    Mipmap generation relies on the necessary OpenGL extension being
                    available. If it is unavailable or generation fails due to another
                    reason, this function will return false. Mipmap data is only valid from
                    the time it is generated until the next time the base level image is
                    modified, at which point this function will have to be called again to
                    regenerate it.
                </para>
            </remarks>
            <returns>True if mipmap generation was successful, false if unsuccessful</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Swap(Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Swap the contents of this texture with those of another
            </summary>
            <param name="right">Instance to swap with</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Bind(Alis.Core.Graphic.D2.SFML.Graphics.Texture)">
            <summary>
                Bind a texture for rendering
            </summary>
            <param name="texture">Shader to bind (can be null to use no texture)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_create(System.UInt32,System.UInt32)">
            <summary>
                Sfs the texture create using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_createFromFile(System.String,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Sfs the texture create from file using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <param name="area">The area</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_createFromStream(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Sfs the texture create from stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="area">The area</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_createFromImage(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Sfs the texture create from image using the specified image
            </summary>
            <param name="image">The image</param>
            <param name="area">The area</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_createFromMemory(System.IntPtr,System.UInt64,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Sfs the texture create from memory using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <param name="area">The area</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_copy(System.IntPtr)">
            <summary>
                Sfs the texture copy using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_destroy(System.IntPtr)">
            <summary>
                Sfs the texture destroy using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_getSize(System.IntPtr)">
            <summary>
                Sfs the texture get size using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The vector 2u</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_copyToImage(System.IntPtr)">
            <summary>
                Sfs the texture copy to image using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_updateFromPixels(System.IntPtr,System.Byte*,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Sfs the texture update from pixels using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_updateFromTexture(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Sfs the texture update from texture using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="texture">The texture</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_updateFromImage(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Sfs the texture update from image using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="image">The image</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_updateFromWindow(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Sfs the texture update from window using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_updateFromRenderWindow(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Sfs the texture update from render window using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="renderWindow">The render window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_bind(System.IntPtr)">
            <summary>
                Sfs the texture bind using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_setSmooth(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the texture set smooth using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="smooth">The smooth</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_isSmooth(System.IntPtr)">
            <summary>
                Describes whether sf texture is smooth
            </summary>
            <param name="texture">The texture</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_setSrgb(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the texture set srgb using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="sRgb">The rgb</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_isSrgb(System.IntPtr)">
            <summary>
                Describes whether sf texture is srgb
            </summary>
            <param name="texture">The texture</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_setRepeated(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the texture set repeated using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="repeated">The repeated</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_isRepeated(System.IntPtr)">
            <summary>
                Describes whether sf texture is repeated
            </summary>
            <param name="texture">The texture</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_generateMipmap(System.IntPtr)">
            <summary>
                Describes whether sf texture generate mipmap
            </summary>
            <param name="texture">The texture</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_swap(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the texture swap using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="right">The right</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_getNativeHandle(System.IntPtr)">
            <summary>
                Sfs the texture get native handle using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_getTexCoords(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Sfs the texture get tex coords using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rectangle">The rectangle</param>
            <returns>The float rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Texture.sfTexture_getMaximumSize">
            <summary>
                Sfs the texture get maximum size
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Transform">
            <summary>
                Define a 3x3 transform matrix
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct a transform from a 3x3 matrix
            </summary>
            <param name="a00">Element (0, 0) of the matrix</param>
            <param name="a01">Element (0, 1) of the matrix</param>
            <param name="a02">Element (0, 2) of the matrix</param>
            <param name="a10">Element (1, 0) of the matrix</param>
            <param name="a11">Element (1, 1) of the matrix</param>
            <param name="a12">Element (1, 2) of the matrix</param>
            <param name="a20">Element (2, 0) of the matrix</param>
            <param name="a21">Element (2, 1) of the matrix</param>
            <param name="a22">Element (2, 2) of the matrix</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.GetInverse">
            <summary>
                Return the inverse of the transform.
                If the inverse cannot be computed, an identity transform
                is returned.
            </summary>
            <returns>A new transform which is the inverse of self</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.TransformPoint(System.Single,System.Single)">
            <summary>
                Transform a 2D point.
            </summary>
            <param name="x">X coordinate of the point to transform</param>
            <param name="y">Y coordinate of the point to transform</param>
            <returns>Transformed point</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.TransformPoint(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Transform a 2D point.
            </summary>
            <param name="point">Point to transform</param>
            <returns>Transformed point</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.TransformRect(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Transform a rectangle.
                Since SFML doesn't provide support for oriented rectangles,
                the result of this function is always an axis-aligned
                rectangle. Which means that if the transform contains a
                rotation, the bounding rectangle of the transformed rectangle
                is returned.
            </summary>
            <param name="rectangle">Rectangle to transform</param>
            <returns>Transformed rectangle</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Combine(Alis.Core.Graphic.D2.SFML.Graphics.Transform)">
            <summary>
                Combine the current transform with another one.
                The result is a transform that is equivalent to applying
                this followed by transform. Mathematically, it is
                equivalent to a matrix multiplication.
            </summary>
            <param name="transform">Transform to combine to this transform</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Translate(System.Single,System.Single)">
            <summary>
                Combine the current transform with a translation.
            </summary>
            <param name="x">Offset to apply on X axis</param>
            <param name="y">Offset to apply on Y axis</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Translate(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Combine the current transform with a translation.
            </summary>
            <param name="offset">Translation offset to apply</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Rotate(System.Single)">
            <summary>
                Combine the current transform with a rotation.
            </summary>
            <param name="angle">Rotation angle, in degrees</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Rotate(System.Single,System.Single,System.Single)">
            <summary>
                Combine the current transform with a rotation.
                The center of rotation is provided for convenience as a second
                argument, so that you can build rotations around arbitrary points
                more easily (and efficiently) than the usual
                Translate(-center); Rotate(angle); Translate(center).
            </summary>
            <param name="angle">Rotation angle, in degrees</param>
            <param name="centerX">X coordinate of the center of rotation</param>
            <param name="centerY">Y coordinate of the center of rotation</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Rotate(System.Single,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Combine the current transform with a rotation.
                The center of rotation is provided for convenience as a second
                argument, so that you can build rotations around arbitrary points
                more easily (and efficiently) than the usual
                Translate(-center); Rotate(angle); Translate(center).
            </summary>
            <param name="angle">Rotation angle, in degrees</param>
            <param name="center">Center of rotation</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Scale(System.Single,System.Single)">
            <summary>
                Combine the current transform with a scaling.
            </summary>
            <param name="scaleX">Scaling factor on the X axis</param>
            <param name="scaleY">Scaling factor on the Y axis</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Scale(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Combine the current transform with a scaling.
                The center of scaling is provided for convenience as a second
                argument, so that you can build scaling around arbitrary points
                more easily (and efficiently) than the usual
                Translate(-center); Scale(factors); Translate(center).
            </summary>
            <param name="scaleX">Scaling factor on X axis</param>
            <param name="scaleY">Scaling factor on Y axis</param>
            <param name="centerX">X coordinate of the center of scaling</param>
            <param name="centerY">Y coordinate of the center of scaling</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Scale(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Combine the current transform with a scaling.
            </summary>
            <param name="factors">Scaling factors</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Scale(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Combine the current transform with a scaling.
                The center of scaling is provided for convenience as a second
                argument, so that you can build scaling around arbitrary points
                more easily (and efficiently) than the usual
                Translate(-center); Scale(factors); Translate(center).
            </summary>
            <param name="factors">Scaling factors</param>
            <param name="center">Center of scaling</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Equals(System.Object)">
            <summary>
                Compare Transform and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and transform are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.GetHashCode">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Equals(Alis.Core.Graphic.D2.SFML.Graphics.Transform)">
            <summary>
                Compare two transforms for equality
                Performs an element-wise comparison of the elements of this
                transform with the elements of the right transform.
            </summary>
            <param name="transform">Transform to check</param>
            <returns>Transforms are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.op_Multiply(Alis.Core.Graphic.D2.SFML.Graphics.Transform,Alis.Core.Graphic.D2.SFML.Graphics.Transform)">
            <summary>
                Overload of binary operator * to combine two transforms.
                This call is equivalent to calling new Transform(left).Combine(right).
            </summary>
            <param name="left">Left operand (the first transform)</param>
            <param name="right">Right operand (the second transform)</param>
            <returns>New combined transform</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.op_Multiply(Alis.Core.Graphic.D2.SFML.Graphics.Transform,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Overload of binary operator * to transform a point.
                This call is equivalent to calling left.TransformPoint(right).
            </summary>
            <param name="left">Left operand (the transform)</param>
            <param name="right">Right operand (the point to transform)</param>
            <returns>New transformed point</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transform.Identity">
            <summary>The identity transform (does nothing)</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m00">
            <summary>
                The 02
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m01">
            <summary>
                The 02
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m02">
            <summary>
                The 02
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m10">
            <summary>
                The 12
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m11">
            <summary>
                The 12
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m12">
            <summary>
                The 12
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m20">
            <summary>
                The 22
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m21">
            <summary>
                The 22
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transform.m22">
            <summary>
                The 22
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_getInverse(Alis.Core.Graphic.D2.SFML.Graphics.Transform@)">
            <summary>
                Sfs the transform get inverse using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <returns>The transform</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_transformPoint(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Sfs the transform transform point using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="point">The point</param>
            <returns>The vector 2f</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_transformRect(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Sfs the transform transform rect using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="rectangle">The rectangle</param>
            <returns>The float rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_combine(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,Alis.Core.Graphic.D2.SFML.Graphics.Transform@)">
            <summary>
                Sfs the transform combine using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="other">The other</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_translate(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,System.Single,System.Single)">
            <summary>
                Sfs the transform translate using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_rotate(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,System.Single)">
            <summary>
                Sfs the transform rotate using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="angle">The angle</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_rotateWithCenter(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,System.Single,System.Single,System.Single)">
            <summary>
                Sfs the transform rotate with center using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="angle">The angle</param>
            <param name="centerX">The center</param>
            <param name="centerY">The center</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_scale(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,System.Single,System.Single)">
            <summary>
                Sfs the transform scale using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_scaleWithCenter(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Sfs the transform scale with center using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
            <param name="centerX">The center</param>
            <param name="centerY">The center</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transform.sfTransform_equal(Alis.Core.Graphic.D2.SFML.Graphics.Transform@,Alis.Core.Graphic.D2.SFML.Graphics.Transform@)">
            <summary>
                Describes whether sf transform equal
            </summary>
            <param name="left">The left</param>
            <param name="right">The right</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Transformable">
            <summary>
                Decomposed transform defined by a position, a rotation and a scale
            </summary>
            <remarks>
                A note on coordinates and undistorted rendering:
                By default, SFML (or more exactly, OpenGL) may interpolate drawable objects
                such as sprites or texts when rendering. While this allows transitions
                like slow movements or rotations to appear smoothly, it can lead to
                unwanted results in some cases, for example blurred or distorted objects.
                In order to render a SFML.Graphics.Drawable object pixel-perfectly, make sure
                the involved coordinates allow a 1:1 mapping of pixels in the window
                to texels (pixels in the texture). More specifically, this means:
                * The object's position, origin and scale have no fractional part
                * The object's and the view's rotation are a multiple of 90 degrees
                * The view's center and size have no fractional part
            </remarks>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myInverseNeedUpdate">
            <summary>
                The my inverse need update
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myInverseTransform">
            <summary>
                The my inverse transform
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myOrigin">
            <summary>
                The vector 2f
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myPosition">
            <summary>
                The vector 2f
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myRotation">
            <summary>
                The my rotation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myScale">
            <summary>
                The vector 2f
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myTransform">
            <summary>
                The my transform
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.myTransformNeedUpdate">
            <summary>
                The my transform need update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.Transformable)">
            <summary>
                Construct the transformable from another transformable
            </summary>
            <param name="transformable">Transformable to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.#ctor(System.IntPtr)">
            <summary>
                Construct the object from its internal C pointer
            </summary>
            <param name="cPointer">Pointer to the object in the C library</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.Position">
            <summary>
                Position of the object
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.Rotation">
            <summary>
                Rotation of the object
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.Scale">
            <summary>
                Scale of the object
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.Origin">
            <summary>
                The origin of an object defines the center point for
                all transformations (position, scale, rotation).
                The coordinates of this point must be relative to the
                top-left corner of the object, and ignore all
                transformations (position, scale, rotation).
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.Transform">
            <summary>
                The combined transform of the object
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.InverseTransform">
            <summary>
                The combined transform of the object
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Transformable.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.Vertex">
            <summary>
                Define a point with color and texture coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the vertex from its position
                The vertex color is white and texture coordinates are (0, 0).
            </summary>
            <param name="position">Vertex position</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Graphic.D2.SFML.Graphics.Color)">
            <summary>
                Construct the vertex from its position and color
                The texture coordinates are (0, 0).
            </summary>
            <param name="position">Vertex position</param>
            <param name="color">Vertex color</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the vertex from its position and texture coordinates
                The vertex color is white.
            </summary>
            <param name="position">Vertex position</param>
            <param name="texCoords">Vertex texture coordinates</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Graphic.D2.SFML.Graphics.Color,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the vertex from its position, color and texture coordinates
            </summary>
            <param name="position">Vertex position</param>
            <param name="color">Vertex color</param>
            <param name="texCoords">Vertex texture coordinates</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.Position">
            <summary>2D position of the vertex</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.Color">
            <summary>Color of the vertex</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.Vertex.TexCoords">
            <summary>Coordinates of the texture's pixel to map to the vertex</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray">
            <summary>
                Define a set of one or more 2D primitives
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Construct the vertex array with a type
            </summary>
            <param name="type">Type of primitives</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,System.UInt32)">
            <summary>
                Construct the vertex array with a type and an initial number of vertices
            </summary>
            <param name="type">Type of primitives</param>
            <param name="vertexCount">Initial number of vertices in the array</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.VertexArray)">
            <summary>
                Construct the vertex array from another vertex array
            </summary>
            <param name="copy">Transformable to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.VertexCount">
            <summary>
                Total vertex count
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Item(System.UInt32)">
            <summary>
                Read-write access to vertices by their index.
                This function doesn't check index, it must be in range
                [0, VertexCount - 1]. The behaviour is undefined
                otherwise.
            </summary>
            <param name="index">Index of the vertex to get</param>
            <returns>Reference to the index-th vertex</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.PrimitiveType">
            <summary>
                Type of primitives to draw
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Bounds">
            <summary>
                Compute the bounding rectangle of the vertex array.
                This function returns the axis-aligned rectangle that
                contains all the vertices of the array.
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw the vertex array to a render target
            </summary>
            <param name="target">Render target to draw to</param>
            <param name="states">Current render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Clear">
            <summary>
                Clear the vertex array
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Resize(System.UInt32)">
            <summary>
                Resize the vertex array
                If \a vertexCount is greater than the current size, the previous
                vertices are kept and new (default-constructed) vertices are
                added.
                If \a vertexCount is less than the current size, existing vertices
                are removed from the array.
            </summary>
            <param name="vertexCount">New size of the array (number of vertices)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Append(Alis.Core.Graphic.D2.SFML.Graphics.Vertex)">
            <summary>
                Add a vertex to the array
            </summary>
            <param name="vertex">Vertex to add</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_create">
            <summary>
                Sfs the vertex array create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_copy(System.IntPtr)">
            <summary>
                Sfs the vertex array copy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_destroy(System.IntPtr)">
            <summary>
                Sfs the vertex array destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_getVertexCount(System.IntPtr)">
            <summary>
                Sfs the vertex array get vertex count using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_getVertex(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the vertex array get vertex using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="index">The index</param>
            <returns>The vertex</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_clear(System.IntPtr)">
            <summary>
                Sfs the vertex array clear using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_resize(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the vertex array resize using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexCount">The vertex count</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_append(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Vertex)">
            <summary>
                Sfs the vertex array append using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertex">The vertex</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_setPrimitiveType(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Sfs the vertex array set primitive type using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="type">The type</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_getPrimitiveType(System.IntPtr)">
            <summary>
                Sfs the vertex array get primitive type using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The primitive type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfVertexArray_getBounds(System.IntPtr)">
            <summary>
                Sfs the vertex array get bounds using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The float rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfRenderWindow_drawVertexArray(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render window draw vertex array using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexArray">The vertex array</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexArray.sfRenderTexture_drawVertexArray(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render texture draw vertex array using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexArray">The vertex array</param>
            <param name="states">The states</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer">
            <summary>
                The vertex buffer class
            </summary>
            <seealso cref="T:Alis.Core.Graphic.D2.SFML.ObjectBase" />
            <seealso cref="T:Alis.Core.Graphic.D2.SFML.Graphics.IDrawable" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.#ctor(System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier)">
            <summary>
                Create a new vertex buffer with a specific
                PrimitiveType and usage specifier.
                Creates the vertex buffer, allocating enough graphcis
                memory to hold \p vertexCount vertices, and sets its
                primitive type to \p type and usage to \p usage.
            </summary>
            <param name="vertexCount">Amount of vertices</param>
            <param name="primitiveType">Type of primitives</param>
            <param name="usageType">Usage specifier</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer)">
            <summary>
                Construct the vertex buffer from another vertex array
            </summary>
            <param name="copy">VertexBuffer to copy</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Available">
            <summary>
                Whether or not the system supports vertex buffers
                This function should always be called before using
                the vertex buffer features. If it returns false, then
                any attempt to use sf::VertexBuffer will fail.
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.VertexCount">
            <summary>
                Total vertex count
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.NativeHandle">
            <summary>
                OpenGL handle of the vertex buffer or 0 if not yet created
                You shouldn't need to use this property, unless you have
                very specific stuff to implement that SFML doesn't support.
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.PrimitiveType">
            <summary>
                The type of primitives drawn by the vertex buffer
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Usage">
            <summary>
                The usage specifier for the vertex buffer
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier">
            <summary>
                Usage specifiers
                If data is going to be updated once or more every frame,
                set the usage to Stream. If data is going
                to be set once and used for a long time without being
                modified, set the usage to Static.
                For everything else Dynamic should
                be a good compromise.
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier.Stream">
            <summary>
                The stream usage specifier
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier.Dynamic">
            <summary>
                The dynamic usage specifier
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier.Static">
            <summary>
                The static usage specifier
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Draw(Alis.Core.Graphic.D2.SFML.Graphics.IRenderTarget,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates)">
            <summary>
                Draw the vertex buffer to a render target
            </summary>
            <param name="target">Render target to draw to</param>
            <param name="states">Current render states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Update(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32,System.UInt32)">
            <summary>
                Update a part of the buffer from an array of vertices
                offset is specified as the number of vertices to skip
                from the beginning of the buffer.
                If offset is 0 and vertexCount is equal to the size of
                the currently created buffer, its whole contents are replaced.
                If offset is 0 and vertexCount is greater than the
                size of the currently created buffer, a new buffer is created
                containing the vertex data.
                If offset is 0 and vertexCount is less than the size of
                the currently created buffer, only the corresponding region
                is updated.
                If offset is not 0 and offset + vertexCount is greater
                than the size of the currently created buffer, the update fails.
                No additional check is performed on the size of the vertex
                array, passing invalid arguments will lead to undefined
                behavior.
            </summary>
            <param name="vertices">Array of vertices to copy to the buffer</param>
            <param name="vertexCount">Number of vertices to copy</param>
            <param name="offset">Offset in the buffer to copy to</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Update(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[])">
            <summary>
                Update a part of the buffer from an array of vertices
                assuming an offset of 0 and a vertex count the length of the passed array.
                If offset is 0 and vertexCount is equal to the size of
                the currently created buffer, its whole contents are replaced.
                If offset is 0 and vertexCount is greater than the
                size of the currently created buffer, a new buffer is created
                containing the vertex data.
                If offset is 0 and vertexCount is less than the size of
                the currently created buffer, only the corresponding region
                is updated.
                If offset is not 0 and offset + vertexCount is greater
                than the size of the currently created buffer, the update fails.
                No additional check is performed on the size of the vertex
                array, passing invalid arguments will lead to undefined
                behavior.
            </summary>
            <param name="vertices">Array of vertices to copy to the buffer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Update(Alis.Core.Graphic.D2.SFML.Graphics.Vertex[],System.UInt32)">
            <summary>
                Update a part of the buffer from an array of vertices
                assuming a vertex count the length of the passed array.
                If offset is 0 and vertexCount is equal to the size of
                the currently created buffer, its whole contents are replaced.
                If offset is 0 and vertexCount is greater than the
                size of the currently created buffer, a new buffer is created
                containing the vertex data.
                If offset is 0 and vertexCount is less than the size of
                the currently created buffer, only the corresponding region
                is updated.
                If offset is not 0 and offset + vertexCount is greater
                than the size of the currently created buffer, the update fails.
                No additional check is performed on the size of the vertex
                array, passing invalid arguments will lead to undefined
                behavior.
            </summary>
            <param name="vertices">Array of vertices to copy to the buffer</param>
            <param name="offset">Offset in the buffer to copy to</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Update(Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer)">
            <summary>
                Copy the contents of another buffer into this buffer
            </summary>
            <param name="other">Vertex buffer whose contents to copy into first vertex buffer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Swap(Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer)">
            <summary>
                Swap the contents of another buffer into this buffer
            </summary>
            <param name="other">Vertex buffer whose contents to swap with</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_create(System.UInt32,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType,Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier)">
            <summary>
                Sfs the vertex buffer create using the specified vertex count
            </summary>
            <param name="vertexCount">The vertex count</param>
            <param name="type">The type</param>
            <param name="usage">The usage</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_copy(System.IntPtr)">
            <summary>
                Sfs the vertex buffer copy using the specified copy
            </summary>
            <param name="copy">The copy</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_destroy(System.IntPtr)">
            <summary>
                Sfs the vertex buffer destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_getVertexCount(System.IntPtr)">
            <summary>
                Sfs the vertex buffer get vertex count using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_update(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.Vertex*,System.UInt32,System.UInt32)">
            <summary>
                Describes whether sf vertex buffer update
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertices">The vertices</param>
            <param name="vertexCount">The vertex count</param>
            <param name="offset">The offset</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_updateFromVertexBuffer(System.IntPtr,System.IntPtr)">
            <summary>
                Describes whether sf vertex buffer update from vertex buffer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_swap(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the vertex buffer swap using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="other">The other</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_getNativeHandle(System.IntPtr)">
            <summary>
                Sfs the vertex buffer get native handle using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_setPrimitiveType(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.PrimitiveType)">
            <summary>
                Sfs the vertex buffer set primitive type using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="primitiveType">The primitive type</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_getPrimitiveType(System.IntPtr)">
            <summary>
                Sfs the vertex buffer get primitive type using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The primitive type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_setUsage(System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.UsageSpecifier)">
            <summary>
                Sfs the vertex buffer set usage using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="usageType">The usage type</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_getUsage(System.IntPtr)">
            <summary>
                Sfs the vertex buffer get usage using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The usage specifier</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfVertexBuffer_isAvailable">
            <summary>
                Describes whether sf vertex buffer is available
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfRenderWindow_drawVertexBuffer(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render window draw vertex buffer using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexArray">The vertex array</param>
            <param name="states">The states</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.VertexBuffer.sfRenderTexture_drawVertexBuffer(System.IntPtr,System.IntPtr,Alis.Core.Graphic.D2.SFML.Graphics.RenderStates.MarshalData@)">
            <summary>
                Sfs the render texture draw vertex buffer using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="vertexBuffer">The vertex buffer</param>
            <param name="states">The states</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Graphics.View">
            <summary>
                This class defines a view (position, size, etc.) ;
                you can consider it as a 2D camera
            </summary>
            <remarks>
                See also the note on coordinates and undistorted rendering in SFML.Graphics.Transformable.
            </remarks>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Graphics.View.myExternal">
            <summary>
                The my external
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.#ctor">
            <summary>
                Create a default view (1000x1000)
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.#ctor(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Construct the view from a rectangle
            </summary>
            <param name="viewRect">Rectangle defining the position and size of the view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the view from its center and size
            </summary>
            <param name="center">Center of the view</param>
            <param name="size">Size of the view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.#ctor(Alis.Core.Graphic.D2.SFML.Graphics.View)">
            <summary>
                Construct the view from another view
            </summary>
            <param name="copy">View to copy</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.#ctor(System.IntPtr)">
            <summary>
                Internal constructor for other classes which need to manipulate raw views
            </summary>
            <param name="cPointer">Direct pointer to the view object in the C library</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.View.Center">
            <summary>
                Center of the view
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.View.Size">
            <summary>
                Half-size of the view
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.View.Rotation">
            <summary>
                Rotation of the view, in degrees
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Graphics.View.Viewport">
            <summary>
                Target viewport of the view, defined as a factor of the
                size of the target to which the view is applied
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.Reset(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Rebuild the view from a rectangle
            </summary>
            <param name="rectangle">Rectangle defining the position and size of the view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.Move(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Move the view
            </summary>
            <param name="offset">Offset to move the view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.Rotate(System.Single)">
            <summary>
                Rotate the view
            </summary>
            <param name="angle">Angle of rotation, in degrees</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.Zoom(System.Single)">
            <summary>
                Resize the view rectangle to simulate a zoom / unzoom effect
            </summary>
            <param name="factor">Zoom factor to apply, relative to the current zoom</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_create">
            <summary>
                Sfs the view create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_createFromRect(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Sfs the view create from rect using the specified rect
            </summary>
            <param name="rect">The rect</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_copy(System.IntPtr)">
            <summary>
                Sfs the view copy using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_destroy(System.IntPtr)">
            <summary>
                Sfs the view destroy using the specified view
            </summary>
            <param name="view">The view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_setCenter(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Sfs the view set center using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="center">The center</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_setSize(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Sfs the view set size using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="size">The size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_setRotation(System.IntPtr,System.Single)">
            <summary>
                Sfs the view set rotation using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="angle">The angle</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_setViewport(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Sfs the view set viewport using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="viewport">The viewport</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_reset(System.IntPtr,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Sfs the view reset using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="rectangle">The rectangle</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_getCenter(System.IntPtr)">
            <summary>
                Sfs the view get center using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The vector 2f</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_getSize(System.IntPtr)">
            <summary>
                Sfs the view get size using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The vector 2f</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_getRotation(System.IntPtr)">
            <summary>
                Sfs the view get rotation using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_getViewport(System.IntPtr)">
            <summary>
                Sfs the view get viewport using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The float rect</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_move(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Sfs the view move using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="offset">The offset</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_rotate(System.IntPtr,System.Single)">
            <summary>
                Sfs the view rotate using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="angle">The angle</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Graphics.View.sfView_zoom(System.IntPtr,System.Single)">
            <summary>
                Sfs the view zoom using the specified view
            </summary>
            <param name="view">The view</param>
            <param name="factor">The factor</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.ObjectBase">
            <summary>
                The ObjectBase class is an abstract base for every
                SFML object. It's meant for internal use only
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.ObjectBase.myCPointer">
            <summary>
                The zero
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.D2.SFML.ObjectBase" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.#ctor(System.IntPtr)">
            <summary>
                Construct the object from a pointer to the C library object
            </summary>
            <param name="cPointer">Internal pointer to the object in the C libraries</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.ObjectBase.CPointer">
            <summary>
                Access to the internal pointer of the object.
                For internal use only
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.Destroy(System.Boolean)">
            <summary>
                Destroy the object (implementation is left to each derived class)
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.ObjectBase.Load">
            <summary>
                Loads
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Time">
            <summary>
                This class represents a time value
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Time.Zero">
            <summary>
                Predefined "zero" time value
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.FromSeconds(System.Single)">
            <summary>
                Construct a time value from a number of seconds
            </summary>
            <param name="seconds">Number of seconds</param>
            <returns>Time value constructed from the amount of seconds</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.FromMilliseconds(System.Int32)">
            <summary>
                Construct a time value from a number of milliseconds
            </summary>
            <param name="milliseconds">Number of milliseconds</param>
            <returns>Time value constructed from the amount of milliseconds</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.FromMicroseconds(System.Int64)">
            <summary>
                Construct a time value from a number of microseconds
            </summary>
            <param name="microseconds">Number of microseconds</param>
            <returns>Time value constructed from the amount of microseconds</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.AsSeconds">
            <summary>
                Returns the time value as a number of seconds
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.AsMilliseconds">
            <summary>
                Returns the time value as a number of milliseconds
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.AsMicroseconds">
            <summary>
                Returns the time value as a number of microseconds
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Equality(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Compare two times and checks if they are equal
            </summary>
            <returns>Times are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Inequality(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Compare two times and checks if they are not equal
            </summary>
            <returns>Times are not equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.Equals(System.Object)">
            <summary>
                Compare time and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and time are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.Equals(Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Compare two times and checks if they are equal
            </summary>
            <param name="other">Time to check</param>
            <returns>times are equal</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_LessThan(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of &lt; operator to compare two time values
            </summary>
            <returns>True if left is lesser than right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_LessThanOrEqual(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of &lt;= operator to compare two time values
            </summary>
            <returns>True if left is lesser or equal than right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_GreaterThan(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of &gt; operator to compare two time values
            </summary>
            <returns>True if left is greater than right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_GreaterThanOrEqual(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of &gt;= operator to compare two time values
            </summary>
            <returns>True if left is greater or equal than right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Subtraction(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of binary - operator to subtract two time values
            </summary>
            <returns>Difference of the two times values</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Addition(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of binary + operator to add two time values
            </summary>
            <returns>Sum of the two times values</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Multiply(Alis.Core.Graphic.D2.SFML.Time,System.Single)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Multiply(Alis.Core.Graphic.D2.SFML.Time,System.Int64)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Multiply(System.Single,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Multiply(System.Int64,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Division(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of binary / operator to scale a time value
            </summary>
            <returns>left divided by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Division(Alis.Core.Graphic.D2.SFML.Time,System.Single)">
            <summary>
                Overload of binary / operator to scale a time value
            </summary>
            <returns>left divided by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Division(Alis.Core.Graphic.D2.SFML.Time,System.Int64)">
            <summary>
                Overload of binary / operator to scale a time value
            </summary>
            <returns>left divided by the right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.op_Modulus(Alis.Core.Graphic.D2.SFML.Time,Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Overload of binary % operator to compute remainder of a time value
            </summary>
            <returns>left modulo of right</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Time.microseconds">
            <summary>
                The microseconds
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.sfSeconds(System.Single)">
            <summary>
                Sfs the seconds using the specified amount
            </summary>
            <param name="amount">The amount</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.sfMilliseconds(System.Int32)">
            <summary>
                Sfs the milliseconds using the specified amount
            </summary>
            <param name="amount">The amount</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.sfMicroseconds(System.Int64)">
            <summary>
                Sfs the microseconds using the specified amount
            </summary>
            <param name="amount">The amount</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.sfTime_asSeconds(Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Sfs the time as seconds using the specified time
            </summary>
            <param name="time">The time</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.sfTime_asMilliseconds(Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Sfs the time as milliseconds using the specified time
            </summary>
            <param name="time">The time</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Time.sfTime_asMicroseconds(Alis.Core.Graphic.D2.SFML.Time)">
            <summary>
                Sfs the time as microseconds using the specified time
            </summary>
            <param name="time">The time</param>
            <returns>The long</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Axis">
            <summary>
                Axes supported by SFML joysticks
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.X">
            <summary>The X axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.Y">
            <summary>The Y axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.Z">
            <summary>The Z axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.R">
            <summary>The R axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.U">
            <summary>The U axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.V">
            <summary>The V axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.PovX">
            <summary>The X axis of the point-of-view hat</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Axis.PovY">
            <summary>TheY axis of the point-of-view hat</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Clipboard">
            <summary>
                The clipboard class
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Clipboard.Contents">
            <summary>
                The contents of the Clipboard as a UTF-32 string
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Clipboard.sfClipboard_getUnicodeString">
            <summary>
                Sfs the clipboard get unicode string
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Clipboard.sfClipboard_setUnicodeString(System.IntPtr)">
            <summary>
                Sfs the clipboard set unicode string using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Context">
            <summary>
                This class defines a .NET interface to an SFML OpenGL Context
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Context.myThis">
            <summary>
                The zero
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Context.Settings">
            <summary>
                Get the settings of the context.
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Context.Global">
            <summary>
                Global helper context
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Context._ourGlobalContext">
            <summary>
                The our global context
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.Finalize">
            <summary>
                Finalizer
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.SetActive(System.Boolean)">
            <summary>
                Activate or deactivate the context
            </summary>
            <param name="active">True to activate, false to deactivate</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.sfContext_create">
            <summary>
                Sfs the context create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.sfContext_destroy(System.IntPtr)">
            <summary>
                Sfs the context destroy using the specified view
            </summary>
            <param name="view">The view</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.sfContext_setActive(System.IntPtr,System.Boolean)">
            <summary>
                Describes whether sf context set active
            </summary>
            <param name="view">The view</param>
            <param name="active">The active</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Context.sfContext_getSettings(System.IntPtr)">
            <summary>
                Sfs the context get settings using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The context settings</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings">
            <summary>
                Structure defining the creation settings of OpenGL contexts
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.Attribute">
            <summary>
                Enumeration of the context attribute flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.Attribute.Default">
            <summary>Non-debug, compatibility context (this and the core attribute are mutually exclusive)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.Attribute.Core">
            <summary>Core attribute</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.Attribute.Debug">
            <summary>Debug attribute</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the settings from depth / stencil bits
            </summary>
            <param name="depthBits">Depth buffer bits</param>
            <param name="stencilBits">Stencil buffer bits</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Construct the settings from depth / stencil bits and antialiasing level
            </summary>
            <param name="depthBits">Depth buffer bits</param>
            <param name="stencilBits">Stencil buffer bits</param>
            <param name="antialiasingLevel">Antialiasing level</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.Attribute,System.Boolean)">
            <summary>
                Construct the settings from depth / stencil bits and antialiasing level
            </summary>
            <param name="depthBits">Depth buffer bits</param>
            <param name="stencilBits">Stencil buffer bits</param>
            <param name="antialiasingLevel">Antialiasing level</param>
            <param name="majorVersion">Major number of the context version</param>
            <param name="minorVersion">Minor number of the context version</param>
            <param name="attributes">Attribute flags of the context</param>
            <param name="sRgbCapable">sRGB capability of the context</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.DepthBits">
            <summary>Depth buffer bits (0 is disabled)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.StencilBits">
            <summary>Stencil buffer bits (0 is disabled)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.AntialiasingLevel">
            <summary>Antialiasing level (0 is disabled)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.MajorVersion">
            <summary>Major number of the context version</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.MinorVersion">
            <summary>Minor number of the context version</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.AttributeFlags">
            <summary>The attribute flags to create the context with</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.ContextSettings.SRgbCapable">
            <summary>Whether the context framebuffer is sRGB capable</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Cursor">
            <summary>
                The cursor class
            </summary>
            <seealso cref="T:Alis.Core.Graphic.D2.SFML.ObjectBase" />
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Cursor.#ctor(Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType)">
            <summary>
                Create a native system cursor
                Refer to the list of cursor available on each system
                (see CursorType) to know whether a given cursor is
                expected to load successfully or is not supported by
                the operating system.
            </summary>
            <param name="type">System cursor type</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Cursor.#ctor(System.Byte[],Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Create a cursor with the provided image
                Pixels must be an array of width by height pixels
                in 32-bit RGBA format. If not, this will cause undefined behavior.
                If pixels is null or either width or height are 0,
                the current cursor is left unchanged and the function will
                return false.
                In addition to specifying the pixel data, you can also
                specify the location of the hotspot of the cursor. The
                hotspot is the pixel coordinate within the cursor image
                which will be located exactly where the mouse pointer
                position is. Any mouse actions that are performed will
                return the window/screen location of the hotspot.
                Warning: On Unix, the pixels are mapped into a monochrome
                bitmap: pixels with an alpha channel to 0 are
                transparent, black if the RGB channel are close
                to zero, and white otherwise.
            </summary>
            <param name="pixels">Array of pixels of the image</param>
            <param name="size">Width and height of the image</param>
            <param name="hotspot">(x,y) location of the hotspot</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType">
            <summary>
                Enumeration of possibly available native system cursor types
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.Arrow">
            <summary>
                Arrow cursor (default)
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.ArrowWait">
            <summary>
                Busy arrow cursor
                Windows: Yes
                Mac OS:  No
                Linux:   No
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.Wait">
            <summary>
                Busy cursor
                Windows: Yes
                Mac OS:  No
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.Text">
            <summary>
                I-beam, cursor when hovering over a field allowing text entry
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.Hand">
            <summary>
                Pointing hand cursor
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.SizeHorinzontal">
            <summary>
                Horizontal double arrow cursor
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.SizeVertical">
            <summary>
                Vertical double arrow cursor
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.SizeTopLeftBottomRight">
            <summary>
                Double arrow cursor going from top-left to bottom-right
                Windows: Yes
                Mac OS:  No
                Linux:   No
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.SizeBottomLeftTopRight">
            <summary>
                Double arrow cursor going from bottom-left to top-right
                Windows: Yes
                Mac OS:  No
                Linux:   No
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.SizeAll">
            <summary>
                Combination of SizeHorizontal and SizeVertical
                Windows: Yes
                Mac OS:  No
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.Cross">
            <summary>
                Crosshair cursor
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.Help">
            <summary>
                Help cursor
                Windows: Yes
                Mac OS:  No
                Linux:   Yes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType.NotAllowed">
            <summary>
                Action not allowed cursor
                Windows: Yes
                Mac OS:  Yes
                Linux:   Yes
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Cursor.Destroy(System.Boolean)">
            <summary>
                Destroys the disposing
            </summary>
            <param name="disposing">The disposing</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Cursor.sfCursor_createFromSystem(Alis.Core.Graphic.D2.SFML.Windows.Cursor.CursorType)">
            <summary>
                Sfs the cursor create from system using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Cursor.sfCursor_createFromPixels(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Sfs the cursor create from pixels using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="size">The size</param>
            <param name="hotspot">The hotspot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Cursor.sfCursor_destroy(System.IntPtr)">
            <summary>
                Sfs the cursor destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Event">
            <summary>
                Event defines a system event and its parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.Type">
            <summary>Type of event (see EventType enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.Size">
            <summary>Arguments for size events (Resized)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.Key">
            <summary>Arguments for key events (KeyPressed, KeyReleased)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.Text">
            <summary>Arguments for text events (TextEntered)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.MouseMove">
            <summary>Arguments for mouse move events (MouseMoved)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.MouseButton">
            <summary>Arguments for mouse button events (MouseButtonPressed, MouseButtonReleased)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.MouseWheel">
            <summary>Arguments for mouse wheel events (MouseWheelMoved)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.MouseWheelScroll">
            <summary>Arguments for mouse wheel scroll events (MouseWheelScrolled)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.JoystickMove">
            <summary>Arguments for joystick axis events (JoystickMoved)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.JoystickButton">
            <summary>Arguments for joystick button events (JoystickButtonPressed, JoystickButtonReleased)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.JoystickConnect">
            <summary>Arguments for joystick connect events (JoystickConnected, JoystickDisconnected)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.Touch">
            <summary>Arguments for touch events (TouchBegan, TouchMoved, TouchEnded)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Event.Sensor">
            <summary>Arguments for sensor events (SensorChanged)</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.EventType">
            <summary>
                Enumeration of the different types of events
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.Closed">
            <summary>Event triggered when a window is manually closed</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.Resized">
            <summary>Event triggered when a window is resized</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.LostFocus">
            <summary>Event triggered when a window loses the focus</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.GainedFocus">
            <summary>Event triggered when a window gains the focus</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.TextEntered">
            <summary>Event triggered when a valid character is entered</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.KeyPressed">
            <summary>Event triggered when a keyboard key is pressed</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.KeyReleased">
            <summary>Event triggered when a keyboard key is released</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseWheelMoved">
            <summary>Event triggered when the mouse wheel is scrolled (deprecated)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseWheelScrolled">
            <summary>Event triggered when a mouse wheel is scrolled</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseButtonPressed">
            <summary>Event triggered when a mouse button is pressed</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseButtonReleased">
            <summary>Event triggered when a mouse button is released</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseMoved">
            <summary>Event triggered when the mouse moves within the area of a window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseEntered">
            <summary>Event triggered when the mouse enters the area of a window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.MouseLeft">
            <summary>Event triggered when the mouse leaves the area of a window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.JoystickButtonPressed">
            <summary>Event triggered when a joystick button is pressed</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.JoystickButtonReleased">
            <summary>Event triggered when a joystick button is released</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.JoystickMoved">
            <summary>Event triggered when a joystick axis moves</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.JoystickConnected">
            <summary>Event triggered when a joystick is connected</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.JoystickDisconnected">
            <summary>Event triggered when a joystick is disconnected</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.TouchBegan">
            <summary>Event triggered when a touch begins</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.TouchMoved">
            <summary>Event triggered when a touch is moved</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.TouchEnded">
            <summary>Event triggered when a touch is ended</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.EventType.SensorChanged">
            <summary>Event triggered when a sensor is changed</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Joystick">
            <summary>
                Give access to the real-time state of the joysticks
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.Count">
            <summary>Maximum number of supported joysticks</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.ButtonCount">
            <summary>Maximum number of supported buttons</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.AxisCount">
            <summary>Maximum number of supported axes</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.IsConnected(System.UInt32)">
            <summary>
                Check if a joystick is connected
            </summary>
            <param name="joystick">Index of the joystick to check</param>
            <returns>True if the joystick is connected, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.GetButtonCount(System.UInt32)">
            <summary>
                Return the number of buttons supported by a joystick
            </summary>
            If the joystick is not connected, this function returns 0.
            <param name="joystick">Index of the joystick</param>
            <returns>Number of buttons supported by the joystick</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.HasAxis(System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.Axis)">
            <summary>
                Check if a joystick supports a given axis
            </summary>
            If the joystick is not connected, this function returns false.
            <param name="joystick">Index of the joystick</param>
            <param name="axis">Axis to check</param>
            <returns>True if the joystick supports the axis, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.IsButtonPressed(System.UInt32,System.UInt32)">
            <summary>
                Check if a joystick button is pressed
            </summary>
            If the joystick is not connected, this function returns false.
            <param name="joystick">Index of the joystick</param>
            <param name="button">Button to check</param>
            <returns>True if the button is pressed, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.GetAxisPosition(System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.Axis)">
            <summary>
                Get the current position of a joystick axis
            </summary>
            If the joystick is not connected, this function returns 0.
            <param name="joystick">Index of the joystick</param>
            <param name="axis">Axis to check</param>
            <returns>Current position of the axis, in range [-100 .. 100]</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.Update">
            <summary>
                Update the states of all joysticks
            </summary>
            This function is used internally by SFML, so you normally
            don't have to call it explicitly. However, you may need to
            call it if you have no window yet (or no window at all):
            in this case the joysticks states are not updated automatically.
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.GetIdentification(System.UInt32)">
            <summary>
                Get the joystick information
            </summary>
            <param name="joystick">Index of the joystick</param>
            <returns>Structure containing joystick information</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_isConnected(System.UInt32)">
            <summary>
                Describes whether sf joystick is connected
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_getButtonCount(System.UInt32)">
            <summary>
                Sfs the joystick get button count using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_hasAxis(System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.Axis)">
            <summary>
                Describes whether sf joystick has axis
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_isButtonPressed(System.UInt32,System.UInt32)">
            <summary>
                Describes whether sf joystick is button pressed
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_getAxisPosition(System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.Axis)">
            <summary>
                Sfs the joystick get axis position using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_update">
            <summary>
                Sfs the joystick update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Joystick.sfJoystick_getIdentification(System.UInt32)">
            <summary>
                Sfs the joystick get identification using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The identification marshal data</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Joystick.Identification">
            <summary>
                Identification holds a joystick's identification
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.Identification.Name">
            <summary>Name of the joystick</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.Identification.VendorId">
            <summary>Manufacturer identifier</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.Identification.ProductId">
            <summary>Product identifier</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Joystick.IdentificationMarshalData">
            <summary>
                Internal struct used for marshaling the joystick
                identification struct from unmanaged code.
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.IdentificationMarshalData.Name">
            <summary>
                The name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.IdentificationMarshalData.VendorId">
            <summary>
                The vendor id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Joystick.IdentificationMarshalData.ProductId">
            <summary>
                The product id
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEvent">
            <summary>
                Joystick buttons event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEvent.JoystickId">
            <summary>Index of the joystick which triggered the event</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEvent.Button">
            <summary>Index of the button</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEventArgs">
            <summary>
                Joystick buttons event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEventArgs.Button">
            <summary>Index of the button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEventArgs.JoystickId">
            <summary>Index of the joystick which triggered the event</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEvent)">
            <summary>
                Construct the joystick button arguments from a joystick button event
            </summary>
            <param name="e">Joystick button event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.JoystickButtonEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEvent">
            <summary>
                Joystick connect event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEvent.JoystickId">
            <summary>Index of the joystick which triggered the event</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEventArgs">
            <summary>
                Joystick connection/disconnection event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEventArgs.JoystickId">
            <summary>Index of the joystick which triggered the event</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEvent)">
            <summary>
                Construct the joystick connect arguments from a joystick connect event
            </summary>
            <param name="e">Joystick button event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.JoystickConnectEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEvent">
            <summary>
                Joystick axis move event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEvent.JoystickId">
            <summary>Index of the joystick which triggered the event</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEvent.Axis">
            <summary>Joystick axis (see JoyAxis enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEvent.Position">
            <summary>Current position of the axis</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEventArgs">
            <summary>
                Joystick axis move event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEventArgs.Axis">
            <summary>Joystick axis (see JoyAxis enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEventArgs.JoystickId">
            <summary>Index of the joystick which triggered the event</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEventArgs.Position">
            <summary>Current position of the axis</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEvent)">
            <summary>
                Construct the joystick move arguments from a joystick move event
            </summary>
            <param name="e">Joystick move event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.JoystickMoveEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Key">
            <summary>
                Key codes
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Unknown">
            <summary>Unhandled key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.A">
            <summary>The A key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.B">
            <summary>The B key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.C">
            <summary>The C key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.D">
            <summary>The D key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.E">
            <summary>The E key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F">
            <summary>The F key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.G">
            <summary>The G key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.H">
            <summary>The H key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.I">
            <summary>The I key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.J">
            <summary>The J key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.K">
            <summary>The K key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.L">
            <summary>The L key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.M">
            <summary>The M key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.N">
            <summary>The N key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.O">
            <summary>The O key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.P">
            <summary>The P key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Q">
            <summary>The Q key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.R">
            <summary>The R key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.S">
            <summary>The S key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.T">
            <summary>The T key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.U">
            <summary>The U key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.V">
            <summary>The V key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.W">
            <summary>The W key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.X">
            <summary>The X key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Y">
            <summary>The Y key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Z">
            <summary>The Z key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num0">
            <summary>The 0 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num1">
            <summary>The 1 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num2">
            <summary>The 2 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num3">
            <summary>The 3 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num4">
            <summary>The 4 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num5">
            <summary>The 5 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num6">
            <summary>The 6 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num7">
            <summary>The 7 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num8">
            <summary>The 8 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Num9">
            <summary>The 9 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Escape">
            <summary>The Escape key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.LControl">
            <summary>The left Control key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.LShift">
            <summary>The left Shift key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.LAlt">
            <summary>The left Alt key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.LSystem">
            <summary>The left OS specific key: window (Windows and Linux), apple (MacOS X), ...</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.RControl">
            <summary>The right Control key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.RShift">
            <summary>The right Shift key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.RAlt">
            <summary>The right Alt key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.RSystem">
            <summary>The right OS specific key: window (Windows and Linux), apple (MacOS X), ...</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Menu">
            <summary>The Menu key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.LBracket">
            <summary>The [ key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.RBracket">
            <summary>The ] key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Semicolon">
            <summary>The ; key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Comma">
            <summary>The , key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Period">
            <summary>The . key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Quote">
            <summary>The ' key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Slash">
            <summary>The / key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Backslash">
            <summary>The \ key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Tilde">
            <summary>The ~ key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Equal">
            <summary>The = key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Hyphen">
            <summary>The - key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Space">
            <summary>The Space key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Enter">
            <summary>The Return key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Backspace">
            <summary>The Backspace key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Tab">
            <summary>The Tabulation key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.PageUp">
            <summary>The Page up key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.PageDown">
            <summary>The Page down key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.End">
            <summary>The End key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Home">
            <summary>The Home key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Insert">
            <summary>The Insert key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Delete">
            <summary>The Delete key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Add">
            <summary>The + key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Subtract">
            <summary>The - key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Multiply">
            <summary>The * key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Divide">
            <summary>The / key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Left">
            <summary>Left arrow</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Right">
            <summary>Right arrow</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Up">
            <summary>Up arrow</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Down">
            <summary>Down arrow</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad0">
            <summary>The numpad 0 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad1">
            <summary>The numpad 1 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad2">
            <summary>The numpad 2 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad3">
            <summary>The numpad 3 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad4">
            <summary>The numpad 4 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad5">
            <summary>The numpad 5 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad6">
            <summary>The numpad 6 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad7">
            <summary>The numpad 7 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad8">
            <summary>The numpad 8 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Numpad9">
            <summary>The numpad 9 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F1">
            <summary>The F1 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F2">
            <summary>The F2 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F3">
            <summary>The F3 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F4">
            <summary>The F4 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F5">
            <summary>The F5 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F6">
            <summary>The F6 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F7">
            <summary>The F7 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F8">
            <summary>The F8 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F9">
            <summary>The F9 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F10">
            <summary>The F10 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F11">
            <summary>The F11 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F12">
            <summary>The F12 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F13">
            <summary>The F13 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F14">
            <summary>The F14 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.F15">
            <summary>The F15 key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Pause">
            <summary>The Pause key</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.KeyCount">
            <summary>The total number of keyboard keys</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Dash">
            <summary>
                The dash key
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.BackSpace">
            <summary>
                The back space key
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.Return">
            <summary>
                The return key
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.BackSlash">
            <summary>
                The back slash key
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Key.SemiColon">
            <summary>
                The semi colon key
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Keyboard">
            <summary>
                Give access to the real-time state of the keyboard
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Keyboard.IsKeyPressed(Alis.Core.Graphic.D2.SFML.Windows.Key)">
            <summary>
                Check if a key is pressed
            </summary>
            <param name="key">Key to check</param>
            <returns>True if the key is pressed, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Keyboard.SetVirtualKeyboardVisible(System.Boolean)">
            <summary>
                Enable/Disable visibility of the virtual keyboard
            </summary>
            <remarks>Applicable only on Android and iOS</remarks>
            <param name="visible">Whether to make the virtual keyboard visible (true) or not (false)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Keyboard.sfKeyboard_isKeyPressed(Alis.Core.Graphic.D2.SFML.Windows.Key)">
            <summary>
                Describes whether sf keyboard is key pressed
            </summary>
            <param name="key">The key</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Keyboard.sfKeyboard_setVirtualKeyboardVisible(System.Boolean)">
            <summary>
                Sfs the keyboard set virtual keyboard visible using the specified visible
            </summary>
            <param name="visible">The visible</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.KeyEvent">
            <summary>
                Keyboard event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEvent.Code">
            <summary>Code of the key (see KeyCode enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEvent.Alt">
            <summary>Is the Alt modifier pressed?</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEvent.Control">
            <summary>Is the Control modifier pressed?</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEvent.Shift">
            <summary>Is the Shift modifier pressed?</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEvent.System">
            <summary>Is the System modifier pressed?</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs">
            <summary>
                Keyboard event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.Alt">
            <summary>Is the Alt modifier pressed?</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.Code">
            <summary>Code of the key (see KeyCode enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.Control">
            <summary>Is the Control modifier pressed?</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.Shift">
            <summary>Is the Shift modifier pressed?</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.System">
            <summary>Is the System modifier pressed?</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.KeyEvent)">
            <summary>
                Construct the key arguments from a key event
            </summary>
            <param name="e">Key event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.KeyEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Mouse">
            <summary>
                Give access to the real-time state of the mouse
            </summary>
            <summary>
                The mouse class
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button">
            <summary>
                Mouse buttons
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button.Left">
            <summary>The left mouse button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button.Right">
            <summary>The right mouse button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button.Middle">
            <summary>The middle (wheel) mouse button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button.XButton1">
            <summary>The first extra mouse button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button.XButton2">
            <summary>The second extra mouse button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button.ButtonCount">
            <summary>Keep last -- the total number of mouse buttons</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.IsButtonPressed(Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button)">
            <summary>
                Check if a mouse button is pressed
            </summary>
            <param name="button">Button to check</param>
            <returns>True if the button is pressed, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.GetPosition">
            <summary>
                Get the current position of the mouse
            </summary>
            This function returns the current position of the mouse
            cursor in desktop coordinates.
            <returns>Current position of the mouse</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.GetPosition(Alis.Core.Graphic.D2.SFML.Windows.Window)">
            <summary>
                Get the current position of the mouse
            </summary>
            This function returns the current position of the mouse
            cursor relative to a window.
            <param name="relativeTo">Reference window</param>
            <returns>Current position of the mouse</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.SetPosition(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Set the current position of the mouse
            </summary>
            This function sets the current position of the mouse
            cursor in desktop coordinates.
            <param name="position">New position of the mouse</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.SetPosition(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Graphic.D2.SFML.Windows.Window)">
            <summary>
                Set the current position of the mouse
            </summary>
            This function sets the current position of the mouse
            cursor relative to a window.
            <param name="position">New position of the mouse</param>
            <param name="relativeTo">Reference window</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.sfMouse_isButtonPressed(Alis.Core.Graphic.D2.SFML.Windows.Mouse.Button)">
            <summary>
                Describes whether sf mouse is button pressed
            </summary>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.sfMouse_getPosition(System.IntPtr)">
            <summary>
                Sfs the mouse get position using the specified relative to
            </summary>
            <param name="relativeTo">The relative to</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Mouse.sfMouse_setPosition(Alis.Core.Aspect.Math.Vector.Vector2I,System.IntPtr)">
            <summary>
                Sfs the mouse set position using the specified position
            </summary>
            <param name="position">The position</param>
            <param name="relativeTo">The relative to</param>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Wheel">
            <summary>
                Mouse wheels
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Wheel.VerticalWheel">
            <summary>The vertical mouse wheel</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Mouse.Wheel.HorizontalWheel">
            <summary>The horizontal mouse wheel</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEvent">
            <summary>
                Mouse buttons event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEvent.Button">
            <summary>Code of the button (see MouseButton enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEvent.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEvent.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEventArgs">
            <summary>
                Mouse buttons event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEventArgs.Button">
            <summary>Code of the button (see MouseButton enum)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEventArgs.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEventArgs.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEvent)">
            <summary>
                Construct the mouse button arguments from a mouse button event
            </summary>
            <param name="e">Mouse button event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseButtonEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEvent">
            <summary>
                Mouse move event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEvent.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEvent.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEventArgs">
            <summary>
                Mouse move event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEventArgs.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEventArgs.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEvent)">
            <summary>
                Construct the mouse move arguments from a mouse move event
            </summary>
            <param name="e">Mouse move event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseMoveEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEvent">
            <summary>
                Mouse wheel move event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEvent.Delta">
            <summary>Scroll amount</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEvent.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEvent.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEventArgs">
            <summary>
                Mouse wheel event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEventArgs.Delta">
            <summary>Scroll amount</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEventArgs.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEventArgs.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEvent)">
            <summary>
                Construct the mouse wheel arguments from a mouse wheel event
            </summary>
            <param name="e">Mouse wheel event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEvent">
            <summary>
                Mouse wheel scroll event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEvent.Wheel">
            <summary>Mouse Wheel which triggered the event</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEvent.Delta">
            <summary>Scroll amount</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEvent.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEvent.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs">
            <summary>
                Mouse wheel scroll event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs.Delta">
            <summary>Scroll amount</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs.Wheel">
            <summary>Mouse Wheel which triggered the event</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs.X">
            <summary>X coordinate of the mouse cursor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs.Y">
            <summary>Y coordinate of the mouse cursor</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEvent)">
            <summary>
                Construct the mouse wheel scroll arguments from a mouse wheel scroll event
            </summary>
            <param name="e">Mouse wheel scroll event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.MouseWheelScrollEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Sensor">
            <summary>
                Give access to the real-time state of sensors
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type">
            <summary>
                Sensor types
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.Accelerometer">
            <summary>Measures the raw acceleration (m/s^2)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.Gyroscope">
            <summary>Measures the raw rotation rates (degrees/s)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.Magnetometer">
            <summary>Measures the ambient magnetic field (micro-teslas)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.Gravity">
            <summary>Measures the direction and intensity of gravity, independent of device acceleration (m/s^2)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.UserAcceleration">
            <summary>Measures the direction and intensity of device acceleration, independent of the gravity (m/s^2)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.Orientation">
            <summary>Measures the absolute 3D orientation (degrees)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type.TypeCount">
            <summary>Keep last -- the total number of sensor types</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Sensor.IsAvailable(Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type)">
            <summary>
                Check if a sensor is available on the underlying platform
            </summary>
            <param name="sensor">Sensor to check</param>
            <returns>True if the sensor is available, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Sensor.SetEnabled(Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type,System.Boolean)">
            <summary>
                Enable or disable a sensor
            </summary>
            <param name="sensor">Sensor to check</param>
            <param name="enabled">True to enable, false to disable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Sensor.GetValue(Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type)">
            <summary>
                Get the current sensor value
            </summary>
            <param name="sensor">Sensor to check</param>
            <returns>The current sensor value</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Sensor.sfSensor_isAvailable(Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type)">
            <summary>
                Describes whether sf sensor is available
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Sensor.sfSensor_setEnabled(Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type,System.Boolean)">
            <summary>
                Sfs the sensor set enabled using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <param name="enabled">The enabled</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Sensor.sfSensor_getValue(Alis.Core.Graphic.D2.SFML.Windows.Sensor.Type)">
            <summary>
                Sfs the sensor get value using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The vector 3f</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.SensorEvent">
            <summary>
                Sensor event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEvent.Type">
            <summary>Type of the sensor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEvent.X">
            <summary>Current value of the sensor on X axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEvent.Y">
            <summary>Current value of the sensor on Y axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEvent.Z">
            <summary>Current value of the sensor on Z axis</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs">
            <summary>
                Sensor event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs.Type">
            <summary>Type of the sensor</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs.X">
            <summary>Current value of the sensor on X axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs.Y">
            <summary>Current value of the sensor on Y axis</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs.Z">
            <summary>Current value of the sensor on Z axis</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.SensorEvent)">
            <summary>
                Construct the sensor arguments from a sensor event
            </summary>
            <param name="e">Sensor event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.SensorEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.SizeEvent">
            <summary>
                Size event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SizeEvent.Width">
            <summary>New width of the window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SizeEvent.Height">
            <summary>New height of the window</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.SizeEventArgs">
            <summary>
                Size event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SizeEventArgs.Height">
            <summary>New height of the window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.SizeEventArgs.Width">
            <summary>New width of the window</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.SizeEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.SizeEvent)">
            <summary>
                Construct the size arguments from a size event
            </summary>
            <param name="e">Size event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.SizeEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Styles">
            <summary>
                Enumeration of window creation styles
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Styles.None">
            <summary>No border / title bar (this flag and all others are mutually exclusive)</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Styles.Titlebar">
            <summary>Title bar + fixed border</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Styles.Resize">
            <summary>Titlebar + resizable border + maximize button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Styles.Close">
            <summary>Titlebar + close button</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Styles.Fullscreen">
            <summary>Fullscreen mode (this flag and all others are mutually exclusive))</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.Styles.Default">
            <summary>Default window style (titlebar + resize + close)</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.TextEvent">
            <summary>
                Text event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TextEvent.Unicode">
            <summary>UTF-32 value of the character</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.TextEventArgs">
            <summary>
                Text event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TextEventArgs.Unicode">
            <summary>UTF-16 value of the character</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.TextEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.TextEvent)">
            <summary>
                Construct the text arguments from a text event
            </summary>
            <param name="e">Text event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.TextEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Touch">
            <summary>
                Give access to the real-time state of the touches
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Touch.IsDown(System.UInt32)">
            <summary>
                Check if a touch event is currently down
            </summary>
            <param name="finger">Finger index</param>
            <returns>True if the finger is currently touching the screen, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Touch.GetPosition(System.UInt32)">
            <summary>
                This function returns the current touch position
            </summary>
            <param name="finger">Finger index</param>
            <returns>Current position of the finger</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Touch.GetPosition(System.UInt32,Alis.Core.Graphic.D2.SFML.Windows.Window)">
            <summary>
                This function returns the current touch position
                relative to the given window
            </summary>
            <param name="finger">Finger index</param>
            <param name="relativeTo">Reference window</param>
            <returns>Current position of the finger</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Touch.sfTouch_isDown(System.UInt32)">
            <summary>
                Describes whether sf touch is down
            </summary>
            <param name="finger">The finger</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Touch.sfTouch_getPosition(System.UInt32,System.IntPtr)">
            <summary>
                Sfs the touch get position using the specified finger
            </summary>
            <param name="finger">The finger</param>
            <param name="relativeTo">The relative to</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.TouchEvent">
            <summary>
                Touch event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TouchEvent.Finger">
            <summary>Index of the finger in case of multi-touch events</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TouchEvent.X">
            <summary>X position of the touch, relative to the left of the owner window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TouchEvent.Y">
            <summary>Y position of the touch, relative to the top of the owner window</summary>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.TouchEventArgs">
            <summary>
                Touch event parameters
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TouchEventArgs.Finger">
            <summary>Index of the finger in case of multi-touch events</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TouchEventArgs.X">
            <summary>X position of the touch, relative to the left of the owner window</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.TouchEventArgs.Y">
            <summary>Y position of the touch, relative to the top of the owner window</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.TouchEventArgs.#ctor(Alis.Core.Graphic.D2.SFML.Windows.TouchEvent)">
            <summary>
                Construct the touch arguments from a touch event
            </summary>
            <param name="e">Touch event</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.TouchEventArgs.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.VideoMode">
            <summary>
                VideoMode defines a video mode (width, height, bpp, frequency)
                and provides static functions for getting modes supported
                by the display device
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the video mode with its width and height
            </summary>
            <param name="width">Video mode width</param>
            <param name="height">Video mode height</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Construct the video mode with its width, height and depth
            </summary>
            <param name="width">Video mode width</param>
            <param name="height">Video mode height</param>
            <param name="bpp">Video mode depth (bits per pixel)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.IsValid">
            <summary>
                Tell whether or not the video mode is supported
            </summary>
            <returns>True if the video mode is valid, false otherwise</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.FullscreenModes">
            <summary>
                Get the list of all the supported fullscreen video modes
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.DesktopMode">
            <summary>
                Get the current desktop video mode
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.Width">
            <summary>Video mode width, in pixels</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.Height">
            <summary>Video mode height, in pixels</summary>
        </member>
        <member name="F:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.BitsPerPixel">
            <summary>Video mode depth, in bits per pixel</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.sfVideoMode_getDesktopMode">
            <summary>
                Sfs the video mode get desktop mode
            </summary>
            <returns>The video mode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.sfVideoMode_getFullscreenModes(System.UInt32@)">
            <summary>
                Sfs the video mode get fullscreen modes using the specified count
            </summary>
            <param name="count">The count</param>
            <returns>The video mode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.VideoMode.sfVideoMode_isValid(Alis.Core.Graphic.D2.SFML.Windows.VideoMode)">
            <summary>
                Describes whether sf video mode is valid
            </summary>
            <param name="mode">The mode</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Graphic.D2.SFML.Windows.Window">
            <summary>
                Window is a rendering window ; it can create a new window
                or connect to an existing one
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.#ctor(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String)">
            <summary>
                Create the window with default style and creation settings
            </summary>
            <param name="mode">Video mode to use</param>
            <param name="title">Title of the window</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.#ctor(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String,Alis.Core.Graphic.D2.SFML.Windows.Styles)">
            <summary>
                Create the window with default creation settings
            </summary>
            <param name="mode">Video mode to use</param>
            <param name="title">Title of the window</param>
            <param name="style">Window style (Resize | Close by default)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.#ctor(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String,Alis.Core.Graphic.D2.SFML.Windows.Styles,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings)">
            <summary>
                Create the window
            </summary>
            <param name="mode">Video mode to use</param>
            <param name="title">Title of the window</param>
            <param name="style">Window style (Resize | Close by default)</param>
            <param name="settings">Creation parameters</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.#ctor(System.IntPtr)">
            <summary>
                Create the window from an existing control with default creation settings
            </summary>
            <param name="handle">Platform-specific handle of the control</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.#ctor(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings)">
            <summary>
                Create the window from an existing control
            </summary>
            <param name="handle">Platform-specific handle of the control</param>
            <param name="settings">Creation parameters</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.#ctor(System.IntPtr,System.Int32)">
            <summary>
                Constructor for derived classes
            </summary>
            <param name="cPointer">Pointer to the internal object in the C API</param>
            <param name="dummy">Internal hack :)</param>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Window.IsOpen">
            <summary>
                Tell whether or not the window is opened (ie. has been created).
                Note that a hidden window (Show(false))
                will still return true
            </summary>
            <returns>True if the window is opened</returns>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Window.Settings">
            <summary>
                Creation settings of the window
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Window.Position">
            <summary>
                Position of the window
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Window.Size">
            <summary>
                Size of the rendering region of the window
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.D2.SFML.Windows.Window.SystemHandle">
            <summary>
                OS-specific handle of the window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.Close">
            <summary>
                Close (destroy) the window.
                The Window instance remains valid and you can call
                Create to recreate the window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.Display">
            <summary>
                Display the window on screen
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetTitle(System.String)">
            <summary>
                Change the title of the window
            </summary>
            <param name="title">New title</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetIcon(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
                Change the window's icon
            </summary>
            <param name="width">Icon's width, in pixels</param>
            <param name="height">Icon's height, in pixels</param>
            <param name="pixels">Array of pixels, format must be RGBA 32 bits</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetVisible(System.Boolean)">
            <summary>
                Show or hide the window
            </summary>
            <param name="visible">True to show the window, false to hide it</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetMouseCursorVisible(System.Boolean)">
            <summary>
                Show or hide the mouse cursor
            </summary>
            <param name="show">True to show, false to hide</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetMouseCursorGrabbed(System.Boolean)">
            <summary>
                Grab or release the mouse cursor
            </summary>
            <param name="grabbed">True to grab, false to release</param>
            <remarks>
                If set, grabs the mouse cursor inside this window's client
                area so it may no longer be moved outside its bounds.
                Note that grabbing is only active while the window has
                focus and calling this function for fullscreen windows
                won't have any effect (fullscreen windows always grab the
                cursor).
            </remarks>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetMouseCursor(Alis.Core.Graphic.D2.SFML.Windows.Cursor)">
            <summary>
                Set the displayed cursor to a native system cursor
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetVerticalSyncEnabled(System.Boolean)">
            <summary>
                Enable / disable vertical synchronization
            </summary>
            <param name="enable">True to enable v-sync, false to deactivate</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetKeyRepeatEnabled(System.Boolean)">
            <summary>
                Enable or disable automatic key-repeat.
                Automatic key-repeat is enabled by default
            </summary>
            <param name="enable">True to enable, false to disable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetActive">
            <summary>
                Activate the window as the current target
                for rendering
            </summary>
            <returns>True if operation was successful, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetActive(System.Boolean)">
            <summary>
                Activate of deactivate the window as the current target
                for rendering
            </summary>
            <param name="active">True to activate, false to deactivate (true by default)</param>
            <returns>True if operation was successful, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetFramerateLimit(System.UInt32)">
            <summary>
                Limit the framerate to a maximum fixed frequency
            </summary>
            <param name="limit">Framerate limit, in frames per seconds (use 0 to disable limit)</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.SetJoystickThreshold(System.Single)">
            <summary>
                Change the joystick threshold, ie. the value below which
                no move event will be generated
            </summary>
            <param name="threshold">New threshold, in range [0, 100]</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.WaitAndDispatchEvents">
            <summary>
                Wait for a new event and dispatch it to the corresponding
                event handler
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.DispatchEvents">
            <summary>
                Call the event handlers for each pending event
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.RequestFocus">
            <summary>
                Request the current window to be made the active
                foreground window
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.HasFocus">
            <summary>
                Check whether the window has the input focus
            </summary>
            <returns>True if the window has focus, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.PollEvent(Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Internal function to get the next event (non-blocking)
            </summary>
            <param name="eventToFill">Variable to fill with the raw pointer to the event structure</param>
            <returns>True if there was an event, false otherwise</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.WaitEvent(Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Internal function to get the next event (blocking)
            </summary>
            <param name="eventToFill">Variable to fill with the raw pointer to the event structure</param>
            <returns>False if any error occured</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.InternalGetMousePosition">
            <summary>
                Internal function to get the mouse position relative to the window.
                This function is protected because it is called by another class of
                another module, it is not meant to be called by users.
            </summary>
            <returns>Relative mouse position</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.InternalSetMousePosition(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Internal function to set the mouse position relative to the window.
                This function is protected because it is called by another class of
                another module, it is not meant to be called by users.
            </summary>
            <param name="position">Relative mouse position</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.InternalGetTouchPosition(System.UInt32)">
            <summary>
                Internal function to get the touch position relative to the window.
                This function is protected because it is called by another class of
                another module, it is not meant to be called by users.
            </summary>
            <param name="finger">Finger index</param>
            <returns>Relative touch position</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.CallEventHandler(Alis.Core.Graphic.D2.SFML.Windows.Event)">
            <summary>
                Call the event handler for the given event
            </summary>
            <param name="e">Event to dispatch</param>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.Closed">
            <summary>Event handler for the Closed event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.Resized">
            <summary>Event handler for the Resized event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.LostFocus">
            <summary>Event handler for the LostFocus event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.GainedFocus">
            <summary>Event handler for the GainedFocus event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.TextEntered">
            <summary>Event handler for the TextEntered event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.KeyPressed">
            <summary>Event handler for the KeyPressed event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.KeyReleased">
            <summary>Event handler for the KeyReleased event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.MouseWheelScrolled">
            <summary>Event handler for the MouseWheelScrolled event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.MouseButtonPressed">
            <summary>Event handler for the MouseButtonPressed event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.MouseButtonReleased">
            <summary>Event handler for the MouseButtonReleased event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.MouseMoved">
            <summary>Event handler for the MouseMoved event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.MouseEntered">
            <summary>Event handler for the MouseEntered event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.MouseLeft">
            <summary>Event handler for the MouseLeft event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.JoystickButtonPressed">
            <summary>Event handler for the JoystickButtonPressed event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.JoystickButtonReleased">
            <summary>Event handler for the JoystickButtonReleased event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.JoystickMoved">
            <summary>Event handler for the JoystickMoved event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.JoystickConnected">
            <summary>Event handler for the JoystickConnected event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.JoystickDisconnected">
            <summary>Event handler for the JoystickDisconnected event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.TouchBegan">
            <summary>Event handler for the TouchBegan event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.TouchMoved">
            <summary>Event handler for the TouchMoved event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.TouchEnded">
            <summary>Event handler for the TouchEnded event</summary>
        </member>
        <member name="E:Alis.Core.Graphic.D2.SFML.Windows.Window.SensorChanged">
            <summary>Event handler for the SensorChanged event</summary>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_create(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.String,Alis.Core.Graphic.D2.SFML.Windows.Styles,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings@)">
            <summary>
                Sfs the window create using the specified mode
            </summary>
            <param name="mode">The mode</param>
            <param name="title">The title</param>
            <param name="style">The style</param>
            <param name="params">The params</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_createUnicode(Alis.Core.Graphic.D2.SFML.Windows.VideoMode,System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.Styles,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings@)">
            <summary>
                Sfs the window create unicode using the specified mode
            </summary>
            <param name="mode">The mode</param>
            <param name="title">The title</param>
            <param name="style">The style</param>
            <param name="params">The params</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_createFromHandle(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.ContextSettings@)">
            <summary>
                Sfs the window create from handle using the specified handle
            </summary>
            <param name="handle">The handle</param>
            <param name="params">The params</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_destroy(System.IntPtr)">
            <summary>
                Sfs the window destroy using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_isOpen(System.IntPtr)">
            <summary>
                Describes whether sf window is open
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_close(System.IntPtr)">
            <summary>
                Sfs the window close using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_pollEvent(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Describes whether sf window poll event
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="evt">The evt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_waitEvent(System.IntPtr,Alis.Core.Graphic.D2.SFML.Windows.Event@)">
            <summary>
                Describes whether sf window wait event
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="evt">The evt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_display(System.IntPtr)">
            <summary>
                Sfs the window display using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_getSettings(System.IntPtr)">
            <summary>
                Sfs the window get settings using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The context settings</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_getPosition(System.IntPtr)">
            <summary>
                Sfs the window get position using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setPosition(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Sfs the window set position using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="position">The position</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_getSize(System.IntPtr)">
            <summary>
                Sfs the window get size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2u</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setSize(System.IntPtr,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Sfs the window set size using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="size">The size</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setTitle(System.IntPtr,System.String)">
            <summary>
                Sfs the window set title using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="title">The title</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setUnicodeTitle(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the window set unicode title using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="title">The title</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setIcon(System.IntPtr,System.UInt32,System.UInt32,System.Byte*)">
            <summary>
                Sfs the window set icon using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pixels">The pixels</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setVisible(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the window set visible using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="visible">The visible</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setMouseCursorVisible(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the window set mouse cursor visible using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="show">The show</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setMouseCursorGrabbed(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the window set mouse cursor grabbed using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setMouseCursor(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the window set mouse cursor using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setVerticalSyncEnabled(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the window set vertical sync enabled using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="enable">The enable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setKeyRepeatEnabled(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the window set key repeat enabled using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="enable">The enable</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setActive(System.IntPtr,System.Boolean)">
            <summary>
                Describes whether sf window set active
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="active">The active</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setFramerateLimit(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the window set framerate limit using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="limit">The limit</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_getFrameTime(System.IntPtr)">
            <summary>
                Sfs the window get frame time using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_setJoystickThreshold(System.IntPtr,System.Single)">
            <summary>
                Sfs the window set joystick threshold using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <param name="threshold">The threshold</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_getSystemHandle(System.IntPtr)">
            <summary>
                Sfs the window get system handle using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_requestFocus(System.IntPtr)">
            <summary>
                Sfs the window request focus using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfWindow_hasFocus(System.IntPtr)">
            <summary>
                Describes whether sf window has focus
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfMouse_getPosition(System.IntPtr)">
            <summary>
                Sfs the mouse get position using the specified c pointer
            </summary>
            <param name="cPointer">The pointer</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfMouse_setPosition(Alis.Core.Aspect.Math.Vector.Vector2I,System.IntPtr)">
            <summary>
                Sfs the mouse set position using the specified position
            </summary>
            <param name="position">The position</param>
            <param name="cPointer">The pointer</param>
        </member>
        <member name="M:Alis.Core.Graphic.D2.SFML.Windows.Window.sfTouch_getPosition(System.UInt32,System.IntPtr)">
            <summary>
                Sfs the touch get position using the specified finger
            </summary>
            <param name="finger">The finger</param>
            <param name="relativeTo">The relative to</param>
            <returns>The vector 2i</returns>
        </member>
        <member name="T:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.EmbeddedAttribute">
            <summary>
            The embedded attribute class
            </summary>
            <seealso cref="T:System.Attribute"/>
        </member>
        <member name="T:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.NonVersionableAttribute">
            <summary>
            The non versionable attribute class
            </summary>
            <seealso cref="T:System.Attribute"/>
        </member>
        <member name="T:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.Unsafe">
            <summary>Contains generic, low-level functionality for manipulating pointers.</summary>
        </member>
        <member name="M:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.Unsafe.Read``1(System.Void*)">
            <summary>Reads a value of type <typeparamref name="T" /> from the given location.</summary>
            <param name="source">The location to read from.</param>
            <typeparam name="T">The type to read.</typeparam>
            <returns>An object of type <typeparamref name="T" /> read from the given location.</returns>
        </member>
        <member name="M:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.Unsafe.SizeOf``1">
            <summary>
            Sizes the of
            </summary>
            <typeparam name="T">The </typeparam>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.Unsafe.AsRef``1(System.Void*)">
            <summary>
            Converts the ref using the specified source
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="source">The source</param>
            <returns>The ref</returns>
        </member>
        <member name="M:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
            <summary>Copies bytes from the source address to the destination address.</summary>
            <param name="destination">The destination address to copy to.</param>
            <param name="source">The source address to copy from.</param>
            <param name="byteCount">The number of bytes to copy.</param>
        </member>
        <member name="M:Alis.Core.Graphic.ImGui.ImGui.UnsafeCode.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
            <summary>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</summary>
            <param name="startAddress">The address of the start of the memory block to initialize.</param>
            <param name="value">The value to initialize the block to.</param>
            <param name="byteCount">The number of bytes to initialize.</param>
        </member>
        <member name="T:Alis.Core.Graphic.Properties.NativeGraphic">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Properties.NativeGraphic.resourceMan">
            <summary>
            The resource man
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Properties.NativeGraphic.resourceCulture">
            <summary>
            The resource culture
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.Properties.NativeGraphic.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Graphic.Properties.NativeGraphic"/> class
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.alpine_x64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.alpine_x64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.alpine_x64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.alpine_x64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_arm64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_arm64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_arm64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_arm64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_cimgui1">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_csfml_graphics1">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_csfml_system1">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.debian_x64_csfml_window1">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.fedora_x64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.fedora_x64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.fedora_x64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.fedora_x64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_sdl2">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_sdl2_image">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_sdl2_mixer">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_arm64_sdl2_ttf">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_sdl2">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_sdl2_image">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_sdl2_mixer">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.osx_x64_sdl2_ttf">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_sdl2">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_sdl2_image">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_sdl2_mixer">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_arm64_sdl2_ttf">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_sdl2">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_sdl2_image">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_sdl2_mixer">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x64_sdl2_ttf">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_cimgui">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_csfml_graphics">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_csfml_system">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_csfml_window">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_sdl2">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_sdl2_image">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_sdl2_mixer">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.Properties.NativeGraphic.win_x86_sdl2_ttf">
            <summary>
              Busca un recurso adaptado de tipo System.Byte[].
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.AlisObject">
            <summary>
                The object base class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Name">
            <summary>
                The name
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Tag">
            <summary>
                The tag
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode(System.Object)">
            <summary>
                The object base class
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.Equals(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode">
            <summary>
                Get hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.ToString">
            <summary>
                To string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Attributes.SuppressUnmanagedCodeSecurityAttribute">
            <summary>Allows managed code to call into unmanaged code without a stack walk. This class cannot be inherited.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.EmbeddedDllClass">
            <summary>
                A class used by managed classes to managed unmanaged DLLs.
                This will extract and load DLLs from embedded binary resources.
                This can be used with pinvoke, as well as manually loading DLLs your own way. If you use pinvoke, you don't need to
                load the DLLs, just
                extract them. When the DLLs are extracted, the %PATH% environment variable is updated to point to the temporary
                folder.
                To Use
                <list type="">
                    <item>
                        Add all of the DLLs as binary file resources to the project Propeties. Double click
                        Properties/Resources.resx,
                        Add Resource, Add Existing File. The resource name will be similar but not exactly the same as the DLL file
                        name.
                    </item>
                    <item>
                        In a static constructor of your application, call EmbeddedDllClass.ExtractEmbeddedDlls() for each DLL
                        that is needed
                    </item>
                    <example>
                        EmbeddedDllClass.ExtractEmbeddedDlls("libFrontPanel-pinv.dll", Properties.Resources.libFrontPanel_pinv);
                    </example>
                    <item>
                        Optional: In a static constructor of your application, call EmbeddedDllClass.LoadDll() to load the DLLs
                        you have extracted. This is not necessary for pinvoke
                    </item>
                    <example>
                        EmbeddedDllClass.LoadDll("myscrewball.dll");
                    </example>
                    <item>Continue using standard Pinvoke methods for the desired functions in the DLL</item>
                </list>
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.EmbeddedDllClass.CurrentDirectory">
            <summary>
            Gets or sets the value of the current directory
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.EmbeddedDllClass.ExtractEmbeddedDlls(System.String,System.Byte[])">
            <summary>
                Extract DLLs from resources to temporary folder
            </summary>
            <param name="dllName">name of DLL file to create (including dll suffix)</param>
            <param name="resourceBytes">The resource name (fully qualified)</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentDontExits">
            <summary>
                The component dont exits class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentInstancieIsTheSame">
            <summary>
                The component instancie is the same class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentTypeAlredyExist">
            <summary>
                The component type alredy exist class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.GameObjectIsFull">
            <summary>
                The game object is full class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.IndexOutOfBounds">
            <summary>
                The index out of bounds class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LimitOfComponents">
            <summary>
                The limit of components class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException">
            <summary>
                Exception thrown by SFML whenever loading a resource fails
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor">
            <summary>
                Default constructor (unknown error)
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.SceneGame">
            <summary>
                The max scene game class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.NullArgumentException">
            <summary>
                The null argument exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Settings.Csfml">
            <summary>
                The csfml class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Audio">
            <summary>
                The audio
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Graphics">
            <summary>
                The graphics
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.System">
            <summary>
                The system
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Window">
            <summary>
                The window
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Data.AssetManager">
            <summary>
                The example class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Data.AssetManager.AssetPath">
            <summary>
            The application data
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Data.AssetManager.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Data.AssetManager"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Data.AssetManager.Find(System.String)">
            <summary>
            Finds the asset name
            </summary>
            <param name="assetName">The asset name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuild`1">
            <summary>
                The build interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuild`1.Build">
            <summary>
                Builds this instance
            </summary>
            <returns>The origin</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuilder`1">
            <summary>
                The builder interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder">
            <summary>
                Builders
            </summary>
            <returns>The</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder``1">
            <summary>
                Builder static
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAdd`3">
            <summary>
                The add interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAdd`3.Add``1(`2)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2">
            <summary>
                The add animation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2.AddAnimation(`1)">
            <summary>
                Adds the animation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddComponent`2">
            <summary>
                The add component class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(System.Func{``0,`1})">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(``0)">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddFrame`2">
            <summary>
                The add frame interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddFrame`2.AddFrame(`1)">
            <summary>
                Adds the frame using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAngularVelocity`2">
            <summary>
            The angular velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAngularVelocity`2.AngularVelocity(`1)">
            <summary>
            Angular the velocity using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAudio`2">
            <summary>
                The audio interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAudio`2.Audio(`1)">
            <summary>
                Audioes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAuthor`2">
            <summary>
                The author interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAuthor`2.Author(`1)">
            <summary>
                Authors the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2">
            <summary>
                The auto tilling interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2.AutoTilling(`1)">
            <summary>
                Autoes the tilling using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBackground`2">
            <summary>
                The background interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBackground`2.Background(`1)">
            <summary>
                Backgrounds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBodyType`2">
            <summary>
                The body type interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBodyType`2.BodyType(`1)">
            <summary>
                Bodies the type using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IConfiguration`2">
            <summary>
                The configuration interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IConfiguration`2.Configuration(`1)">
            <summary>
                Configurations the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ICreate`2">
            <summary>
                The create interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ICreate`2.Create(`1)">
            <summary>
                Creates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDebug`2">
            <summary>
                The debug interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDebug`2.Debug(`1)">
            <summary>
                Debugs the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDelete`1">
            <summary>
                The delete interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDelete`1.Delete">
            <summary>
                Deletes this instance
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDensity`2">
            <summary>
                The density interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDensity`2.Density(`1)">
            <summary>
                Densities the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDepth`2">
            <summary>
                The depth interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDepth`2.Depth(`1)">
            <summary>
                Depths the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDescription`2">
            <summary>
                The description interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDescription`2.Description(`1)">
            <summary>
                Descriptions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFile`2">
            <summary>
                The file interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFile`2.File(`1)">
            <summary>
                Files the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFilePath`2">
            <summary>
                The file path interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFilePath`2.FilePath(`1)">
            <summary>
                Files the path using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2">
            <summary>
                The fixed rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2.FixedRotation(`1)">
            <summary>
                Fixeds the rotation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFriction`2">
            <summary>
                The friction interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFriction`2.Friction(`1)">
            <summary>
                Frictions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGeneral`2">
            <summary>
                The general interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGeneral`2.General(`1)">
            <summary>
                Generals the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGraphic`2">
            <summary>
                The graphic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGraphic`2.Graphic(`1)">
            <summary>
                Graphics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravity`3">
            <summary>
            The gravity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravity`3.Gravity(`1,`2)">
            <summary>
            Gravities the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravityScale`2">
            <summary>
                The gravity scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravityScale`2.GravityScale(`1)">
            <summary>
                Gravities the scale using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IHas`2">
            <summary>
                The has interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IHas`2.Has(`1)">
            <summary>
                Hases the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIcon`2">
            <summary>
                The icon interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIcon`2.Icon(`1)">
            <summary>
                Icons the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIs`3">
            <summary>
                The is interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIs`3.Is``1(`2)">
            <summary>
                Ises the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsActive`2">
            <summary>
                The is active interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsActive`2.IsActive(`1)">
            <summary>
                Ises the active using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2">
            <summary>
                The is dynamic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic">
            <summary>
                Ises the dynamic
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic(`1)">
            <summary>
                Ises the dynamic using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsStatic`2">
            <summary>
                The is static interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic">
            <summary>
                Ises the static
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic(`1)">
            <summary>
                Ises the static using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2">
            <summary>
                The is trigger interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger">
            <summary>
                Ises the trigger
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger(`1)">
            <summary>
                Ises the trigger using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3">
            <summary>
                The linear velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3.LinearVelocity(`1,`2)">
            <summary>
                Linears the velocity using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManager`3">
            <summary>
                The manager interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManager`3.Manager``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManagerOf`3">
            <summary>
                The manager of interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManagerOf`3.ManagerOf``1(`2)">
            <summary>
                Managers the of using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMass`2">
            <summary>
                The mass interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMass`2.Mass(`1)">
            <summary>
                Masses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMute`2">
            <summary>
                The mute interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMute`2.Mute(`1)">
            <summary>
                Mutes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IName`2">
            <summary>
                The name interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IName`2.Name(`1)">
            <summary>
                Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IOrder`2">
            <summary>
                The order interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IOrder`2.Order(`1)">
            <summary>
                Orders the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPhysic`2">
            <summary>
            The physic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPhysic`2.Physic(`1)">
            <summary>
            Physics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2">
            <summary>
                The play on awake interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2.PlayOnAwake(`1)">
            <summary>
                Plays the on awake using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPosition2D`3">
            <summary>
                The position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPosition2D`3.Position(`1,`2)">
            <summary>
                Positions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3">
            <summary>
                The relative position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3.RelativePosition(`1,`2)">
            <summary>
                Relatives the position using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IResolution`3">
            <summary>
                The resolution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IResolution`3.Resolution(`1,`2)">
            <summary>
                Resolutions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRestitution`2">
            <summary>
                The restitution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRestitution`2.Restitution(`1)">
            <summary>
                Restitutions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRotation`2">
            <summary>
                The rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRotation`2.Rotation(`1)">
            <summary>
                Rotations the angle
            </summary>
            <param name="angle">The angle</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRun">
            <summary>
                The run interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRun.Run">
            <summary>
                Runs this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScale2D`3">
            <summary>
                The scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScale2D`3.Scale(`1,`2)">
            <summary>
                Scales the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScreenMode`2">
            <summary>
                The screen mode interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScreenMode`2.ScreenMode(`1)">
            <summary>
                Screens the mode using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISet`3">
            <summary>
                The set interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISet`3.Set``1(`2)">
            <summary>
                Sets the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2">
            <summary>
                The set audio clip interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2.SetAudioClip(`1)">
            <summary>
                Sets the audio clip using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetMax`3">
            <summary>
                The set max interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetMax`3.SetMax``1(`2)">
            <summary>
                Sets the max using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetTexture`2">
            <summary>
                The texture interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetTexture`2.SetTexture(`1)">
            <summary>
                Textures the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISettings`2">
            <summary>
                The settings interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISettings`2.Settings(`1)">
            <summary>
                Settingses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISize`3">
            <summary>
                The size interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISize`3.Size(`1,`2)">
            <summary>
                Sizes the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISpeed`2">
            <summary>
                The speed interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISpeed`2.Speed(`1)">
            <summary>
                Speeds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2">
            <summary>
                The splash screen interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2.SplashScreen(`1)">
            <summary>
                Splashes the screen using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IStyle`2">
            <summary>
                The style interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IStyle`2.Style(`1)">
            <summary>
                Styles the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITime`2">
            <summary>
                The time interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITime`2.Time(`1)">
            <summary>
                Times the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITransform`2">
            <summary>
                The transform interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITransform`2.Transform(`1)">
            <summary>
                Transforms the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IUpdate`2">
            <summary>
                The update interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IUpdate`2.Update(`1)">
            <summary>
                Updates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IVolume`2">
            <summary>
                The volume interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IVolume`2.Volume(`1)">
            <summary>
                Volumes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWhere`2">
            <summary>
                The where interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWhere`2.Where(`1)">
            <summary>Wheres the specified value.</summary>
            <param name="value">The value.</param>
            <returns>
                <br />
            </returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWindow`2">
            <summary>
                The window interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWindow`2.Window(`1)">
            <summary>
                Windows the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWith`3">
            <summary>
                Simple comment
            </summary>
            <typeparam name="TBuilder">the builder</typeparam>
            <typeparam name="TArgument">the argument</typeparam>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWith`3.With``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithName`2">
            <summary>Define the word "Name" </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithName`2.WithName(`1)">
            <summary>Withes the name.</summary>
            <param name="value">The value.</param>
            <returns>Return the value that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithTag`2">
            <summary>
                Define the word "Tag"
            </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithTag`2.WithTag(`1)">
            <summary>Withes the tag.</summary>
            <param name="value">The value.</param>
            <returns>return the object that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Color">
            <summary>
                Color for debug drawing. Each value has the range [0,1].
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.r">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.g">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.b">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Color" /> class
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.Set(System.Single,System.Single,System.Single)">
            <summary>
                Sets the r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleController">
            <summary>
                The console controller class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.ConsoleController" /> class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._filePath">
            <summary>
                The file path
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._dirPath">
            <summary>
                The dir path
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.Print(Alis.Core.Aspect.Logging.Message)">
            <summary>
                Prints the to console using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleLogConfig">
            <summary>
                The console log config class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.InfoMessageColor">
            <summary>
                Info text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.LogMessageColor">
            <summary>
                Log text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.TraceMessageColor">
            <summary>
                Trace text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.WarningMessageColor">
            <summary>
                Warning text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ErrorMessageColor">
            <summary>
                Error text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ExceptionMessageColor">
            <summary>
                Exception text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.EventMessageColor">
            <summary>
                Event text color
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleLogConfig.GetColorMessageByType(Alis.Core.Aspect.Logging.MessageType)">
            <summary>
                Gets the color message by type using the specified message type
            </summary>
            <param name="messageType">The message type</param>
            <exception cref="T:System.ArgumentOutOfRangeException">null</exception>
            <returns>The console color</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.FileController">
            <summary>
                The file controller class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Logger">
            <summary>
                The logger class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace">
            <summary>
                Traces the message
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace(System.String)">
            <summary>
                Traces the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info(System.String)">
            <summary>
                Info the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Log(System.String)">
            <summary>
                Logs the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event(System.String)">
            <summary>
                Events the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event">
            <summary>
                Events
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Warning(System.String)">
            <summary>
                Warnings the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Error(System.String)">
            <summary>
                Errors the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.String)">
            <summary>
                Exceptions the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.Exception)">
            <summary>
                Exceptions the exception
            </summary>
            <param name="exception">The exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.LogLevel">
            <summary>
                The log level enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Info">
            <summary>
                The info log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Log">
            <summary>
                The log log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Normal">
            <summary>
                The normal log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Critical">
            <summary>
                The critical log level
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Message">
            <summary>
                The message class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Message.#ctor(Alis.Core.Aspect.Logging.MessageType,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Message" /> class
            </summary>
            <param name="messageType">The message type</param>
            <param name="content">The content</param>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.DateTime">
            <summary>
                Gets or sets the value of the date time
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.MessageType">
            <summary>
                Gets or sets the value of the message type
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Level">
            <summary>
                Gets or sets the value of the level
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Content">
            <summary>
                Gets or sets the value of the content
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.StackTrace">
            <summary>
                Gets or sets the value of the stack trace
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Method">
            <summary>
                Gets or sets the value of the method
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.File">
            <summary>
                Gets or sets the value of the file
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Line">
            <summary>
                Gets or sets the value of the line
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.MessageType">
            <summary>
                The message type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Trace">
            <summary>
                The trace message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Info">
            <summary>
                The info message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Log">
            <summary>
                The log message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Event">
            <summary>
                The event message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Warning">
            <summary>
                The warning message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Error">
            <summary>
                The error message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Exception">
            <summary>
                The exception message type
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Exceptions.ArgumentExceptionDestinationTooShort">
            <summary>
                The argument exception destination too short class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException">
            <summary>
                The insufficient number of elements exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException" /> class
            </summary>
            <param name="i">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle.CircleF">
            <summary>
                The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle.CircleI">
            <summary>
                The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF">
            <summary>
                RectangleI is an utility class for manipulating 2D rectangles
                with float coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the rectangle from its coordinates
            </summary>
            <param name="left">Left coordinate of the rectangle</param>
            <param name="top">Top coordinate of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Contains(System.Single,System.Single)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Explicit(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)~Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI">
            <summary>
                Explicit casting to another rectangle type
            </summary>
            <param name="r">Rectangle being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI">
            <summary>
                RectangleI is an utility class for manipulating 2D rectangles
                with integer coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the rectangle from its coordinates
            </summary>
            <param name="left">Left coordinate of the rectangle</param>
            <param name="top">Top coordinate of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.#ctor(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Contains(System.Int32,System.Int32)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Explicit(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)~Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF">
            <summary>
                Explicit casting to another rectangle type
            </summary>
            <param name="r">Rectangle being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube.CubeF">
            <summary>
                The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube.CubeI">
            <summary>
                The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere.SphereF">
            <summary>
                The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere.SphereI">
            <summary>
                The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F">
            <summary>
                The matrix
            </summary>
            <summary>
                The matrix
            </summary>
            <summary>
                The matrix
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis">
            <summary>
                The canonical basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis.Row0">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis.Row1">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis.Row2">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.BillboardEpsilon">
            <summary>
                The billboard epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.BillboardMinAngle">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.DecomposeEpsilon">
            <summary>
                The decompose epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M11">
            <summary>The first element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M12">
            <summary>The second element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M13">
            <summary>The third element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M14">
            <summary>The fourth element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M21">
            <summary>The first element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M22">
            <summary>The second element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M23">
            <summary>The third element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M24">
            <summary>The fourth element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M31">
            <summary>The first element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M32">
            <summary>The second element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M33">
            <summary>The third element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M34">
            <summary>The fourth element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M41">
            <summary>The first element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M42">
            <summary>The second element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M43">
            <summary>The third element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M44">
            <summary>The fourth element of the fourth row.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a 4x4 matrix from the specified components.</summary>
            <param name="m11">The value to assign to the first element in the first row.</param>
            <param name="m12">The value to assign to the second element in the first row.</param>
            <param name="m13">The value to assign to the third element in the first row.</param>
            <param name="m14">The value to assign to the fourth element in the first row.</param>
            <param name="m21">The value to assign to the first element in the second row.</param>
            <param name="m22">The value to assign to the second element in the second row.</param>
            <param name="m23">The value to assign to the third element in the second row.</param>
            <param name="m24">The value to assign to the third element in the second row.</param>
            <param name="m31">The value to assign to the first element in the third row.</param>
            <param name="m32">The value to assign to the second element in the third row.</param>
            <param name="m33">The value to assign to the third element in the third row.</param>
            <param name="m34">The value to assign to the fourth element in the third row.</param>
            <param name="m41">The value to assign to the first element in the fourth row.</param>
            <param name="m42">The value to assign to the second element in the fourth row.</param>
            <param name="m43">The value to assign to the third element in the fourth row.</param>
            <param name="m44">The value to assign to the fourth element in the fourth row.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.#ctor(System.Numerics.Matrix3x2)">
            <summary>Creates a <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> object from a specified <see cref="T:System.Numerics.Matrix3x2" /> object.</summary>
            <param name="value">A 3x2 matrix.</param>
            <remarks>
                This constructor creates a 4x4 matrix whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M13" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M14" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M23" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M24" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M31" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M32" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M34" />, and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M43" /> components are
                zero, and whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M33" /> and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M44" /> components are one.
            </remarks>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Identity">
            <summary>Gets the multiplicative identity matrix.</summary>
            <value>Gets the multiplicative identity matrix.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.IsIdentity">
            <summary>Indicates whether the current matrix is the identity matrix.</summary>
            <value><see langword="true" /> if the current matrix is the identity matrix; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Translation">
            <summary>Gets or sets the translation component of this matrix.</summary>
            <value>The translation component of the current instance.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)" /> method defines the operation of the addition operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Equality(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether the specified matrices are equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to care</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>Two matrices are equal if all their corresponding elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Inequality(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether the specified matrices are not equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Subtraction(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>
                The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from
                its corresponding element in <paramref name="value1" />.
            </returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Subtraction(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)" /> method defines the operation of the subtraction operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_UnaryNegation(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Add(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a spherical billboard that rotates around a specified object position.</summary>
            <param name="objectPosition">The position of the object that the billboard will rotate around.</param>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraUpVector">The up vector of the camera.</param>
            <param name="cameraForwardVector">The forward vector of the camera.</param>
            <returns>The created billboard.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a cylindrical billboard that rotates around a specified axis.</summary>
            <param name="objectPosition">The position of the object that the billboard will rotate around.</param>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="rotateAxis">The axis to rotate the billboard around.</param>
            <param name="cameraForwardVector">The forward vector of the camera.</param>
            <param name="objectForwardVector">The forward vector of the object.</param>
            <returns>The billboard matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
            <summary>Creates a matrix that rotates around an arbitrary vector.</summary>
            <param name="axis">The axis to rotate around.</param>
            <param name="angle">The angle to rotate around <paramref name="axis" />, in radians.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateFromQuaternion(System.Numerics.Quaternion)">
            <summary>Creates a rotation matrix from the specified Quaternion rotation value.</summary>
            <param name="quaternion">The source Quaternion.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>Creates a rotation matrix from the specified yaw, pitch, and roll.</summary>
            <param name="yaw">The angle of rotation, in radians, around the Y axis.</param>
            <param name="pitch">The angle of rotation, in radians, around the X axis.</param>
            <param name="roll">The angle of rotation, in radians, around the Z axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a view matrix.</summary>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraTarget">The target towards which the camera is pointing.</param>
            <param name="cameraUpVector">The direction that is "up" from the camera's point of view.</param>
            <returns>The view matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates an orthographic perspective matrix from the given view volume dimensions.</summary>
            <param name="width">The width of the view volume.</param>
            <param name="height">The height of the view volume.</param>
            <param name="zNearPlane">The minimum Z-value of the view volume.</param>
            <param name="zFarPlane">The maximum Z-value of the view volume.</param>
            <returns>The orthographic projection matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a customized orthographic projection matrix.</summary>
            <param name="left">The minimum X-value of the view volume.</param>
            <param name="right">The maximum X-value of the view volume.</param>
            <param name="bottom">The minimum Y-value of the view volume.</param>
            <param name="top">The maximum Y-value of the view volume.</param>
            <param name="zNearPlane">The minimum Z-value of the view volume.</param>
            <param name="zFarPlane">The maximum Z-value of the view volume.</param>
            <returns>The orthographic projection matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a perspective projection matrix from the given view volume dimensions.</summary>
            <param name="width">The width of the view volume at the near view plane.</param>
            <param name="height">The height of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">The distance to the near view plane.</param>
            <param name="farPlaneDistance">The distance to the far view plane.</param>
            <returns>The perspective projection matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="nearPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="farPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="nearPlaneDistance" /> is greater than or equal to <paramref name="farPlaneDistance" />.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane
                distances.
            </summary>
            <param name="fieldOfView">The field of view in the y direction, in radians.</param>
            <param name="aspectRatio">The aspect ratio, defined as view space width divided by height.</param>
            <param name="nearPlaneDistance">The distance to the near view plane.</param>
            <param name="farPlaneDistance">The distance to the far view plane.</param>
            <returns>The perspective projection matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="fieldOfView" /> is less than or equal to zero.
                -or-
                <paramref name="fieldOfView" /> is greater than or equal to <see cref="F:System.Math.PI" />.
                <paramref name="nearPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="farPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="nearPlaneDistance" /> is greater than or equal to <paramref name="farPlaneDistance" />.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a customized perspective projection matrix.</summary>
            <param name="left">The minimum x-value of the view volume at the near view plane.</param>
            <param name="right">The maximum x-value of the view volume at the near view plane.</param>
            <param name="bottom">The minimum y-value of the view volume at the near view plane.</param>
            <param name="top">The maximum y-value of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">The distance to the near view plane.</param>
            <param name="farPlaneDistance">The distance to the far view plane.</param>
            <returns>The perspective projection matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="nearPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="farPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="nearPlaneDistance" /> is greater than or equal to <paramref name="farPlaneDistance" />.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateReflection(System.Numerics.Plane)">
            <summary>Creates a matrix that reflects the coordinate system about a specified plane.</summary>
            <param name="value">The plane about which to create a reflection.</param>
            <returns>A new matrix expressing the reflection.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationX(System.Single)">
            <summary>Creates a matrix for rotating points around the X axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the X axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationX(System.Single,System.Numerics.Vector3)">
            <summary>Creates a matrix for rotating points around the X axis from a center point.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the X axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationY(System.Single)">
            <summary>Creates a matrix for rotating points around the Y axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Y-axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationY(System.Single,System.Numerics.Vector3)">
            <summary>The amount, in radians, by which to rotate around the Y axis from a center point.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Y-axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationZ(System.Single)">
            <summary>Creates a matrix for rotating points around the Z axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Z-axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationZ(System.Single,System.Numerics.Vector3)">
            <summary>Creates a matrix for rotating points around the Z axis from a center point.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Z-axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single,System.Single,System.Single)">
            <summary>Creates a scaling matrix from the specified X, Y, and Z components.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <param name="zScale">The value to scale by on the Z axis.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
            <summary>Creates a scaling matrix that is offset by a given center point.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <param name="zScale">The value to scale by on the Z axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Numerics.Vector3)">
            <summary>Creates a scaling matrix from the specified vector scale.</summary>
            <param name="scales">The scale to use.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a scaling matrix with a center point.</summary>
            <param name="scales">The vector that contains the amount to scale on each axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single)">
            <summary>Creates a uniform scaling matrix that scale equally on each axis.</summary>
            <param name="scale">The uniform scaling factor.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single,System.Numerics.Vector3)">
            <summary>Creates a uniform scaling matrix that scales equally on each axis with a center point.</summary>
            <param name="scale">The uniform scaling factor.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
            <summary>
                Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light
                source.
            </summary>
            <param name="lightDirection">The direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateTranslation(System.Numerics.Vector3)">
            <summary>Creates a translation matrix from the specified 3-dimensional vector.</summary>
            <param name="position">The amount to translate in each axis.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>Creates a translation matrix from the specified X, Y, and Z components.</summary>
            <param name="xPosition">The amount to translate on the X axis.</param>
            <param name="yPosition">The amount to translate on the Y axis.</param>
            <param name="zPosition">The amount to translate on the Z axis.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a world matrix with the specified parameters.</summary>
            <param name="position">The position of the object.</param>
            <param name="forward">The forward direction of the object.</param>
            <param name="up">The upward direction of the object. Its value is usually <c>[0, 1, 0]</c>.</param>
            <returns>The world matrix.</returns>
            <remarks><paramref name="position" /> is used in translation operations.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Negate(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Subtract(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>
                The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from
                its corresponding element in <paramref name="value1" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Transform(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,System.Numerics.Quaternion)">
            <summary>Transforms the specified matrix by applying the specified Quaternion rotation.</summary>
            <param name="value">The matrix to transform.</param>
            <param name="rotation">The rotation t apply.</param>
            <returns>The transformed matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> object and the corresponding elements of each matrix are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Equals(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether this instance and another 4x4 matrix are equal.</summary>
            <param name="other">The other matrix.</param>
            <returns><see langword="true" /> if the two matrices are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.GetDeterminant">
            <summary>Calculates the determinant of the current 4x4 matrix.</summary>
            <returns>The determinant.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.ToString">
            <summary>Returns a string that represents this matrix.</summary>
            <returns>The string representation of this matrix.</returns>
            <remarks>
                The numeric values in the returned string are formatted by using the conventions of the current culture. For
                example, for the en-US culture, the returned string might appear as
                <c>
                    { {M11:1.1 M12:1.2 M13:1.3 M14:1.4} {M21:2.1 M22:2.2 M23:2.3 M24:2.4} {M31:3.1 M32:3.2 M33:3.3 M34:3.4}
                    {M41:4.1
                    M42:4.2 M43:4.3 M44:4.4} }
                </c>
                .
            </remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis">
            <summary>
                The vector basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis.Element0">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis.Element1">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis.Element2">
            <summary>
                The element
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix2X2F">
            <summary>
                A 2-by-2 matrix. Stored in column-major order.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ex">
            <summary>
                The col
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ey">
            <summary>
                The col
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct this matrix using scalars.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single)">
            <summary>
                Construct this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Initialize this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(System.Single)">
            <summary>
                Initialize this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetIdentity">
            <summary>
                Set this to the identity matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetZero">
            <summary>
                Set this matrix to all zeros.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetAngle">
            <summary>
                Extract the angle from this matrix (assumed to be a rotation matrix).
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetInverse">
            <summary>
                Compute the inverse of this matrix, such that inv(A) * A = identity.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Solve(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient
                than computing the inverse in one-shot cases.
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Identity">
            <summary>
                Gets the value of the identity
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix2X2F,Alis.Core.Aspect.Math.Matrix.Matrix2X2F)">
            <summary>
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Inverse">
            <summary>
                Gets the value of the inverse
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> is a struct representing a glsl mat3 value
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ex">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ey">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ez">
            <summary>
                The ez
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Construct this matrix using columns.</summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="c3">The c3.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> from its components
            </summary>
            <remarks>
                Arguments are in row-major order
            </remarks>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.array">
            <summary>
                The array
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve33(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve22(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases. Solve only the upper 2-by-2 matrix equation.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetInverse22(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the inverse of this matrix as a 2-by-2.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetSymInverse33(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the symmetric inverse of this matrix as a 3-by-3.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Dot(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Dots the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Cross(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Crosses the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The vector</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Rotation">
            <summary>Rotation</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Sine">
            Sine and cosine
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Cosine">
            Sine and cosine
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.#ctor(System.Single)">
            <summary>Initialize from an angle in radians</summary>
            <param name="angle">Angle in radians</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.Set(System.Single)">
            <summary>Set using an angle in radians.</summary>
            <param name="angle"></param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.SetIdentity">
            <summary>Set to the identity rotation</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetAngle">
            <summary>Get the angle in radians</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetXAxis">
            <summary>Get the x-axis</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetYAxis">
            <summary>Get the y-axis</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Transform">
            <summary>
                A transform contains translation and rotation. It is used to represent the position and orientation of rigid
                frames.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Position">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Scale">
            <summary>
                The scale
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Rotation">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Transform" /> class
            </summary>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="scale">The scale</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.SetIdentity">
            <summary>Set this to the identity transform.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.Set(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Set this based on the position and angle.</summary>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Constant">
            <summary>
                The math constants class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Euler">
            <summary>
                The euler
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.E">
            <summary>Represents the mathematical constant e(2.71828175).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log10E">
            <summary>Represents the log base ten of e(0.4342945).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log2E">
            <summary>Represents the log base two of e(1.442695).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Pi">
            <summary>Represents the value of pi(3.14159274).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver2">
            <summary>Represents the value of pi divided by two(1.57079637).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver4">
            <summary>Represents the value of pi divided by four(0.7853982).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.TwoPi">
            <summary>Represents the value of pi times two(6.28318548).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Tau">
            <summary>Represents the value of pi times two(6.28318548). This is an alias of TwoPi.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Helper">
            <summary>Contains commonly used precalculated values and mathematical operations.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two
                normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the
                coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the
                coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Single,System.Single,System.Single)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Distance(System.Single,System.Single)">
            <summary>Calculates the absolute value of the difference of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)">
            <summary>Linearly interpolates between two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>value1 + (value2 - value1) * amount</code>. Passing amount a value of 0 will cause value1 to be returned, a
                value
                of 1 will cause value2 to be returned. See <see cref="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)" /> for a less efficient version with
                more
                precision around edge cases.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)">
            <summary>
                Linearly interpolates between two values. This method is a less efficient, more precise version of
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" />. See remarks for more info.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>((1 - amount) * value1) + (value2 * amount)</code>. Passing amount a value of 0 will cause value1 to be
                returned,
                a value of 1 will cause value2 to be returned. This method does not have the floating point precision issue that
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> has. i.e. If there is a big gap between value1 and value2 in magnitude (e.g.
                value1=10000000000000000, value2=1), right at the edge of the interpolation range (amount=1),
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> will return 0 (whereas it should return 1). This also holds for value1=10^17,
                value2=10;
                value1=10^18,value2=10^2... so on. For an in depth explanation of the issue, see below references: Relevant
                Wikipedia
                Article: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support Relevant StackOverflow
                Answer:
                http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Single,System.Single)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Int32,System.Int32)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Single,System.Single)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Int32,System.Int32)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>Interpolates between two values using a cubic equation.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToDegrees(System.Single)">
            <summary>Converts radians to degrees.</summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = 180 / pi</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToRadians(System.Single)">
            <summary>Converts degrees to radians.</summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = pi / 180</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.WrapAngle(System.Single)">
            <summary>Reduces a given angle to a value between π and -π.</summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.IsPowerOfTwo(System.Int32)">
            <summary>Determines if value is powered by two.</summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> is a struct represent a glsl bvec2 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2B.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2F">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2F.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> object whose two elements have the same value.</summary>
            <param name="value">The value to assign to both elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.#ctor(System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y" /> field.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.Zero">
            <summary>Returns a vector whose 2 elements are equal to zero.</summary>
            <value>A vector whose two elements are equal to zero (that is, it returns the vector <c>(0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.One">
            <summary>Gets a vector whose 2 elements are equal to one.</summary>
            <value>A vector whose two elements are equal to one (that is, it returns the vector <c>(1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.UnitX">
            <summary>Gets the vector (1,0).</summary>
            <value>The vector <c>(1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.UnitY">
            <summary>Gets the vector (0,1).</summary>
            <value>The vector <c>(0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Division(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Division(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> objects are equal if each value in <paramref name="left" /> is equal to the
                corresponding value in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)" /> method defines the subtraction operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2F)" /> method defines the unary negation operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Abs(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Add(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Clamp(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Distance(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Divide(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Divide(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Dot(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Lerp(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
            <remarks>
                <format type="text/markdown"><![CDATA[
            The behavior of this method changed in .NET 5.0. For more information, see [Behavior change for Vector2.Lerp and Vector4.Lerp](/dotnet/core/compatibility/3.1-5.0#behavior-change-for-vector2lerp-and-vector4lerp).
            ]]></format>
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Max(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Min(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Negate(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Normalize(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Reflect(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Subtract(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Transform(Alis.Core.Aspect.Math.Vector.Vector2F,System.Numerics.Matrix3x2)">
            <summary>Transforms a vector by a specified 3x2 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Transform(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Transform(Alis.Core.Aspect.Math.Vector.Vector2F,System.Numerics.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2F,System.Numerics.Matrix3x2)">
            <summary>Transforms a vector normal by the given 3x2 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least two elements. The method copies the vector's elements starting at
                index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the two vector elements. In
                other words, elements <paramref name="index" /> and <paramref name="index" /> + 1 must already exist in
                <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> object and their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Equals(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y" /> elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Length">
            <summary>Returns the length of the vector.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Vector2i is an utility class for manipulating 2 dimensional
                vectors with integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; returns the opposite of a vector
            </summary>
            <param name="v">Vector to negate</param>
            <returns>-v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(System.Int32,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Division(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2F">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Vector2u is an utility class for manipulating 2 dimensional
                vectors with unsigned integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(System.UInt32,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Division(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2F">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> is a struct represent a glsl bvec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3B.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3F">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3F.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3F.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3F.Z">
            <summary>The Z component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> object whose three elements have the same value.</summary>
            <param name="value">The value to assign to all three elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> class
            </summary>
            <param name="value">The value</param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(System.Single,System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Y" /> field.</param>
            <param name="z">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Z" /> field.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.Zero">
            <summary>Gets a vector whose 3 elements are equal to zero.</summary>
            <value>A vector whose three elements are equal to zero (that is, it returns the vector <c>(0,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.One">
            <summary>Gets a vector whose 3 elements are equal to one.</summary>
            <value>A vector whose three elements are equal to one (that is, it returns the vector <c>(1,1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.UnitX">
            <summary>Gets the vector (1,0,0).</summary>
            <value>The vector <c>(1,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.UnitY">
            <summary>Gets the vector (0,1,0).</summary>
            <value>The vector <c>(0,1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.UnitZ">
            <summary>Gets the vector (0,0,1).</summary>
            <value>The vector <c>(0,0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Division(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Division(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Equality(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> objects are equal if each element in <paramref name="right" /> is equal to the
                corresponding element in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)" /> method defines the subtraction operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3F)" /> method defines the unary negation operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Abs(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Add(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Clamp(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Cross(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Computes the cross product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Distance(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Divide(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Divide(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Dot(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Lerp(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Max(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Min(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Negate(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Normalize(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Reflect(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Subtract(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Transform(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Transform(Alis.Core.Aspect.Math.Vector.Vector3F,System.Numerics.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least three elements. The method copies the vector's elements starting
                at index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the three vector elements.
                In other words, elements <paramref name="index" />, <paramref name="index" /> + 1, and <paramref name="index" /> +
                2 must already exist in <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> object and their corresponding elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Equals(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>
                Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.X" />, <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Y" />, and
                <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Z" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Length">
            <summary>Returns the length of this vector object.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> is a struct represent a glsl ivec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> is a struct represent a glsl bvec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4B.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4F">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4F" /> is a struct represent a glsl vec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4F" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> is a struct represent a glsl ivec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4I.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream">
            <summary>
                Structure that contains InputStream callbacks
                (directly maps to a CSFML sfInputStream)
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.ReadCallbackType">
            <summary>
                Type of callback to read data from the current stream
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.SeekCallbackType">
            <summary>
                Type of callback to seek the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.TellCallbackType">
            <summary>
                Type of callback to return the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSizeCallbackType">
            <summary>
                Type of callback to return the current stream's size
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Read">
            <summary>
                Function that is called to read data from the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Seek">
            <summary>
                Function that is called to seek the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Tell">
            <summary>
                Function that is called to return the positon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSize">
            <summary>
                Function that is called to return the size
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor">
            <summary>
                Adapts a System.IO.Stream to be usable as a SFML InputStream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStream">
            <summary>
                The my input stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStreamPtr">
            <summary>
                The my input stream ptr
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.#ctor(System.IO.Stream)">
            <summary>
                Construct from a System.IO.Stream
            </summary>
            <param name="stream">Stream to adapt</param>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.InputStreamPtr">
            <summary>
                The pointer to the CSFML InputStream structure
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Read(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
                Called to read from the stream
            </summary>
            <param name="data">Where to copy the read bytes</param>
            <param name="size">Size to read, in bytes</param>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Seek(System.Int64,System.IntPtr)">
            <summary>
                Called to set the read position in the stream
            </summary>
            <param name="position">New read position</param>
            <param name="userData">User data -- unused</param>
            <returns>Actual position</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Tell(System.IntPtr)">
            <summary>
                Get the current read position in the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Current position in the stream</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.GetSize(System.IntPtr)">
            <summary>
                Called to get the total size of the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes in the stream</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Security.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Thread.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Time.TimeStep">
            <summary>This is an internal class.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTime">
            <summary>Time step (Delta time)</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTimeRatio">
            <summary>dt * inv_dt0</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTime">
            <summary>Inverse time step (0 if dt == 0).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTimeZero">
            <summary>
                The inverted delta time
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.PositionIterations">
            <summary>
                The position iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.VelocityIterations">
            <summary>
                The velocity iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.WarmStarting">
            <summary>
                The warm starting
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_CreateWindow">
            <summary>
            The platform createwindow
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_DestroyWindow">
            <summary>
            The platform destroywindow
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_ShowWindow">
            <summary>
            The platform showwindow
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_SetWindowPos">
            <summary>
            The platform setwindowpos
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_GetWindowPos">
            <summary>
            The platform getwindowpos
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_SetWindowSize">
            <summary>
            The platform setwindowsize
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_GetWindowSize">
            <summary>
            The platform getwindowsize
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_SetWindowFocus">
            <summary>
            The platform setwindowfocus
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_GetWindowFocus">
            <summary>
            The platform getwindowfocus
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_GetWindowMinimized">
            <summary>
            The platform getwindowminimized
            </summary>
        </member>
        <member name="T:ImGuiNET.Platform_SetWindowTitle">
            <summary>
            The platform setwindowtitle
            </summary>
        </member>
        <member name="T:ImGuiNET.ImColor">
            <summary>
            The im color
            </summary>
        </member>
        <member name="F:ImGuiNET.ImColor.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="T:ImGuiNET.ImColorPtr">
            <summary>
            The im color ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImColorPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.#ctor(ImGuiNET.ImColor*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImColorPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImColorPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.op_Implicit(ImGuiNET.ImColor*)~ImGuiNET.ImColorPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.op_Implicit(ImGuiNET.ImColorPtr)~ImGuiNET.ImColor*">
            <summary>
            /
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImColorPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImColorPtr.Value">
            <summary>
            Gets the value of the value
            </summary>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.HSV(System.Single,System.Single,System.Single)">
            <summary>
            Hsvs the h
            </summary>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.HSV(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Hsvs the h
            </summary>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <param name="a">The </param>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.SetHSV(System.Single,System.Single,System.Single)">
            <summary>
            Sets the hsv using the specified h
            </summary>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImColorPtr.SetHSV(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the hsv using the specified h
            </summary>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <param name="a">The </param>
        </member>
        <member name="T:ImGuiNET.ImDrawChannel">
            <summary>
            The im draw channel
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawChannel._CmdBuffer">
            <summary>
            The cmd buffer
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawChannel._IdxBuffer">
            <summary>
            The idx buffer
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawChannelPtr">
            <summary>
            The im draw channel ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawChannelPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawChannelPtr.#ctor(ImGuiNET.ImDrawChannel*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawChannelPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawChannelPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawChannelPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawChannelPtr.op_Implicit(ImGuiNET.ImDrawChannel*)~ImGuiNET.ImDrawChannelPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawChannelPtr.op_Implicit(ImGuiNET.ImDrawChannelPtr)~ImGuiNET.ImDrawChannel*">
            <summary>
            /
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawChannelPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawChannelPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawChannelPtr._CmdBuffer">
            <summary>
            Gets the value of the  cmdbuffer
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawChannelPtr._IdxBuffer">
            <summary>
            Gets the value of the  idxbuffer
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawCmd">
            <summary>
            The im draw cmd
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.ClipRect">
            <summary>
            The clip rect
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.TextureId">
            <summary>
            The texture id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.VtxOffset">
            <summary>
            The vtx offset
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.IdxOffset">
            <summary>
            The idx offset
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.ElemCount">
            <summary>
            The elem count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.UserCallback">
            <summary>
            The user callback
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmd.UserCallbackData">
            <summary>
            The user callback data
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawCmdPtr">
            <summary>
            The im draw cmd ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.#ctor(ImGuiNET.ImDrawCmd*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawCmdPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawCmdPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.op_Implicit(ImGuiNET.ImDrawCmd*)~ImGuiNET.ImDrawCmdPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.op_Implicit(ImGuiNET.ImDrawCmdPtr)~ImGuiNET.ImDrawCmd*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawCmdPtr">
            <summary>
            /
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.ClipRect">
            <summary>
            Gets the value of the clip rect
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.TextureId">
            <summary>
            Gets the value of the texture id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.VtxOffset">
            <summary>
            Gets the value of the vtx offset
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.IdxOffset">
            <summary>
            Gets the value of the idx offset
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.ElemCount">
            <summary>
            Gets the value of the elem count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.UserCallback">
            <summary>
            Gets the value of the user callback
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdPtr.UserCallbackData">
            <summary>
            Gets or sets the value of the user callback data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdPtr.GetTexID">
            <summary>
            Gets the tex id
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="T:ImGuiNET.ImDrawCmdHeader">
            <summary>
            The im draw cmd header
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmdHeader.ClipRect">
            <summary>
            The clip rect
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmdHeader.TextureId">
            <summary>
            The texture id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawCmdHeader.VtxOffset">
            <summary>
            The vtx offset
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawCmdHeaderPtr">
            <summary>
            The im draw cmd header ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdHeaderPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdHeaderPtr.#ctor(ImGuiNET.ImDrawCmdHeader*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawCmdHeaderPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdHeaderPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawCmdHeaderPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdHeaderPtr.op_Implicit(ImGuiNET.ImDrawCmdHeader*)~ImGuiNET.ImDrawCmdHeaderPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdHeaderPtr.op_Implicit(ImGuiNET.ImDrawCmdHeaderPtr)~ImGuiNET.ImDrawCmdHeader*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawCmdHeaderPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawCmdHeaderPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdHeaderPtr.ClipRect">
            <summary>
            Gets the value of the clip rect
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdHeaderPtr.TextureId">
            <summary>
            Gets the value of the texture id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawCmdHeaderPtr.VtxOffset">
            <summary>
            Gets the value of the vtx offset
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawData">
            <summary>
            The im draw data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.Valid">
            <summary>
            The valid
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.CmdListsCount">
            <summary>
            The cmd lists count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.TotalIdxCount">
            <summary>
            The total idx count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.TotalVtxCount">
            <summary>
            The total vtx count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.CmdLists">
            <summary>
            The cmd lists
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.DisplayPos">
            <summary>
            The display pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.DisplaySize">
            <summary>
            The display size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.FramebufferScale">
            <summary>
            The framebuffer scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawData.OwnerViewport">
            <summary>
            The owner viewport
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawDataPtr">
            <summary>
            The im draw data ptr
            </summary>
            <summary>
            The im draw data ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.#ctor(ImGuiNET.ImDrawData*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.op_Implicit(ImGuiNET.ImDrawData*)~ImGuiNET.ImDrawDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.op_Implicit(ImGuiNET.ImDrawDataPtr)~ImGuiNET.ImDrawData*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.Valid">
            <summary>
            Gets the value of the valid
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.CmdListsCount">
            <summary>
            Gets the value of the cmd lists count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.TotalIdxCount">
            <summary>
            Gets the value of the total idx count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.TotalVtxCount">
            <summary>
            Gets the value of the total vtx count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.CmdLists">
            <summary>
            Gets or sets the value of the cmd lists
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.DisplayPos">
            <summary>
            Gets the value of the display pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.DisplaySize">
            <summary>
            Gets the value of the display size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.FramebufferScale">
            <summary>
            Gets the value of the framebuffer scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.OwnerViewport">
            <summary>
            Gets the value of the owner viewport
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.DeIndexAllBuffers">
            <summary>
            Des the index all buffers
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawDataPtr.ScaleClipRects(System.Numerics.Vector2)">
            <summary>
            Scales the clip rects using the specified fb scale
            </summary>
            <param name="fb_scale">The fb scale</param>
        </member>
        <member name="P:ImGuiNET.ImDrawDataPtr.CmdListsRange">
            <summary>
            Gets the value of the cmd lists range
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawFlags">
            <summary>
            The im draw flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.None">
            <summary>
            The none im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.Closed">
            <summary>
            The closed im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersTopLeft">
            <summary>
            The round corners top left im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersTopRight">
            <summary>
            The round corners top right im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersBottomLeft">
            <summary>
            The round corners bottom left im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersBottomRight">
            <summary>
            The round corners bottom right im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersNone">
            <summary>
            The round corners none im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersTop">
            <summary>
            The round corners top im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersBottom">
            <summary>
            The round corners bottom im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersLeft">
            <summary>
            The round corners left im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersRight">
            <summary>
            The round corners right im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersAll">
            <summary>
            The round corners all im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersDefault">
            <summary>
            The round corners default im draw flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawFlags.RoundCornersMask">
            <summary>
            The round corners mask im draw flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawList">
            <summary>
            The im draw list
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList.CmdBuffer">
            <summary>
            The cmd buffer
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList.IdxBuffer">
            <summary>
            The idx buffer
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList.VtxBuffer">
            <summary>
            The vtx buffer
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList.Flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._VtxCurrentIdx">
            <summary>
            The vtx current idx
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._OwnerName">
            <summary>
            The owner name
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._VtxWritePtr">
            <summary>
            The vtx write ptr
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._IdxWritePtr">
            <summary>
            The idx write ptr
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._ClipRectStack">
            <summary>
            The clip rect stack
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._TextureIdStack">
            <summary>
            The texture id stack
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._Path">
            <summary>
            The path
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._CmdHeader">
            <summary>
            The cmd header
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._Splitter">
            <summary>
            The splitter
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawList._FringeScale">
            <summary>
            The fringe scale
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawListPtr">
            <summary>
            The im draw list ptr
            </summary>
            <summary>
            The im draw list ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.#ctor(ImGuiNET.ImDrawList*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawListPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawListPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.op_Implicit(ImGuiNET.ImDrawList*)~ImGuiNET.ImDrawListPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.op_Implicit(ImGuiNET.ImDrawListPtr)~ImGuiNET.ImDrawList*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawListPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr.CmdBuffer">
            <summary>
            Gets the value of the cmd buffer
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr.IdxBuffer">
            <summary>
            Gets the value of the idx buffer
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr.VtxBuffer">
            <summary>
            Gets the value of the vtx buffer
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr.Flags">
            <summary>
            Gets the value of the flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._VtxCurrentIdx">
            <summary>
            Gets the value of the  vtxcurrentidx
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._Data">
            <summary>
            Gets the value of the  data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._OwnerName">
            <summary>
            Gets the value of the  ownername
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._VtxWritePtr">
            <summary>
            Gets the value of the  vtxwriteptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._IdxWritePtr">
            <summary>
            Gets or sets the value of the  idxwriteptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._ClipRectStack">
            <summary>
            Gets the value of the  cliprectstack
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._TextureIdStack">
            <summary>
            Gets the value of the  textureidstack
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._Path">
            <summary>
            Gets the value of the  path
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._CmdHeader">
            <summary>
            Gets the value of the  cmdheader
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._Splitter">
            <summary>
            Gets the value of the  splitter
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListPtr._FringeScale">
            <summary>
            Gets the value of the  fringescale
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._CalcCircleAutoSegmentCount(System.Single)">
            <summary>
            Calcs the circle auto segment count using the specified radius
            </summary>
            <param name="radius">The radius</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._ClearFreeMemory">
            <summary>
            Clears the free memory
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._OnChangedClipRect">
            <summary>
            Ons the changed clip rect
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._OnChangedTextureID">
            <summary>
            Ons the changed texture id
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._OnChangedVtxOffset">
            <summary>
            Ons the changed vtx offset
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._PathArcToFastEx(System.Numerics.Vector2,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paths the arc to fast ex using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min_sample">The min sample</param>
            <param name="a_max_sample">The max sample</param>
            <param name="a_step">The step</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._PathArcToN(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Paths the arc to n using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min">The min</param>
            <param name="a_max">The max</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._PopUnusedDrawCmd">
            <summary>
            Pops the unused draw cmd
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._ResetForNewFrame">
            <summary>
            Resets the for new frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr._TryMergeDrawCmds">
            <summary>
            Tries the merge draw cmds
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddBezierCubic(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the bezier cubic using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddBezierCubic(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,System.Int32)">
            <summary>
            Adds the bezier cubic using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddBezierQuadratic(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the bezier quadratic using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddBezierQuadratic(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,System.Int32)">
            <summary>
            Adds the bezier quadratic using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddCallback(System.IntPtr,System.IntPtr)">
            <summary>
            Adds the callback using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="callback_data">The callback data</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddCircle(System.Numerics.Vector2,System.Single,System.UInt32)">
            <summary>
            Adds the circle using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddCircle(System.Numerics.Vector2,System.Single,System.UInt32,System.Int32)">
            <summary>
            Adds the circle using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddCircle(System.Numerics.Vector2,System.Single,System.UInt32,System.Int32,System.Single)">
            <summary>
            Adds the circle using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddCircleFilled(System.Numerics.Vector2,System.Single,System.UInt32)">
            <summary>
            Adds the circle filled using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddCircleFilled(System.Numerics.Vector2,System.Single,System.UInt32,System.Int32)">
            <summary>
            Adds the circle filled using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddConvexPolyFilled(System.Numerics.Vector2@,System.Int32,System.UInt32)">
            <summary>
            Adds the convex poly filled using the specified points
            </summary>
            <param name="points">The points</param>
            <param name="num_points">The num points</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddDrawCmd">
            <summary>
            Adds the draw cmd
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImage(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImage(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImage(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
            <param name="uv_max">The uv max</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImage(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the image using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
            <param name="uv_max">The uv max</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageQuad(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image quad using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageQuad(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image quad using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="uv1">The uv</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageQuad(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image quad using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="uv1">The uv</param>
            <param name="uv2">The uv</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageQuad(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image quad using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="uv1">The uv</param>
            <param name="uv2">The uv</param>
            <param name="uv3">The uv</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageQuad(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Adds the image quad using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="uv1">The uv</param>
            <param name="uv2">The uv</param>
            <param name="uv3">The uv</param>
            <param name="uv4">The uv</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageQuad(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the image quad using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="uv1">The uv</param>
            <param name="uv2">The uv</param>
            <param name="uv3">The uv</param>
            <param name="uv4">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageRounded(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the image rounded using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
            <param name="uv_max">The uv max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddImageRounded(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Adds the image rounded using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
            <param name="uv_max">The uv max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddLine(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the line using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddLine(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the line using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddNgon(System.Numerics.Vector2,System.Single,System.UInt32,System.Int32)">
            <summary>
            Adds the ngon using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddNgon(System.Numerics.Vector2,System.Single,System.UInt32,System.Int32,System.Single)">
            <summary>
            Adds the ngon using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddNgonFilled(System.Numerics.Vector2,System.Single,System.UInt32,System.Int32)">
            <summary>
            Adds the ngon filled using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddPolyline(System.Numerics.Vector2@,System.Int32,System.UInt32,ImGuiNET.ImDrawFlags,System.Single)">
            <summary>
            Adds the polyline using the specified points
            </summary>
            <param name="points">The points</param>
            <param name="num_points">The num points</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the quad using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the quad using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddQuadFilled(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the quad filled using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRect(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the rect using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRect(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the rect using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRect(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Adds the rect using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRect(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags,System.Single)">
            <summary>
            Adds the rect using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRectFilled(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the rect filled using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRectFilled(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the rect filled using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRectFilled(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Adds the rect filled using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddRectFilledMultiColor(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Adds the rect filled multi color using the specified p min
            </summary>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col_upr_left">The col upr left</param>
            <param name="col_upr_right">The col upr right</param>
            <param name="col_bot_right">The col bot right</param>
            <param name="col_bot_left">The col bot left</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the triangle using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Adds the triangle using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddTriangleFilled(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Adds the triangle filled using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.ChannelsMerge">
            <summary>
            Channelses the merge
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.ChannelsSetCurrent(System.Int32)">
            <summary>
            Channelses the set current using the specified n
            </summary>
            <param name="n">The </param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.ChannelsSplit(System.Int32)">
            <summary>
            Channelses the split using the specified count
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.CloneOutput">
            <summary>
            Clones the output
            </summary>
            <returns>The im draw list ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.GetClipRectMax">
            <summary>
            Gets the clip rect max
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.GetClipRectMin">
            <summary>
            Gets the clip rect min
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathArcTo(System.Numerics.Vector2,System.Single,System.Single,System.Single)">
            <summary>
            Paths the arc to using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min">The min</param>
            <param name="a_max">The max</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathArcTo(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Paths the arc to using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min">The min</param>
            <param name="a_max">The max</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathArcToFast(System.Numerics.Vector2,System.Single,System.Int32,System.Int32)">
            <summary>
            Paths the arc to fast using the specified center
            </summary>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min_of_12">The min of 12</param>
            <param name="a_max_of_12">The max of 12</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathBezierCubicCurveTo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Paths the bezier cubic curve to using the specified p 2
            </summary>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathBezierCubicCurveTo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Int32)">
            <summary>
            Paths the bezier cubic curve to using the specified p 2
            </summary>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathBezierQuadraticCurveTo(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Paths the bezier quadratic curve to using the specified p 2
            </summary>
            <param name="p2">The </param>
            <param name="p3">The </param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathBezierQuadraticCurveTo(System.Numerics.Vector2,System.Numerics.Vector2,System.Int32)">
            <summary>
            Paths the bezier quadratic curve to using the specified p 2
            </summary>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathClear">
            <summary>
            Paths the clear
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathFillConvex(System.UInt32)">
            <summary>
            Paths the fill convex using the specified col
            </summary>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathLineTo(System.Numerics.Vector2)">
            <summary>
            Paths the line to using the specified pos
            </summary>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathLineToMergeDuplicate(System.Numerics.Vector2)">
            <summary>
            Paths the line to merge duplicate using the specified pos
            </summary>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathRect(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Paths the rect using the specified rect min
            </summary>
            <param name="rect_min">The rect min</param>
            <param name="rect_max">The rect max</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
            <summary>
            Paths the rect using the specified rect min
            </summary>
            <param name="rect_min">The rect min</param>
            <param name="rect_max">The rect max</param>
            <param name="rounding">The rounding</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Paths the rect using the specified rect min
            </summary>
            <param name="rect_min">The rect min</param>
            <param name="rect_max">The rect max</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathStroke(System.UInt32)">
            <summary>
            Paths the stroke using the specified col
            </summary>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathStroke(System.UInt32,ImGuiNET.ImDrawFlags)">
            <summary>
            Paths the stroke using the specified col
            </summary>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PathStroke(System.UInt32,ImGuiNET.ImDrawFlags,System.Single)">
            <summary>
            Paths the stroke using the specified col
            </summary>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PopClipRect">
            <summary>
            Pops the clip rect
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PopTextureID">
            <summary>
            Pops the texture id
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimQuadUV(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Prims the quad uv using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <param name="d">The </param>
            <param name="uv_a">The uv</param>
            <param name="uv_b">The uv</param>
            <param name="uv_c">The uv</param>
            <param name="uv_d">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimRect(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Prims the rect using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimRectUV(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Prims the rect uv using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="uv_a">The uv</param>
            <param name="uv_b">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimReserve(System.Int32,System.Int32)">
            <summary>
            Prims the reserve using the specified idx count
            </summary>
            <param name="idx_count">The idx count</param>
            <param name="vtx_count">The vtx count</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimUnreserve(System.Int32,System.Int32)">
            <summary>
            Prims the unreserve using the specified idx count
            </summary>
            <param name="idx_count">The idx count</param>
            <param name="vtx_count">The vtx count</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimVtx(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Prims the vtx using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="uv">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimWriteIdx(System.UInt16)">
            <summary>
            Prims the write idx using the specified idx
            </summary>
            <param name="idx">The idx</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PrimWriteVtx(System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Prims the write vtx using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="uv">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PushClipRect(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Pushes the clip rect using the specified clip rect min
            </summary>
            <param name="clip_rect_min">The clip rect min</param>
            <param name="clip_rect_max">The clip rect max</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PushClipRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)">
            <summary>
            Pushes the clip rect using the specified clip rect min
            </summary>
            <param name="clip_rect_min">The clip rect min</param>
            <param name="clip_rect_max">The clip rect max</param>
            <param name="intersect_with_current_clip_rect">The intersect with current clip rect</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PushClipRectFullScreen">
            <summary>
            Pushes the clip rect full screen
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.PushTextureID(System.IntPtr)">
            <summary>
            Pushes the texture id using the specified texture id
            </summary>
            <param name="texture_id">The texture id</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddText(System.Numerics.Vector2,System.UInt32,System.String)">
            <summary>
            Adds the text using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="text_begin">The text begin</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListPtr.AddText(ImGuiNET.ImFontPtr,System.Single,System.Numerics.Vector2,System.UInt32,System.String)">
            <summary>
            Adds the text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="font_size">The font size</param>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="text_begin">The text begin</param>
        </member>
        <member name="T:ImGuiNET.ImDrawListFlags">
            <summary>
            The im draw list flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListFlags.None">
            <summary>
            The none im draw list flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListFlags.AntiAliasedLines">
            <summary>
            The anti aliased lines im draw list flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListFlags.AntiAliasedLinesUseTex">
            <summary>
            The anti aliased lines use tex im draw list flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListFlags.AntiAliasedFill">
            <summary>
            The anti aliased fill im draw list flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListFlags.AllowVtxOffset">
            <summary>
            The allow vtx offset im draw list flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawListSplitter">
            <summary>
            The im draw list splitter
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListSplitter._Current">
            <summary>
            The current
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListSplitter._Count">
            <summary>
            The count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawListSplitter._Channels">
            <summary>
            The channels
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawListSplitterPtr">
            <summary>
            The im draw list splitter ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListSplitterPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.#ctor(ImGuiNET.ImDrawListSplitter*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawListSplitterPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawListSplitterPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.op_Implicit(ImGuiNET.ImDrawListSplitter*)~ImGuiNET.ImDrawListSplitterPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.op_Implicit(ImGuiNET.ImDrawListSplitterPtr)~ImGuiNET.ImDrawListSplitter*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawListSplitterPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawListSplitterPtr._Current">
            <summary>
            Gets the value of the  current
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListSplitterPtr._Count">
            <summary>
            Gets the value of the  count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawListSplitterPtr._Channels">
            <summary>
            Gets the value of the  channels
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.ClearFreeMemory">
            <summary>
            Clears the free memory
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.Merge(ImGuiNET.ImDrawListPtr)">
            <summary>
            Merges the draw list
            </summary>
            <param name="draw_list">The draw list</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.SetCurrentChannel(ImGuiNET.ImDrawListPtr,System.Int32)">
            <summary>
            Sets the current channel using the specified draw list
            </summary>
            <param name="draw_list">The draw list</param>
            <param name="channel_idx">The channel idx</param>
        </member>
        <member name="M:ImGuiNET.ImDrawListSplitterPtr.Split(ImGuiNET.ImDrawListPtr,System.Int32)">
            <summary>
            Splits the draw list
            </summary>
            <param name="draw_list">The draw list</param>
            <param name="count">The count</param>
        </member>
        <member name="T:ImGuiNET.ImDrawVert">
            <summary>
            The im draw vert
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawVert.pos">
            <summary>
            The pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawVert.uv">
            <summary>
            The uv
            </summary>
        </member>
        <member name="F:ImGuiNET.ImDrawVert.col">
            <summary>
            The col
            </summary>
        </member>
        <member name="T:ImGuiNET.ImDrawVertPtr">
            <summary>
            The im draw vert ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawVertPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImDrawVertPtr.#ctor(ImGuiNET.ImDrawVert*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawVertPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawVertPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImDrawVertPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImDrawVertPtr.op_Implicit(ImGuiNET.ImDrawVert*)~ImGuiNET.ImDrawVertPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawVertPtr.op_Implicit(ImGuiNET.ImDrawVertPtr)~ImGuiNET.ImDrawVert*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImDrawVertPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImDrawVertPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImDrawVertPtr.pos">
            <summary>
            Gets the value of the pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawVertPtr.uv">
            <summary>
            Gets the value of the uv
            </summary>
        </member>
        <member name="P:ImGuiNET.ImDrawVertPtr.col">
            <summary>
            Gets the value of the col
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFont">
            <summary>
            The im font
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.IndexAdvanceX">
            <summary>
            The index advance
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.FallbackAdvanceX">
            <summary>
            The fallback advance
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.FontSize">
            <summary>
            The font size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.IndexLookup">
            <summary>
            The index lookup
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.Glyphs">
            <summary>
            The glyphs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.FallbackGlyph">
            <summary>
            The fallback glyph
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.ContainerAtlas">
            <summary>
            The container atlas
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.ConfigData">
            <summary>
            The config data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.ConfigDataCount">
            <summary>
            The config data count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.FallbackChar">
            <summary>
            The fallback char
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.EllipsisChar">
            <summary>
            The ellipsis char
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.EllipsisCharCount">
            <summary>
            The ellipsis char count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.EllipsisWidth">
            <summary>
            The ellipsis width
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.EllipsisCharStep">
            <summary>
            The ellipsis char step
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.DirtyLookupTables">
            <summary>
            The dirty lookup tables
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.Scale">
            <summary>
            The scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.Ascent">
            <summary>
            The ascent
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.Descent">
            <summary>
            The descent
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.MetricsTotalSurface">
            <summary>
            The metrics total surface
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFont.Used4kPagesMap">
            <summary>
            The used 4k pages map
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontPtr">
            <summary>
            The im font ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.#ctor(ImGuiNET.ImFont*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.op_Implicit(ImGuiNET.ImFont*)~ImGuiNET.ImFontPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.op_Implicit(ImGuiNET.ImFontPtr)~ImGuiNET.ImFont*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImFontPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.IndexAdvanceX">
            <summary>
            Gets the value of the index advance x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.FallbackAdvanceX">
            <summary>
            Gets the value of the fallback advance x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.FontSize">
            <summary>
            Gets the value of the font size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.IndexLookup">
            <summary>
            Gets the value of the index lookup
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.Glyphs">
            <summary>
            Gets the value of the glyphs
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.FallbackGlyph">
            <summary>
            Gets the value of the fallback glyph
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.ContainerAtlas">
            <summary>
            Gets the value of the container atlas
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.ConfigData">
            <summary>
            Gets the value of the config data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.ConfigDataCount">
            <summary>
            Gets the value of the config data count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.FallbackChar">
            <summary>
            Gets the value of the fallback char
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.EllipsisChar">
            <summary>
            Gets the value of the ellipsis char
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.EllipsisCharCount">
            <summary>
            Gets the value of the ellipsis char count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.EllipsisWidth">
            <summary>
            Gets the value of the ellipsis width
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.EllipsisCharStep">
            <summary>
            Gets the value of the ellipsis char step
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.DirtyLookupTables">
            <summary>
            Gets the value of the dirty lookup tables
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.Scale">
            <summary>
            Gets the value of the scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.Ascent">
            <summary>
            Gets the value of the ascent
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.Descent">
            <summary>
            Gets the value of the descent
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.MetricsTotalSurface">
            <summary>
            Gets the value of the metrics total surface
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontPtr.Used4kPagesMap">
            <summary>
            Gets the value of the used 4k pages map
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.AddGlyph(ImGuiNET.ImFontConfigPtr,System.UInt16,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds the glyph using the specified src cfg
            </summary>
            <param name="src_cfg">The src cfg</param>
            <param name="c">The </param>
            <param name="x0">The </param>
            <param name="y0">The </param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="u0">The </param>
            <param name="v0">The </param>
            <param name="u1">The </param>
            <param name="v1">The </param>
            <param name="advance_x">The advance</param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.AddRemapChar(System.UInt16,System.UInt16)">
            <summary>
            Adds the remap char using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.AddRemapChar(System.UInt16,System.UInt16,System.Boolean)">
            <summary>
            Adds the remap char using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="overwrite_dst">The overwrite dst</param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.BuildLookupTable">
            <summary>
            Builds the lookup table
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.ClearOutputData">
            <summary>
            Clears the output data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.FindGlyph(System.UInt16)">
            <summary>
            Finds the glyph using the specified c
            </summary>
            <param name="c">The </param>
            <returns>The im font glyph ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.FindGlyphNoFallback(System.UInt16)">
            <summary>
            Finds the glyph no fallback using the specified c
            </summary>
            <param name="c">The </param>
            <returns>The im font glyph ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.GetCharAdvance(System.UInt16)">
            <summary>
            Gets the char advance using the specified c
            </summary>
            <param name="c">The </param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.GetDebugName">
            <summary>
            Gets the debug name
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.GrowIndex(System.Int32)">
            <summary>
            Grows the index using the specified new size
            </summary>
            <param name="new_size">The new size</param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.IsLoaded">
            <summary>
            Describes whether this instance is loaded
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.RenderChar(ImGuiNET.ImDrawListPtr,System.Single,System.Numerics.Vector2,System.UInt32,System.UInt16)">
            <summary>
            Renders the char using the specified draw list
            </summary>
            <param name="draw_list">The draw list</param>
            <param name="size">The size</param>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImFontPtr.SetGlyphVisible(System.UInt16,System.Boolean)">
            <summary>
            Sets the glyph visible using the specified c
            </summary>
            <param name="c">The </param>
            <param name="visible">The visible</param>
        </member>
        <member name="T:ImGuiNET.ImFontAtlas">
            <summary>
            The im font atlas
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.Flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexID">
            <summary>
            The tex id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexDesiredWidth">
            <summary>
            The tex desired width
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexGlyphPadding">
            <summary>
            The tex glyph padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.Locked">
            <summary>
            The locked
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.UserData">
            <summary>
            The user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexReady">
            <summary>
            The tex ready
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexPixelsUseColors">
            <summary>
            The tex pixels use colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexPixelsAlpha8">
            <summary>
            The tex pixels alpha
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexPixelsRGBA32">
            <summary>
            The tex pixels rgba 32
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexWidth">
            <summary>
            The tex width
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexHeight">
            <summary>
            The tex height
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvScale">
            <summary>
            The tex uv scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvWhitePixel">
            <summary>
            The tex uv white pixel
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.Fonts">
            <summary>
            The fonts
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.CustomRects">
            <summary>
            The custom rects
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.ConfigData">
            <summary>
            The config data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_0">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_1">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_2">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_3">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_4">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_5">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_6">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_7">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_8">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_9">
            <summary>
            The texuvlines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_10">
            <summary>
            The texuvlines 10
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_11">
            <summary>
            The texuvlines 11
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_12">
            <summary>
            The texuvlines 12
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_13">
            <summary>
            The texuvlines 13
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_14">
            <summary>
            The texuvlines 14
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_15">
            <summary>
            The texuvlines 15
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_16">
            <summary>
            The texuvlines 16
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_17">
            <summary>
            The texuvlines 17
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_18">
            <summary>
            The texuvlines 18
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_19">
            <summary>
            The texuvlines 19
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_20">
            <summary>
            The texuvlines 20
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_21">
            <summary>
            The texuvlines 21
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_22">
            <summary>
            The texuvlines 22
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_23">
            <summary>
            The texuvlines 23
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_24">
            <summary>
            The texuvlines 24
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_25">
            <summary>
            The texuvlines 25
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_26">
            <summary>
            The texuvlines 26
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_27">
            <summary>
            The texuvlines 27
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_28">
            <summary>
            The texuvlines 28
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_29">
            <summary>
            The texuvlines 29
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_30">
            <summary>
            The texuvlines 30
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_31">
            <summary>
            The texuvlines 31
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_32">
            <summary>
            The texuvlines 32
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_33">
            <summary>
            The texuvlines 33
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_34">
            <summary>
            The texuvlines 34
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_35">
            <summary>
            The texuvlines 35
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_36">
            <summary>
            The texuvlines 36
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_37">
            <summary>
            The texuvlines 37
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_38">
            <summary>
            The texuvlines 38
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_39">
            <summary>
            The texuvlines 39
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_40">
            <summary>
            The texuvlines 40
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_41">
            <summary>
            The texuvlines 41
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_42">
            <summary>
            The texuvlines 42
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_43">
            <summary>
            The texuvlines 43
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_44">
            <summary>
            The texuvlines 44
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_45">
            <summary>
            The texuvlines 45
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_46">
            <summary>
            The texuvlines 46
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_47">
            <summary>
            The texuvlines 47
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_48">
            <summary>
            The texuvlines 48
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_49">
            <summary>
            The texuvlines 49
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_50">
            <summary>
            The texuvlines 50
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_51">
            <summary>
            The texuvlines 51
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_52">
            <summary>
            The texuvlines 52
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_53">
            <summary>
            The texuvlines 53
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_54">
            <summary>
            The texuvlines 54
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_55">
            <summary>
            The texuvlines 55
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_56">
            <summary>
            The texuvlines 56
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_57">
            <summary>
            The texuvlines 57
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_58">
            <summary>
            The texuvlines 58
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_59">
            <summary>
            The texuvlines 59
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_60">
            <summary>
            The texuvlines 60
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_61">
            <summary>
            The texuvlines 61
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_62">
            <summary>
            The texuvlines 62
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.TexUvLines_63">
            <summary>
            The texuvlines 63
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.FontBuilderIO">
            <summary>
            The font builder io
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.FontBuilderFlags">
            <summary>
            The font builder flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.PackIdMouseCursors">
            <summary>
            The pack id mouse cursors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlas.PackIdLines">
            <summary>
            The pack id lines
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontAtlasPtr">
            <summary>
            The im font atlas ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.#ctor(ImGuiNET.ImFontAtlas*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontAtlasPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontAtlasPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.op_Implicit(ImGuiNET.ImFontAtlas*)~ImGuiNET.ImFontAtlasPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.op_Implicit(ImGuiNET.ImFontAtlasPtr)~ImGuiNET.ImFontAtlas*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImFontAtlasPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.Flags">
            <summary>
            Gets the value of the flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexID">
            <summary>
            Gets the value of the tex id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexDesiredWidth">
            <summary>
            Gets the value of the tex desired width
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexGlyphPadding">
            <summary>
            Gets the value of the tex glyph padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.Locked">
            <summary>
            Gets the value of the locked
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.UserData">
            <summary>
            Gets or sets the value of the user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexReady">
            <summary>
            Gets the value of the tex ready
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexPixelsUseColors">
            <summary>
            Gets the value of the tex pixels use colors
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexPixelsAlpha8">
            <summary>
            Gets or sets the value of the tex pixels alpha 8
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexPixelsRGBA32">
            <summary>
            Gets or sets the value of the tex pixels rgba 32
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexWidth">
            <summary>
            Gets the value of the tex width
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexHeight">
            <summary>
            Gets the value of the tex height
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexUvScale">
            <summary>
            Gets the value of the tex uv scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexUvWhitePixel">
            <summary>
            Gets the value of the tex uv white pixel
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.Fonts">
            <summary>
            Gets the value of the fonts
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.CustomRects">
            <summary>
            Gets the value of the custom rects
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.ConfigData">
            <summary>
            Gets the value of the config data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.TexUvLines">
            <summary>
            Gets the value of the tex uv lines
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.FontBuilderIO">
            <summary>
            Gets or sets the value of the font builder io
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.FontBuilderFlags">
            <summary>
            Gets the value of the font builder flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.PackIdMouseCursors">
            <summary>
            Gets the value of the pack id mouse cursors
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasPtr.PackIdLines">
            <summary>
            Gets the value of the pack id lines
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddCustomRectFontGlyph(ImGuiNET.ImFontPtr,System.UInt16,System.Int32,System.Int32,System.Single)">
            <summary>
            Adds the custom rect font glyph using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="id">The id</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="advance_x">The advance</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddCustomRectFontGlyph(ImGuiNET.ImFontPtr,System.UInt16,System.Int32,System.Int32,System.Single,System.Numerics.Vector2)">
            <summary>
            Adds the custom rect font glyph using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="id">The id</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="advance_x">The advance</param>
            <param name="offset">The offset</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddCustomRectRegular(System.Int32,System.Int32)">
            <summary>
            Adds the custom rect regular using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFont(ImGuiNET.ImFontConfigPtr)">
            <summary>
            Adds the font using the specified font cfg
            </summary>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontDefault">
            <summary>
            Adds the font default
            </summary>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontDefault(ImGuiNET.ImFontConfigPtr)">
            <summary>
            Adds the font default using the specified font cfg
            </summary>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromFileTTF(System.String,System.Single)">
            <summary>
            Adds the font from file ttf using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <param name="size_pixels">The size pixels</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromFileTTF(System.String,System.Single,ImGuiNET.ImFontConfigPtr)">
            <summary>
            Adds the font from file ttf using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromFileTTF(System.String,System.Single,ImGuiNET.ImFontConfigPtr,System.IntPtr)">
            <summary>
            Adds the font from file ttf using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryCompressedBase85TTF(System.String,System.Single)">
            <summary>
            Adds the font from memory compressed base 85 ttf using the specified compressed font data base85
            </summary>
            <param name="compressed_font_data_base85">The compressed font data base85</param>
            <param name="size_pixels">The size pixels</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryCompressedBase85TTF(System.String,System.Single,ImGuiNET.ImFontConfigPtr)">
            <summary>
            Adds the font from memory compressed base 85 ttf using the specified compressed font data base85
            </summary>
            <param name="compressed_font_data_base85">The compressed font data base85</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryCompressedBase85TTF(System.String,System.Single,ImGuiNET.ImFontConfigPtr,System.IntPtr)">
            <summary>
            Adds the font from memory compressed base 85 ttf using the specified compressed font data base85
            </summary>
            <param name="compressed_font_data_base85">The compressed font data base85</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryCompressedTTF(System.IntPtr,System.Int32,System.Single)">
            <summary>
            Adds the font from memory compressed ttf using the specified compressed font data
            </summary>
            <param name="compressed_font_data">The compressed font data</param>
            <param name="compressed_font_size">The compressed font size</param>
            <param name="size_pixels">The size pixels</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryCompressedTTF(System.IntPtr,System.Int32,System.Single,ImGuiNET.ImFontConfigPtr)">
            <summary>
            Adds the font from memory compressed ttf using the specified compressed font data
            </summary>
            <param name="compressed_font_data">The compressed font data</param>
            <param name="compressed_font_size">The compressed font size</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryCompressedTTF(System.IntPtr,System.Int32,System.Single,ImGuiNET.ImFontConfigPtr,System.IntPtr)">
            <summary>
            Adds the font from memory compressed ttf using the specified compressed font data
            </summary>
            <param name="compressed_font_data">The compressed font data</param>
            <param name="compressed_font_size">The compressed font size</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryTTF(System.IntPtr,System.Int32,System.Single)">
            <summary>
            Adds the font from memory ttf using the specified font data
            </summary>
            <param name="font_data">The font data</param>
            <param name="font_size">The font size</param>
            <param name="size_pixels">The size pixels</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryTTF(System.IntPtr,System.Int32,System.Single,ImGuiNET.ImFontConfigPtr)">
            <summary>
            Adds the font from memory ttf using the specified font data
            </summary>
            <param name="font_data">The font data</param>
            <param name="font_size">The font size</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.AddFontFromMemoryTTF(System.IntPtr,System.Int32,System.Single,ImGuiNET.ImFontConfigPtr,System.IntPtr)">
            <summary>
            Adds the font from memory ttf using the specified font data
            </summary>
            <param name="font_data">The font data</param>
            <param name="font_size">The font size</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.Build">
            <summary>
            Describes whether this instance build
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.CalcCustomRectUV(ImGuiNET.ImFontAtlasCustomRectPtr,System.Numerics.Vector2@,System.Numerics.Vector2@)">
            <summary>
            Calcs the custom rect uv using the specified rect
            </summary>
            <param name="rect">The rect</param>
            <param name="out_uv_min">The out uv min</param>
            <param name="out_uv_max">The out uv max</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.ClearFonts">
            <summary>
            Clears the fonts
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.ClearInputData">
            <summary>
            Clears the input data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.ClearTexData">
            <summary>
            Clears the tex data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetCustomRectByIndex(System.Int32)">
            <summary>
            Gets the custom rect by index using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The im font atlas custom rect ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesChineseFull">
            <summary>
            Gets the glyph ranges chinese full
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesChineseSimplifiedCommon">
            <summary>
            Gets the glyph ranges chinese simplified common
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesCyrillic">
            <summary>
            Gets the glyph ranges cyrillic
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesDefault">
            <summary>
            Gets the glyph ranges default
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesGreek">
            <summary>
            Gets the glyph ranges greek
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesJapanese">
            <summary>
            Gets the glyph ranges japanese
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesKorean">
            <summary>
            Gets the glyph ranges korean
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesThai">
            <summary>
            Gets the glyph ranges thai
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetGlyphRangesVietnamese">
            <summary>
            Gets the glyph ranges vietnamese
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetMouseCursorTexData(ImGuiNET.ImGuiMouseCursor,System.Numerics.Vector2@,System.Numerics.Vector2@,System.Numerics.Vector2@,System.Numerics.Vector2@)">
            <summary>
            Describes whether this instance get mouse cursor tex data
            </summary>
            <param name="cursor">The cursor</param>
            <param name="out_offset">The out offset</param>
            <param name="out_size">The out size</param>
            <param name="out_uv_border">The out uv border</param>
            <param name="out_uv_fill">The out uv fill</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsAlpha8(System.Byte*@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as alpha 8 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsAlpha8(System.Byte*@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as alpha 8 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsAlpha8(System.IntPtr@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as alpha 8 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsAlpha8(System.IntPtr@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as alpha 8 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsRGBA32(System.Byte*@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as rgba 32 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsRGBA32(System.Byte*@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as rgba 32 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsRGBA32(System.IntPtr@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as rgba 32 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.GetTexDataAsRGBA32(System.IntPtr@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the tex data as rgba 32 using the specified out pixels
            </summary>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.IsBuilt">
            <summary>
            Describes whether this instance is built
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasPtr.SetTexID(System.IntPtr)">
            <summary>
            Sets the tex id using the specified id
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="T:ImGuiNET.ImFontAtlasCustomRect">
            <summary>
            The im font atlas custom rect
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.Width">
            <summary>
            The width
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.Height">
            <summary>
            The height
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.X">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.Y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.GlyphID">
            <summary>
            The glyph id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.GlyphAdvanceX">
            <summary>
            The glyph advance
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.GlyphOffset">
            <summary>
            The glyph offset
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasCustomRect.Font">
            <summary>
            The font
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontAtlasCustomRectPtr">
            <summary>
            The im font atlas custom rect ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.#ctor(ImGuiNET.ImFontAtlasCustomRect*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontAtlasCustomRectPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontAtlasCustomRectPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.op_Implicit(ImGuiNET.ImFontAtlasCustomRect*)~ImGuiNET.ImFontAtlasCustomRectPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.op_Implicit(ImGuiNET.ImFontAtlasCustomRectPtr)~ImGuiNET.ImFontAtlasCustomRect*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImFontAtlasCustomRectPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.Width">
            <summary>
            Gets the value of the width
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.Height">
            <summary>
            Gets the value of the height
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.X">
            <summary>
            Gets the value of the x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.Y">
            <summary>
            Gets the value of the y
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.GlyphID">
            <summary>
            Gets the value of the glyph id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.GlyphAdvanceX">
            <summary>
            Gets the value of the glyph advance x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.GlyphOffset">
            <summary>
            Gets the value of the glyph offset
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontAtlasCustomRectPtr.Font">
            <summary>
            Gets the value of the font
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontAtlasCustomRectPtr.IsPacked">
            <summary>
            Describes whether this instance is packed
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:ImGuiNET.ImFontAtlasFlags">
            <summary>
            The im font atlas flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasFlags.None">
            <summary>
            The none im font atlas flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasFlags.NoPowerOfTwoHeight">
            <summary>
            The no power of two height im font atlas flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasFlags.NoMouseCursors">
            <summary>
            The no mouse cursors im font atlas flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontAtlasFlags.NoBakedLines">
            <summary>
            The no baked lines im font atlas flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontConfig">
            <summary>
            The im font config
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.FontData">
            <summary>
            The font data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.FontDataSize">
            <summary>
            The font data size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.FontDataOwnedByAtlas">
            <summary>
            The font data owned by atlas
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.FontNo">
            <summary>
            The font no
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.SizePixels">
            <summary>
            The size pixels
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.OversampleH">
            <summary>
            The oversample
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.OversampleV">
            <summary>
            The oversample
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.PixelSnapH">
            <summary>
            The pixel snap
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.GlyphExtraSpacing">
            <summary>
            The glyph extra spacing
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.GlyphOffset">
            <summary>
            The glyph offset
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.GlyphRanges">
            <summary>
            The glyph ranges
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.GlyphMinAdvanceX">
            <summary>
            The glyph min advance
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.GlyphMaxAdvanceX">
            <summary>
            The glyph max advance
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.MergeMode">
            <summary>
            The merge mode
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.FontBuilderFlags">
            <summary>
            The font builder flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.RasterizerMultiply">
            <summary>
            The rasterizer multiply
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.EllipsisChar">
            <summary>
            The ellipsis char
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontConfig.DstFont">
            <summary>
            The dst font
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontConfigPtr">
            <summary>
            The im font config ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontConfigPtr.#ctor(ImGuiNET.ImFontConfig*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontConfigPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontConfigPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontConfigPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontConfigPtr.op_Implicit(ImGuiNET.ImFontConfig*)~ImGuiNET.ImFontConfigPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontConfigPtr.op_Implicit(ImGuiNET.ImFontConfigPtr)~ImGuiNET.ImFontConfig*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontConfigPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImFontConfigPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.FontData">
            <summary>
            Gets or sets the value of the font data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.FontDataSize">
            <summary>
            Gets the value of the font data size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.FontDataOwnedByAtlas">
            <summary>
            Gets the value of the font data owned by atlas
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.FontNo">
            <summary>
            Gets the value of the font no
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.SizePixels">
            <summary>
            Gets the value of the size pixels
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.OversampleH">
            <summary>
            Gets the value of the oversample h
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.OversampleV">
            <summary>
            Gets the value of the oversample v
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.PixelSnapH">
            <summary>
            Gets the value of the pixel snap h
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.GlyphExtraSpacing">
            <summary>
            Gets the value of the glyph extra spacing
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.GlyphOffset">
            <summary>
            Gets the value of the glyph offset
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.GlyphRanges">
            <summary>
            Gets or sets the value of the glyph ranges
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.GlyphMinAdvanceX">
            <summary>
            Gets the value of the glyph min advance x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.GlyphMaxAdvanceX">
            <summary>
            Gets the value of the glyph max advance x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.MergeMode">
            <summary>
            Gets the value of the merge mode
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.FontBuilderFlags">
            <summary>
            Gets the value of the font builder flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.RasterizerMultiply">
            <summary>
            Gets the value of the rasterizer multiply
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.EllipsisChar">
            <summary>
            Gets the value of the ellipsis char
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.Name">
            <summary>
            Gets the value of the name
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontConfigPtr.DstFont">
            <summary>
            Gets the value of the dst font
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontConfigPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontGlyph">
            <summary>
            The im font glyph
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.Colored">
            <summary>
            The colored
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.Visible">
            <summary>
            The visible
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.Codepoint">
            <summary>
            The codepoint
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.AdvanceX">
            <summary>
            The advance
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.X0">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.Y0">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.X1">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.Y1">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.U0">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.V0">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.U1">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyph.V1">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontGlyphPtr">
            <summary>
            The im font glyph ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphPtr.#ctor(ImGuiNET.ImFontGlyph*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontGlyphPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontGlyphPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphPtr.op_Implicit(ImGuiNET.ImFontGlyph*)~ImGuiNET.ImFontGlyphPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphPtr.op_Implicit(ImGuiNET.ImFontGlyphPtr)~ImGuiNET.ImFontGlyph*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImFontGlyphPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.Colored">
            <summary>
            Gets the value of the colored
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.Visible">
            <summary>
            Gets the value of the visible
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.Codepoint">
            <summary>
            Gets the value of the codepoint
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.AdvanceX">
            <summary>
            Gets the value of the advance x
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.X0">
            <summary>
            Gets the value of the x 0
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.Y0">
            <summary>
            Gets the value of the y 0
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.X1">
            <summary>
            Gets the value of the x 1
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.Y1">
            <summary>
            Gets the value of the y 1
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.U0">
            <summary>
            Gets the value of the u 0
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.V0">
            <summary>
            Gets the value of the v 0
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.U1">
            <summary>
            Gets the value of the u 1
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphPtr.V1">
            <summary>
            Gets the value of the v 1
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontGlyphRangesBuilder">
            <summary>
            The im font glyph ranges builder
            </summary>
        </member>
        <member name="F:ImGuiNET.ImFontGlyphRangesBuilder.UsedChars">
            <summary>
            The used chars
            </summary>
        </member>
        <member name="T:ImGuiNET.ImFontGlyphRangesBuilderPtr">
            <summary>
            The im font glyph ranges builder ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphRangesBuilderPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.#ctor(ImGuiNET.ImFontGlyphRangesBuilder*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontGlyphRangesBuilderPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImFontGlyphRangesBuilderPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.op_Implicit(ImGuiNET.ImFontGlyphRangesBuilder*)~ImGuiNET.ImFontGlyphRangesBuilderPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.op_Implicit(ImGuiNET.ImFontGlyphRangesBuilderPtr)~ImGuiNET.ImFontGlyphRangesBuilder*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImFontGlyphRangesBuilderPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImFontGlyphRangesBuilderPtr.UsedChars">
            <summary>
            Gets the value of the used chars
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.AddChar(System.UInt16)">
            <summary>
            Adds the char using the specified c
            </summary>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.AddRanges(System.IntPtr)">
            <summary>
            Adds the ranges using the specified ranges
            </summary>
            <param name="ranges">The ranges</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.AddText(System.String)">
            <summary>
            Adds the text using the specified text
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.BuildRanges(ImGuiNET.ImVector@)">
            <summary>
            Builds the ranges using the specified out ranges
            </summary>
            <param name="out_ranges">The out ranges</param>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.GetBit(System.UInt32)">
            <summary>
            Describes whether this instance get bit
            </summary>
            <param name="n">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImFontGlyphRangesBuilderPtr.SetBit(System.UInt32)">
            <summary>
            Sets the bit using the specified n
            </summary>
            <param name="n">The </param>
        </member>
        <member name="T:ImGuiNET.ImGui">
            <summary>
            The im gui class
            </summary>
            <summary>
            The im gui class
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.AcceptDragDropPayload(System.String)">
            <summary>
            Accepts the drag drop payload using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The im gui payload ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.AcceptDragDropPayload(System.String,ImGuiNET.ImGuiDragDropFlags)">
            <summary>
            Accepts the drag drop payload using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="flags">The flags</param>
            <returns>The im gui payload ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.AlignTextToFramePadding">
            <summary>
            Aligns the text to frame padding
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ArrowButton(System.String,ImGuiNET.ImGuiDir)">
            <summary>
            Describes whether arrow button
            </summary>
            <param name="str_id">The str id</param>
            <param name="dir">The dir</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Begin(System.String)">
            <summary>
            Describes whether begin
            </summary>
            <param name="name">The name</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Begin(System.String,System.Boolean@)">
            <summary>
            Describes whether begin
            </summary>
            <param name="name">The name</param>
            <param name="p_open">The open</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Begin(System.String,System.Boolean@,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin
            </summary>
            <param name="name">The name</param>
            <param name="p_open">The open</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.String)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.String,System.Numerics.Vector2)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.String,System.Numerics.Vector2,System.Boolean)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <param name="border">The border</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.String,System.Numerics.Vector2,System.Boolean,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <param name="border">The border</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.UInt32)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="id">The id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.UInt32,System.Numerics.Vector2)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.UInt32,System.Numerics.Vector2,System.Boolean)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="border">The border</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChild(System.UInt32,System.Numerics.Vector2,System.Boolean,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin child
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="border">The border</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChildFrame(System.UInt32,System.Numerics.Vector2)">
            <summary>
            Describes whether begin child frame
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginChildFrame(System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin child frame
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginCombo(System.String,System.String)">
            <summary>
            Describes whether begin combo
            </summary>
            <param name="label">The label</param>
            <param name="preview_value">The preview value</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginCombo(System.String,System.String,ImGuiNET.ImGuiComboFlags)">
            <summary>
            Describes whether begin combo
            </summary>
            <param name="label">The label</param>
            <param name="preview_value">The preview value</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginDisabled">
            <summary>
            Begins the disabled
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginDisabled(System.Boolean)">
            <summary>
            Begins the disabled using the specified disabled
            </summary>
            <param name="disabled">The disabled</param>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginDragDropSource">
            <summary>
            Describes whether begin drag drop source
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginDragDropSource(ImGuiNET.ImGuiDragDropFlags)">
            <summary>
            Describes whether begin drag drop source
            </summary>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginDragDropTarget">
            <summary>
            Describes whether begin drag drop target
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginGroup">
            <summary>
            Begins the group
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginListBox(System.String)">
            <summary>
            Describes whether begin list box
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginListBox(System.String,System.Numerics.Vector2)">
            <summary>
            Describes whether begin list box
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginMainMenuBar">
            <summary>
            Describes whether begin main menu bar
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginMenu(System.String)">
            <summary>
            Describes whether begin menu
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginMenu(System.String,System.Boolean)">
            <summary>
            Describes whether begin menu
            </summary>
            <param name="label">The label</param>
            <param name="enabled">The enabled</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginMenuBar">
            <summary>
            Describes whether begin menu bar
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopup(System.String)">
            <summary>
            Describes whether begin popup
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopup(System.String,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin popup
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextItem">
            <summary>
            Describes whether begin popup context item
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextItem(System.String)">
            <summary>
            Describes whether begin popup context item
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextItem(System.String,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Describes whether begin popup context item
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextVoid">
            <summary>
            Describes whether begin popup context void
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextVoid(System.String)">
            <summary>
            Describes whether begin popup context void
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextVoid(System.String,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Describes whether begin popup context void
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextWindow">
            <summary>
            Describes whether begin popup context window
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextWindow(System.String)">
            <summary>
            Describes whether begin popup context window
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupContextWindow(System.String,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Describes whether begin popup context window
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupModal(System.String)">
            <summary>
            Describes whether begin popup modal
            </summary>
            <param name="name">The name</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupModal(System.String,System.Boolean@)">
            <summary>
            Describes whether begin popup modal
            </summary>
            <param name="name">The name</param>
            <param name="p_open">The open</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginPopupModal(System.String,System.Boolean@,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin popup modal
            </summary>
            <param name="name">The name</param>
            <param name="p_open">The open</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTabBar(System.String)">
            <summary>
            Describes whether begin tab bar
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTabBar(System.String,ImGuiNET.ImGuiTabBarFlags)">
            <summary>
            Describes whether begin tab bar
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTabItem(System.String)">
            <summary>
            Describes whether begin tab item
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTabItem(System.String,System.Boolean@)">
            <summary>
            Describes whether begin tab item
            </summary>
            <param name="label">The label</param>
            <param name="p_open">The open</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTabItem(System.String,System.Boolean@,ImGuiNET.ImGuiTabItemFlags)">
            <summary>
            Describes whether begin tab item
            </summary>
            <param name="label">The label</param>
            <param name="p_open">The open</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTable(System.String,System.Int32)">
            <summary>
            Describes whether begin table
            </summary>
            <param name="str_id">The str id</param>
            <param name="column">The column</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTable(System.String,System.Int32,ImGuiNET.ImGuiTableFlags)">
            <summary>
            Describes whether begin table
            </summary>
            <param name="str_id">The str id</param>
            <param name="column">The column</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTable(System.String,System.Int32,ImGuiNET.ImGuiTableFlags,System.Numerics.Vector2)">
            <summary>
            Describes whether begin table
            </summary>
            <param name="str_id">The str id</param>
            <param name="column">The column</param>
            <param name="flags">The flags</param>
            <param name="outer_size">The outer size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTable(System.String,System.Int32,ImGuiNET.ImGuiTableFlags,System.Numerics.Vector2,System.Single)">
            <summary>
            Describes whether begin table
            </summary>
            <param name="str_id">The str id</param>
            <param name="column">The column</param>
            <param name="flags">The flags</param>
            <param name="outer_size">The outer size</param>
            <param name="inner_width">The inner width</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.BeginTooltip">
            <summary>
            Describes whether begin tooltip
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Bullet">
            <summary>
            Bullets
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.BulletText(System.String)">
            <summary>
            Bullets the text using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Button(System.String)">
            <summary>
            Describes whether button
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Button(System.String,System.Numerics.Vector2)">
            <summary>
            Describes whether button
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcItemWidth">
            <summary>
            Calcs the item width
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Checkbox(System.String,System.Boolean@)">
            <summary>
            Describes whether checkbox
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CheckboxFlags(System.String,System.Int32@,System.Int32)">
            <summary>
            Describes whether checkbox flags
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="flags_value">The flags value</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CheckboxFlags(System.String,System.UInt32@,System.UInt32)">
            <summary>
            Describes whether checkbox flags
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="flags_value">The flags value</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CloseCurrentPopup">
            <summary>
            Closes the current popup
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.CollapsingHeader(System.String)">
            <summary>
            Describes whether collapsing header
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CollapsingHeader(System.String,ImGuiNET.ImGuiTreeNodeFlags)">
            <summary>
            Describes whether collapsing header
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CollapsingHeader(System.String,System.Boolean@)">
            <summary>
            Describes whether collapsing header
            </summary>
            <param name="label">The label</param>
            <param name="p_visible">The visible</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CollapsingHeader(System.String,System.Boolean@,ImGuiNET.ImGuiTreeNodeFlags)">
            <summary>
            Describes whether collapsing header
            </summary>
            <param name="label">The label</param>
            <param name="p_visible">The visible</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorButton(System.String,System.Numerics.Vector4)">
            <summary>
            Describes whether color button
            </summary>
            <param name="desc_id">The desc id</param>
            <param name="col">The col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorButton(System.String,System.Numerics.Vector4,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Describes whether color button
            </summary>
            <param name="desc_id">The desc id</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorButton(System.String,System.Numerics.Vector4,ImGuiNET.ImGuiColorEditFlags,System.Numerics.Vector2)">
            <summary>
            Describes whether color button
            </summary>
            <param name="desc_id">The desc id</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorConvertFloat4ToU32(System.Numerics.Vector4)">
            <summary>
            
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorConvertHSVtoRGB(System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Colors the convert hs vto rgb using the specified h
            </summary>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <param name="out_r">The out</param>
            <param name="out_g">The out</param>
            <param name="out_b">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorConvertRGBtoHSV(System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Colors the convert rg bto hsv using the specified r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="out_h">The out</param>
            <param name="out_s">The out</param>
            <param name="out_v">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorConvertU32ToFloat4(System.UInt32)">
            <summary>
            /
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorEdit3(System.String,System.Numerics.Vector3@)">
            <summary>
            Describes whether color edit 3
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorEdit3(System.String,System.Numerics.Vector3@,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Describes whether color edit 3
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorEdit4(System.String,System.Numerics.Vector4@)">
            <summary>
            Describes whether color edit 4
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorEdit4(System.String,System.Numerics.Vector4@,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Describes whether color edit 4
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorPicker3(System.String,System.Numerics.Vector3@)">
            <summary>
            Describes whether color picker 3
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorPicker3(System.String,System.Numerics.Vector3@,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Describes whether color picker 3
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorPicker4(System.String,System.Numerics.Vector4@)">
            <summary>
            Describes whether color picker 4
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorPicker4(System.String,System.Numerics.Vector4@,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Describes whether color picker 4
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ColorPicker4(System.String,System.Numerics.Vector4@,ImGuiNET.ImGuiColorEditFlags,System.Single@)">
            <summary>
            Describes whether color picker 4
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="ref_col">The ref col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Columns">
            <summary>
            Columnses
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.Columns(System.Int32)">
            <summary>
            Columnses the count
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Columns(System.Int32,System.String)">
            <summary>
            Columnses the count
            </summary>
            <param name="count">The count</param>
            <param name="id">The id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Columns(System.Int32,System.String,System.Boolean)">
            <summary>
            Columnses the count
            </summary>
            <param name="count">The count</param>
            <param name="id">The id</param>
            <param name="border">The border</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Combo(System.String,System.Int32@,System.String[],System.Int32)">
            <summary>
            Describes whether combo
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items">The items</param>
            <param name="items_count">The items count</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Combo(System.String,System.Int32@,System.String[],System.Int32,System.Int32)">
            <summary>
            Describes whether combo
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items">The items</param>
            <param name="items_count">The items count</param>
            <param name="popup_max_height_in_items">The popup max height in items</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Combo(System.String,System.Int32@,System.String)">
            <summary>
            Describes whether combo
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items_separated_by_zeros">The items separated by zeros</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Combo(System.String,System.Int32@,System.String,System.Int32)">
            <summary>
            Describes whether combo
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items_separated_by_zeros">The items separated by zeros</param>
            <param name="popup_max_height_in_items">The popup max height in items</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CreateContext">
            <summary>
            Creates the context
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CreateContext(ImGuiNET.ImFontAtlasPtr)">
            <summary>
            Creates the context using the specified shared font atlas
            </summary>
            <param name="shared_font_atlas">The shared font atlas</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DebugCheckVersionAndDataLayout(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Describes whether debug check version and data layout
            </summary>
            <param name="version_str">The version str</param>
            <param name="sz_io">The sz io</param>
            <param name="sz_style">The sz style</param>
            <param name="sz_vec2">The sz vec2</param>
            <param name="sz_vec4">The sz vec4</param>
            <param name="sz_drawvert">The sz drawvert</param>
            <param name="sz_drawidx">The sz drawidx</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DebugTextEncoding(System.String)">
            <summary>
            Debugs the text encoding using the specified text
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImGui.DestroyContext">
            <summary>
            Destroys the context
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.DestroyContext(System.IntPtr)">
            <summary>
            Destroys the context using the specified ctx
            </summary>
            <param name="ctx">The ctx</param>
        </member>
        <member name="M:ImGuiNET.ImGui.DestroyPlatformWindows">
            <summary>
            Destroys the platform windows
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpace(System.UInt32)">
            <summary>
            Docks the space using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpace(System.UInt32,System.Numerics.Vector2)">
            <summary>
            Docks the space using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpace(System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiDockNodeFlags)">
            <summary>
            Docks the space using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpace(System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiDockNodeFlags,ImGuiNET.ImGuiWindowClassPtr)">
            <summary>
            Docks the space using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <param name="window_class">The window class</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpaceOverViewport">
            <summary>
            Docks the space over viewport
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpaceOverViewport(ImGuiNET.ImGuiViewportPtr)">
            <summary>
            Docks the space over viewport using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpaceOverViewport(ImGuiNET.ImGuiViewportPtr,ImGuiNET.ImGuiDockNodeFlags)">
            <summary>
            Docks the space over viewport using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <param name="flags">The flags</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DockSpaceOverViewport(ImGuiNET.ImGuiViewportPtr,ImGuiNET.ImGuiDockNodeFlags,ImGuiNET.ImGuiWindowClassPtr)">
            <summary>
            Docks the space over viewport using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <param name="flags">The flags</param>
            <param name="window_class">The window class</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat(System.String,System.Single@)">
            <summary>
            Describes whether drag float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat(System.String,System.Single@,System.Single)">
            <summary>
            Describes whether drag float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat(System.String,System.Single@,System.Single,System.Single)">
            <summary>
            Describes whether drag float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat(System.String,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            Describes whether drag float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat(System.String,System.Single@,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Describes whether drag float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat(System.String,System.Single@,System.Single,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat2(System.String,System.Numerics.Vector2@)">
            <summary>
            Describes whether drag float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat2(System.String,System.Numerics.Vector2@,System.Single)">
            <summary>
            Describes whether drag float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single)">
            <summary>
            Describes whether drag float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single,System.Single)">
            <summary>
            Describes whether drag float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Describes whether drag float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat3(System.String,System.Numerics.Vector3@)">
            <summary>
            Describes whether drag float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat3(System.String,System.Numerics.Vector3@,System.Single)">
            <summary>
            Describes whether drag float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single)">
            <summary>
            Describes whether drag float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single,System.Single)">
            <summary>
            Describes whether drag float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Describes whether drag float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat4(System.String,System.Numerics.Vector4@)">
            <summary>
            Describes whether drag float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat4(System.String,System.Numerics.Vector4@,System.Single)">
            <summary>
            Describes whether drag float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single)">
            <summary>
            Describes whether drag float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single,System.Single)">
            <summary>
            Describes whether drag float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Describes whether drag float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single,System.Single)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="format_max">The format max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single,System.Single,System.Single,System.String,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag float range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="format_max">The format max</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt(System.String,System.Int32@)">
            <summary>
            Describes whether drag int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt(System.String,System.Int32@,System.Single)">
            <summary>
            Describes whether drag int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt(System.String,System.Int32@,System.Single,System.Int32)">
            <summary>
            Describes whether drag int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt(System.String,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            Describes whether drag int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether drag int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt2(System.String,System.Int32@)">
            <summary>
            Describes whether drag int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt2(System.String,System.Int32@,System.Single)">
            <summary>
            Describes whether drag int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt2(System.String,System.Int32@,System.Single,System.Int32)">
            <summary>
            Describes whether drag int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt2(System.String,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            Describes whether drag int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt2(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether drag int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt2(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt3(System.String,System.Int32@)">
            <summary>
            Describes whether drag int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt3(System.String,System.Int32@,System.Single)">
            <summary>
            Describes whether drag int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt3(System.String,System.Int32@,System.Single,System.Int32)">
            <summary>
            Describes whether drag int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt3(System.String,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            Describes whether drag int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt3(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether drag int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt3(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt4(System.String,System.Int32@)">
            <summary>
            Describes whether drag int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt4(System.String,System.Int32@,System.Single)">
            <summary>
            Describes whether drag int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt4(System.String,System.Int32@,System.Single,System.Int32)">
            <summary>
            Describes whether drag int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt4(System.String,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            Describes whether drag int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt4(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether drag int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragInt4(System.String,System.Int32@,System.Single,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single,System.Int32)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="format_max">The format max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single,System.Int32,System.Int32,System.String,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag int range 2
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="format_max">The format max</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr)">
            <summary>
            Describes whether drag scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Single)">
            <summary>
            Describes whether drag scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Single,System.IntPtr)">
            <summary>
            Describes whether drag scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Single,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether drag scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Single,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether drag scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Single,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32)">
            <summary>
            Describes whether drag scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.Single)">
            <summary>
            Describes whether drag scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="v_speed">The speed</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.Single,System.IntPtr)">
            <summary>
            Describes whether drag scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.Single,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether drag scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.Single,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether drag scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.DragScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.Single,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether drag scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Dummy(System.Numerics.Vector2)">
            <summary>
            Dummies the size
            </summary>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.End">
            <summary>
            Ends
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndChild">
            <summary>
            Ends the child
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndChildFrame">
            <summary>
            Ends the child frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndCombo">
            <summary>
            Ends the combo
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndDisabled">
            <summary>
            Ends the disabled
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndDragDropSource">
            <summary>
            Ends the drag drop source
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndDragDropTarget">
            <summary>
            Ends the drag drop target
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndFrame">
            <summary>
            Ends the frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndGroup">
            <summary>
            Ends the group
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndListBox">
            <summary>
            Ends the list box
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndMainMenuBar">
            <summary>
            Ends the main menu bar
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndMenu">
            <summary>
            Ends the menu
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndMenuBar">
            <summary>
            Ends the menu bar
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndPopup">
            <summary>
            Ends the popup
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndTabBar">
            <summary>
            Ends the tab bar
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndTabItem">
            <summary>
            Ends the tab item
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndTable">
            <summary>
            Ends the table
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.EndTooltip">
            <summary>
            Ends the tooltip
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.FindViewportByID(System.UInt32)">
            <summary>
            Finds the viewport by id using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The im gui viewport ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.FindViewportByPlatformHandle(System.IntPtr)">
            <summary>
            Finds the viewport by platform handle using the specified platform handle
            </summary>
            <param name="platform_handle">The platform handle</param>
            <returns>The im gui viewport ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetAllocatorFunctions(System.IntPtr@,System.IntPtr@,System.Void*@)">
            <summary>
            Gets the allocator functions using the specified p alloc func
            </summary>
            <param name="p_alloc_func">The alloc func</param>
            <param name="p_free_func">The free func</param>
            <param name="p_user_data">The user data</param>
        </member>
        <member name="M:ImGuiNET.ImGui.GetBackgroundDrawList">
            <summary>
            Gets the background draw list
            </summary>
            <returns>The im draw list ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetBackgroundDrawList(ImGuiNET.ImGuiViewportPtr)">
            <summary>
            Gets the background draw list using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <returns>The im draw list ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetClipboardText">
            <summary>
            Gets the clipboard text
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColorU32(ImGuiNET.ImGuiCol)">
            <summary>
            Gets the color u 32 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColorU32(ImGuiNET.ImGuiCol,System.Single)">
            <summary>
            Gets the color u 32 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="alpha_mul">The alpha mul</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColorU32(System.Numerics.Vector4)">
            <summary>
            Gets the color u 32 using the specified col
            </summary>
            <param name="col">The col</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColorU32(System.UInt32)">
            <summary>
            Gets the color u 32 using the specified col
            </summary>
            <param name="col">The col</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColumnIndex">
            <summary>
            Gets the column index
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColumnOffset">
            <summary>
            Gets the column offset
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColumnOffset(System.Int32)">
            <summary>
            Gets the column offset using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColumnsCount">
            <summary>
            Gets the columns count
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColumnWidth">
            <summary>
            Gets the column width
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetColumnWidth(System.Int32)">
            <summary>
            Gets the column width using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetContentRegionAvail">
            <summary>
            Gets the content region avail
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetContentRegionMax">
            <summary>
            Gets the content region max
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetCurrentContext">
            <summary>
            Gets the current context
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetCursorPos">
            <summary>
            Gets the cursor pos
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetCursorPosX">
            <summary>
            Gets the cursor pos x
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetCursorPosY">
            <summary>
            Gets the cursor pos y
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetCursorScreenPos">
            <summary>
            Gets the cursor screen pos
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetCursorStartPos">
            <summary>
            Gets the cursor start pos
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetDragDropPayload">
            <summary>
            Gets the drag drop payload
            </summary>
            <returns>The im gui payload ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetDrawData">
            <summary>
            Gets the draw data
            </summary>
            <returns>The im draw data ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetDrawListSharedData">
            <summary>
            Gets the draw list shared data
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetFont">
            <summary>
            Gets the font
            </summary>
            <returns>The im font ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetFontSize">
            <summary>
            Gets the font size
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetFontTexUvWhitePixel">
            <summary>
            Gets the font tex uv white pixel
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetForegroundDrawList">
            <summary>
            Gets the foreground draw list
            </summary>
            <returns>The im draw list ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetForegroundDrawList(ImGuiNET.ImGuiViewportPtr)">
            <summary>
            Gets the foreground draw list using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <returns>The im draw list ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetFrameCount">
            <summary>
            Gets the frame count
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetFrameHeight">
            <summary>
            Gets the frame height
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetFrameHeightWithSpacing">
            <summary>
            Gets the frame height with spacing
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetID(System.String)">
            <summary>
            Gets the id using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetID(System.IntPtr)">
            <summary>
            Gets the id using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetIO">
            <summary>
            Gets the io
            </summary>
            <returns>The im gui io ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetItemID">
            <summary>
            Gets the item id
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetItemRectMax">
            <summary>
            Gets the item rect max
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetItemRectMin">
            <summary>
            Gets the item rect min
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetItemRectSize">
            <summary>
            Gets the item rect size
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetKeyIndex(ImGuiNET.ImGuiKey)">
            <summary>
            Gets the key index using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetKeyName(ImGuiNET.ImGuiKey)">
            <summary>
            Gets the key name using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetKeyPressedAmount(ImGuiNET.ImGuiKey,System.Single,System.Single)">
            <summary>
            Gets the key pressed amount using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="repeat_delay">The repeat delay</param>
            <param name="rate">The rate</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMainViewport">
            <summary>
            Gets the main viewport
            </summary>
            <returns>The im gui viewport ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMouseClickedCount(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Gets the mouse clicked count using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMouseCursor">
            <summary>
            Gets the mouse cursor
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMouseDragDelta">
            <summary>
            Gets the mouse drag delta
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMouseDragDelta(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Gets the mouse drag delta using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMouseDragDelta(ImGuiNET.ImGuiMouseButton,System.Single)">
            <summary>
            Gets the mouse drag delta using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="lock_threshold">The lock threshold</param>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMousePos">
            <summary>
            Gets the mouse pos
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetMousePosOnOpeningCurrentPopup">
            <summary>
            Gets the mouse pos on opening current popup
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetPlatformIO">
            <summary>
            Gets the platform io
            </summary>
            <returns>The im gui platform io ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetScrollMaxX">
            <summary>
            Gets the scroll max x
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetScrollMaxY">
            <summary>
            Gets the scroll max y
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetScrollX">
            <summary>
            Gets the scroll x
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetScrollY">
            <summary>
            Gets the scroll y
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetStateStorage">
            <summary>
            Gets the state storage
            </summary>
            <returns>The im gui storage ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetStyle">
            <summary>
            Gets the style
            </summary>
            <returns>The im gui style ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetStyleColorName(ImGuiNET.ImGuiCol)">
            <summary>
            Gets the style color name using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetStyleColorVec4(ImGuiNET.ImGuiCol)">
            <summary>
            Gets the style color vec 4 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetTextLineHeight">
            <summary>
            Gets the text line height
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetTextLineHeightWithSpacing">
            <summary>
            Gets the text line height with spacing
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetTime">
            <summary>
            Gets the time
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetTreeNodeToLabelSpacing">
            <summary>
            Gets the tree node to label spacing
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetVersion">
            <summary>
            Gets the version
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowContentRegionMax">
            <summary>
            Gets the window content region max
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowContentRegionMin">
            <summary>
            Gets the window content region min
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowDockID">
            <summary>
            Gets the window dock id
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowDpiScale">
            <summary>
            Gets the window dpi scale
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowDrawList">
            <summary>
            Gets the window draw list
            </summary>
            <returns>The im draw list ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowHeight">
            <summary>
            Gets the window height
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowPos">
            <summary>
            Gets the window pos
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowSize">
            <summary>
            Gets the window size
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowViewport">
            <summary>
            Gets the window viewport
            </summary>
            <returns>The im gui viewport ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.GetWindowWidth">
            <summary>
            Gets the window width
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Image(System.IntPtr,System.Numerics.Vector2)">
            <summary>
            Images the user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Image(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Images the user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Image(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Images the user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Image(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector4)">
            <summary>
            Images the user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <param name="tint_col">The tint col</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Image(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector4,System.Numerics.Vector4)">
            <summary>
            Images the user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <param name="tint_col">The tint col</param>
            <param name="border_col">The border col</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ImageButton(System.String,System.IntPtr,System.Numerics.Vector2)">
            <summary>
            Describes whether image button
            </summary>
            <param name="str_id">The str id</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ImageButton(System.String,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Describes whether image button
            </summary>
            <param name="str_id">The str id</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ImageButton(System.String,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Describes whether image button
            </summary>
            <param name="str_id">The str id</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ImageButton(System.String,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector4)">
            <summary>
            Describes whether image button
            </summary>
            <param name="str_id">The str id</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <param name="bg_col">The bg col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ImageButton(System.String,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector4,System.Numerics.Vector4)">
            <summary>
            Describes whether image button
            </summary>
            <param name="str_id">The str id</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <param name="bg_col">The bg col</param>
            <param name="tint_col">The tint col</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Indent">
            <summary>
            Indents
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.Indent(System.Single)">
            <summary>
            Indents the indent w
            </summary>
            <param name="indent_w">The indent</param>
        </member>
        <member name="M:ImGuiNET.ImGui.InputDouble(System.String,System.Double@)">
            <summary>
            Describes whether input double
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputDouble(System.String,System.Double@,System.Double)">
            <summary>
            Describes whether input double
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputDouble(System.String,System.Double@,System.Double,System.Double)">
            <summary>
            Describes whether input double
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputDouble(System.String,System.Double@,System.Double,System.Double,System.String)">
            <summary>
            Describes whether input double
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputDouble(System.String,System.Double@,System.Double,System.Double,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input double
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat(System.String,System.Single@)">
            <summary>
            Describes whether input float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat(System.String,System.Single@,System.Single)">
            <summary>
            Describes whether input float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat(System.String,System.Single@,System.Single,System.Single)">
            <summary>
            Describes whether input float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat(System.String,System.Single@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether input float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat(System.String,System.Single@,System.Single,System.Single,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat2(System.String,System.Numerics.Vector2@)">
            <summary>
            Describes whether input float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat2(System.String,System.Numerics.Vector2@,System.String)">
            <summary>
            Describes whether input float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat2(System.String,System.Numerics.Vector2@,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat3(System.String,System.Numerics.Vector3@)">
            <summary>
            Describes whether input float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat3(System.String,System.Numerics.Vector3@,System.String)">
            <summary>
            Describes whether input float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat3(System.String,System.Numerics.Vector3@,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat4(System.String,System.Numerics.Vector4@)">
            <summary>
            Describes whether input float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat4(System.String,System.Numerics.Vector4@,System.String)">
            <summary>
            Describes whether input float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputFloat4(System.String,System.Numerics.Vector4@,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt(System.String,System.Int32@)">
            <summary>
            Describes whether input int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt(System.String,System.Int32@,System.Int32)">
            <summary>
            Describes whether input int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt(System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Describes whether input int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt(System.String,System.Int32@,System.Int32,System.Int32,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt2(System.String,System.Int32@)">
            <summary>
            Describes whether input int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt2(System.String,System.Int32@,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt3(System.String,System.Int32@)">
            <summary>
            Describes whether input int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt3(System.String,System.Int32@,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt4(System.String,System.Int32@)">
            <summary>
            Describes whether input int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputInt4(System.String,System.Int32@,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr)">
            <summary>
            Describes whether input scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether input scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_step">The step</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether input scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether input scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32)">
            <summary>
            Describes whether input scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Describes whether input scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_step">The step</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether input scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether input scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InvisibleButton(System.String,System.Numerics.Vector2)">
            <summary>
            Describes whether invisible button
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InvisibleButton(System.String,System.Numerics.Vector2,ImGuiNET.ImGuiButtonFlags)">
            <summary>
            Describes whether invisible button
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsAnyItemActive">
            <summary>
            Describes whether is any item active
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsAnyItemFocused">
            <summary>
            Describes whether is any item focused
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsAnyItemHovered">
            <summary>
            Describes whether is any item hovered
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsAnyMouseDown">
            <summary>
            Describes whether is any mouse down
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemActivated">
            <summary>
            Describes whether is item activated
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemActive">
            <summary>
            Describes whether is item active
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemClicked">
            <summary>
            Describes whether is item clicked
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemClicked(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Describes whether is item clicked
            </summary>
            <param name="mouse_button">The mouse button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemDeactivated">
            <summary>
            Describes whether is item deactivated
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemDeactivatedAfterEdit">
            <summary>
            Describes whether is item deactivated after edit
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemEdited">
            <summary>
            Describes whether is item edited
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemFocused">
            <summary>
            Describes whether is item focused
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemHovered">
            <summary>
            Describes whether is item hovered
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemHovered(ImGuiNET.ImGuiHoveredFlags)">
            <summary>
            Describes whether is item hovered
            </summary>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemToggledOpen">
            <summary>
            Describes whether is item toggled open
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsItemVisible">
            <summary>
            Describes whether is item visible
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsKeyDown(ImGuiNET.ImGuiKey)">
            <summary>
            Describes whether is key down
            </summary>
            <param name="key">The key</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsKeyPressed(ImGuiNET.ImGuiKey)">
            <summary>
            Describes whether is key pressed
            </summary>
            <param name="key">The key</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsKeyPressed(ImGuiNET.ImGuiKey,System.Boolean)">
            <summary>
            Describes whether is key pressed
            </summary>
            <param name="key">The key</param>
            <param name="repeat">The repeat</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsKeyReleased(ImGuiNET.ImGuiKey)">
            <summary>
            Describes whether is key released
            </summary>
            <param name="key">The key</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseClicked(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Describes whether is mouse clicked
            </summary>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseClicked(ImGuiNET.ImGuiMouseButton,System.Boolean)">
            <summary>
            Describes whether is mouse clicked
            </summary>
            <param name="button">The button</param>
            <param name="repeat">The repeat</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseDoubleClicked(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Describes whether is mouse double clicked
            </summary>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseDown(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Describes whether is mouse down
            </summary>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseDragging(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Describes whether is mouse dragging
            </summary>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseDragging(ImGuiNET.ImGuiMouseButton,System.Single)">
            <summary>
            Describes whether is mouse dragging
            </summary>
            <param name="button">The button</param>
            <param name="lock_threshold">The lock threshold</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseHoveringRect(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Describes whether is mouse hovering rect
            </summary>
            <param name="r_min">The min</param>
            <param name="r_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseHoveringRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)">
            <summary>
            Describes whether is mouse hovering rect
            </summary>
            <param name="r_min">The min</param>
            <param name="r_max">The max</param>
            <param name="clip">The clip</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMousePosValid">
            <summary>
            Describes whether is mouse pos valid
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMousePosValid(System.Numerics.Vector2@)">
            <summary>
            Describes whether is mouse pos valid
            </summary>
            <param name="mouse_pos">The mouse pos</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsMouseReleased(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Describes whether is mouse released
            </summary>
            <param name="button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsPopupOpen(System.String)">
            <summary>
            Describes whether is popup open
            </summary>
            <param name="str_id">The str id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsPopupOpen(System.String,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Describes whether is popup open
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsRectVisible(System.Numerics.Vector2)">
            <summary>
            Describes whether is rect visible
            </summary>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsRectVisible(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Describes whether is rect visible
            </summary>
            <param name="rect_min">The rect min</param>
            <param name="rect_max">The rect max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowAppearing">
            <summary>
            Describes whether is window appearing
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowCollapsed">
            <summary>
            Describes whether is window collapsed
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowDocked">
            <summary>
            Describes whether is window docked
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowFocused">
            <summary>
            Describes whether is window focused
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowFocused(ImGuiNET.ImGuiFocusedFlags)">
            <summary>
            Describes whether is window focused
            </summary>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowHovered">
            <summary>
            Describes whether is window hovered
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.IsWindowHovered(ImGuiNET.ImGuiHoveredFlags)">
            <summary>
            Describes whether is window hovered
            </summary>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.LabelText(System.String,System.String)">
            <summary>
            Labels the text using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ListBox(System.String,System.Int32@,System.String[],System.Int32)">
            <summary>
            Describes whether list box
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items">The items</param>
            <param name="items_count">The items count</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ListBox(System.String,System.Int32@,System.String[],System.Int32,System.Int32)">
            <summary>
            Describes whether list box
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items">The items</param>
            <param name="items_count">The items count</param>
            <param name="height_in_items">The height in items</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.LoadIniSettingsFromDisk(System.String)">
            <summary>
            Loads the ini settings from disk using the specified ini filename
            </summary>
            <param name="ini_filename">The ini filename</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LoadIniSettingsFromMemory(System.String)">
            <summary>
            Loads the ini settings from memory using the specified ini data
            </summary>
            <param name="ini_data">The ini data</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LoadIniSettingsFromMemory(System.String,System.UInt32)">
            <summary>
            Loads the ini settings from memory using the specified ini data
            </summary>
            <param name="ini_data">The ini data</param>
            <param name="ini_size">The ini size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LogButtons">
            <summary>
            Logs the buttons
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.LogFinish">
            <summary>
            Logs the finish
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.LogText(System.String)">
            <summary>
            Logs the text using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToClipboard">
            <summary>
            Logs the to clipboard
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToClipboard(System.Int32)">
            <summary>
            Logs the to clipboard using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToFile">
            <summary>
            Logs the to file
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToFile(System.Int32)">
            <summary>
            Logs the to file using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToFile(System.Int32,System.String)">
            <summary>
            Logs the to file using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
            <param name="filename">The filename</param>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToTTY">
            <summary>
            Logs the to tty
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.LogToTTY(System.Int32)">
            <summary>
            Logs the to tty using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
        </member>
        <member name="M:ImGuiNET.ImGui.MemAlloc(System.UInt32)">
            <summary>
            Mems the alloc using the specified size
            </summary>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MemFree(System.IntPtr)">
            <summary>
            Mems the free using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String,System.String)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String,System.String,System.Boolean)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <param name="selected">The selected</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <param name="selected">The selected</param>
            <param name="enabled">The enabled</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String,System.String,System.Boolean@)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <param name="p_selected">The selected</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String,System.String,System.Boolean@,System.Boolean)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <param name="p_selected">The selected</param>
            <param name="enabled">The enabled</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.NewFrame">
            <summary>
            News the frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.NewLine">
            <summary>
            News the line
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.NextColumn">
            <summary>
            Nexts the column
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopup(System.String)">
            <summary>
            Opens the popup using the specified str id
            </summary>
            <param name="str_id">The str id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopup(System.String,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Opens the popup using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopup(System.UInt32)">
            <summary>
            Opens the popup using the specified id
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopup(System.UInt32,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Opens the popup using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="popup_flags">The popup flags</param>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopupOnItemClick">
            <summary>
            Opens the popup on item click
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopupOnItemClick(System.String)">
            <summary>
            Opens the popup on item click using the specified str id
            </summary>
            <param name="str_id">The str id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.OpenPopupOnItemClick(System.String,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Opens the popup on item click using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32,System.Int32)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32,System.Int32,System.String)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single,System.Single)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single,System.Single,System.Numerics.Vector2)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
            <param name="graph_size">The graph size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotHistogram(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single,System.Single,System.Numerics.Vector2,System.Int32)">
            <summary>
            Plots the histogram using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
            <param name="graph_size">The graph size</param>
            <param name="stride">The stride</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32,System.Int32)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32,System.Int32,System.String)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single,System.Single)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single,System.Single,System.Numerics.Vector2)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
            <param name="graph_size">The graph size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PlotLines(System.String,System.Single@,System.Int32,System.Int32,System.String,System.Single,System.Single,System.Numerics.Vector2,System.Int32)">
            <summary>
            Plots the lines using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
            <param name="graph_size">The graph size</param>
            <param name="stride">The stride</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PopButtonRepeat">
            <summary>
            Pops the button repeat
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopClipRect">
            <summary>
            Pops the clip rect
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopFont">
            <summary>
            Pops the font
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopID">
            <summary>
            Pops the id
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopItemWidth">
            <summary>
            Pops the item width
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopStyleColor">
            <summary>
            Pops the style color
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopStyleColor(System.Int32)">
            <summary>
            Pops the style color using the specified count
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PopStyleVar">
            <summary>
            Pops the style var
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopStyleVar(System.Int32)">
            <summary>
            Pops the style var using the specified count
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PopTabStop">
            <summary>
            Pops the tab stop
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PopTextWrapPos">
            <summary>
            Pops the text wrap pos
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ProgressBar(System.Single)">
            <summary>
            Progresses the bar using the specified fraction
            </summary>
            <param name="fraction">The fraction</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ProgressBar(System.Single,System.Numerics.Vector2)">
            <summary>
            Progresses the bar using the specified fraction
            </summary>
            <param name="fraction">The fraction</param>
            <param name="size_arg">The size arg</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ProgressBar(System.Single,System.Numerics.Vector2,System.String)">
            <summary>
            Progresses the bar using the specified fraction
            </summary>
            <param name="fraction">The fraction</param>
            <param name="size_arg">The size arg</param>
            <param name="overlay">The overlay</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushButtonRepeat(System.Boolean)">
            <summary>
            Pushes the button repeat using the specified repeat
            </summary>
            <param name="repeat">The repeat</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushClipRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)">
            <summary>
            Pushes the clip rect using the specified clip rect min
            </summary>
            <param name="clip_rect_min">The clip rect min</param>
            <param name="clip_rect_max">The clip rect max</param>
            <param name="intersect_with_current_clip_rect">The intersect with current clip rect</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushFont(ImGuiNET.ImFontPtr)">
            <summary>
            Pushes the font using the specified font
            </summary>
            <param name="font">The font</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushID(System.String)">
            <summary>
            Pushes the id using the specified str id
            </summary>
            <param name="str_id">The str id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushID(System.IntPtr)">
            <summary>
            Pushes the id using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushID(System.Int32)">
            <summary>
            Pushes the id using the specified int id
            </summary>
            <param name="int_id">The int id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushItemWidth(System.Single)">
            <summary>
            Pushes the item width using the specified item width
            </summary>
            <param name="item_width">The item width</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushStyleColor(ImGuiNET.ImGuiCol,System.UInt32)">
            <summary>
            Pushes the style color using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushStyleColor(ImGuiNET.ImGuiCol,System.Numerics.Vector4)">
            <summary>
            Pushes the style color using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushStyleVar(ImGuiNET.ImGuiStyleVar,System.Single)">
            <summary>
            Pushes the style var using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushStyleVar(ImGuiNET.ImGuiStyleVar,System.Numerics.Vector2)">
            <summary>
            Pushes the style var using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushTabStop(System.Boolean)">
            <summary>
            Pushes the tab stop using the specified tab stop
            </summary>
            <param name="tab_stop">The tab stop</param>
        </member>
        <member name="M:ImGuiNET.ImGui.PushTextWrapPos">
            <summary>
            Pushes the text wrap pos
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.PushTextWrapPos(System.Single)">
            <summary>
            Pushes the text wrap pos using the specified wrap local pos x
            </summary>
            <param name="wrap_local_pos_x">The wrap local pos</param>
        </member>
        <member name="M:ImGuiNET.ImGui.RadioButton(System.String,System.Boolean)">
            <summary>
            Describes whether radio button
            </summary>
            <param name="label">The label</param>
            <param name="active">The active</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.RadioButton(System.String,System.Int32@,System.Int32)">
            <summary>
            Describes whether radio button
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_button">The button</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Render">
            <summary>
            Renders
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.RenderPlatformWindowsDefault">
            <summary>
            Renders the platform windows default
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.RenderPlatformWindowsDefault(System.IntPtr)">
            <summary>
            Renders the platform windows default using the specified platform render arg
            </summary>
            <param name="platform_render_arg">The platform render arg</param>
        </member>
        <member name="M:ImGuiNET.ImGui.RenderPlatformWindowsDefault(System.IntPtr,System.IntPtr)">
            <summary>
            Renders the platform windows default using the specified platform render arg
            </summary>
            <param name="platform_render_arg">The platform render arg</param>
            <param name="renderer_render_arg">The renderer render arg</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ResetMouseDragDelta">
            <summary>
            Resets the mouse drag delta
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ResetMouseDragDelta(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Resets the mouse drag delta using the specified button
            </summary>
            <param name="button">The button</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SameLine">
            <summary>
            Sames the line
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SameLine(System.Single)">
            <summary>
            Sames the line using the specified offset from start x
            </summary>
            <param name="offset_from_start_x">The offset from start</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SameLine(System.Single,System.Single)">
            <summary>
            Sames the line using the specified offset from start x
            </summary>
            <param name="offset_from_start_x">The offset from start</param>
            <param name="spacing">The spacing</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SaveIniSettingsToDisk(System.String)">
            <summary>
            Saves the ini settings to disk using the specified ini filename
            </summary>
            <param name="ini_filename">The ini filename</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SaveIniSettingsToMemory">
            <summary>
            Saves the ini settings to memory
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SaveIniSettingsToMemory(System.UInt32@)">
            <summary>
            Saves the ini settings to memory using the specified out ini size
            </summary>
            <param name="out_ini_size">The out ini size</param>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String,System.Boolean)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <param name="selected">The selected</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String,System.Boolean,ImGuiNET.ImGuiSelectableFlags)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <param name="selected">The selected</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String,System.Boolean,ImGuiNET.ImGuiSelectableFlags,System.Numerics.Vector2)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <param name="selected">The selected</param>
            <param name="flags">The flags</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String,System.Boolean@)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <param name="p_selected">The selected</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String,System.Boolean@,ImGuiNET.ImGuiSelectableFlags)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <param name="p_selected">The selected</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Selectable(System.String,System.Boolean@,ImGuiNET.ImGuiSelectableFlags,System.Numerics.Vector2)">
            <summary>
            Describes whether selectable
            </summary>
            <param name="label">The label</param>
            <param name="p_selected">The selected</param>
            <param name="flags">The flags</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Separator">
            <summary>
            Separators
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SeparatorText(System.String)">
            <summary>
            Separators the text using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetAllocatorFunctions(System.IntPtr,System.IntPtr)">
            <summary>
            Sets the allocator functions using the specified alloc func
            </summary>
            <param name="alloc_func">The alloc func</param>
            <param name="free_func">The free func</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetAllocatorFunctions(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sets the allocator functions using the specified alloc func
            </summary>
            <param name="alloc_func">The alloc func</param>
            <param name="free_func">The free func</param>
            <param name="user_data">The user data</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetClipboardText(System.String)">
            <summary>
            Sets the clipboard text using the specified text
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetColorEditOptions(ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Sets the color edit options using the specified flags
            </summary>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetColumnOffset(System.Int32,System.Single)">
            <summary>
            Sets the column offset using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <param name="offset_x">The offset</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetColumnWidth(System.Int32,System.Single)">
            <summary>
            Sets the column width using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <param name="width">The width</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetCurrentContext(System.IntPtr)">
            <summary>
            Sets the current context using the specified ctx
            </summary>
            <param name="ctx">The ctx</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetCursorPos(System.Numerics.Vector2)">
            <summary>
            Sets the cursor pos using the specified local pos
            </summary>
            <param name="local_pos">The local pos</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetCursorPosX(System.Single)">
            <summary>
            Sets the cursor pos x using the specified local x
            </summary>
            <param name="local_x">The local</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetCursorPosY(System.Single)">
            <summary>
            Sets the cursor pos y using the specified local y
            </summary>
            <param name="local_y">The local</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetCursorScreenPos(System.Numerics.Vector2)">
            <summary>
            Sets the cursor screen pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetDragDropPayload(System.String,System.IntPtr,System.UInt32)">
            <summary>
            Describes whether set drag drop payload
            </summary>
            <param name="type">The type</param>
            <param name="data">The data</param>
            <param name="sz">The sz</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SetDragDropPayload(System.String,System.IntPtr,System.UInt32,ImGuiNET.ImGuiCond)">
            <summary>
            Describes whether set drag drop payload
            </summary>
            <param name="type">The type</param>
            <param name="data">The data</param>
            <param name="sz">The sz</param>
            <param name="cond">The cond</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SetItemAllowOverlap">
            <summary>
            Sets the item allow overlap
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetItemDefaultFocus">
            <summary>
            Sets the item default focus
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetKeyboardFocusHere">
            <summary>
            Sets the keyboard focus here
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetKeyboardFocusHere(System.Int32)">
            <summary>
            Sets the keyboard focus here using the specified offset
            </summary>
            <param name="offset">The offset</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetMouseCursor(ImGuiNET.ImGuiMouseCursor)">
            <summary>
            Sets the mouse cursor using the specified cursor type
            </summary>
            <param name="cursor_type">The cursor type</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextFrameWantCaptureKeyboard(System.Boolean)">
            <summary>
            Sets the next frame want capture keyboard using the specified want capture keyboard
            </summary>
            <param name="want_capture_keyboard">The want capture keyboard</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextFrameWantCaptureMouse(System.Boolean)">
            <summary>
            Sets the next frame want capture mouse using the specified want capture mouse
            </summary>
            <param name="want_capture_mouse">The want capture mouse</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextItemOpen(System.Boolean)">
            <summary>
            Sets the next item open using the specified is open
            </summary>
            <param name="is_open">The is open</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextItemOpen(System.Boolean,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the next item open using the specified is open
            </summary>
            <param name="is_open">The is open</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextItemWidth(System.Single)">
            <summary>
            Sets the next item width using the specified item width
            </summary>
            <param name="item_width">The item width</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowBgAlpha(System.Single)">
            <summary>
            Sets the next window bg alpha using the specified alpha
            </summary>
            <param name="alpha">The alpha</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowClass(ImGuiNET.ImGuiWindowClassPtr)">
            <summary>
            Sets the next window using the specified window class
            </summary>
            <param name="window_class">The window class</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowCollapsed(System.Boolean)">
            <summary>
            Sets the next window collapsed using the specified collapsed
            </summary>
            <param name="collapsed">The collapsed</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowCollapsed(System.Boolean,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the next window collapsed using the specified collapsed
            </summary>
            <param name="collapsed">The collapsed</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowContentSize(System.Numerics.Vector2)">
            <summary>
            Sets the next window content size using the specified size
            </summary>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowDockID(System.UInt32)">
            <summary>
            Sets the next window dock id using the specified dock id
            </summary>
            <param name="dock_id">The dock id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowDockID(System.UInt32,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the next window dock id using the specified dock id
            </summary>
            <param name="dock_id">The dock id</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowFocus">
            <summary>
            Sets the next window focus
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowPos(System.Numerics.Vector2)">
            <summary>
            Sets the next window pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowPos(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the next window pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowPos(System.Numerics.Vector2,ImGuiNET.ImGuiCond,System.Numerics.Vector2)">
            <summary>
            Sets the next window pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
            <param name="pivot">The pivot</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowScroll(System.Numerics.Vector2)">
            <summary>
            Sets the next window scroll using the specified scroll
            </summary>
            <param name="scroll">The scroll</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowSize(System.Numerics.Vector2)">
            <summary>
            Sets the next window size using the specified size
            </summary>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowSize(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the next window size using the specified size
            </summary>
            <param name="size">The size</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowSizeConstraints(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Sets the next window size constraints using the specified size min
            </summary>
            <param name="size_min">The size min</param>
            <param name="size_max">The size max</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowSizeConstraints(System.Numerics.Vector2,System.Numerics.Vector2,ImGuiNET.ImGuiSizeCallback)">
            <summary>
            Sets the next window size constraints using the specified size min
            </summary>
            <param name="size_min">The size min</param>
            <param name="size_max">The size max</param>
            <param name="custom_callback">The custom callback</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowSizeConstraints(System.Numerics.Vector2,System.Numerics.Vector2,ImGuiNET.ImGuiSizeCallback,System.IntPtr)">
            <summary>
            Sets the next window size constraints using the specified size min
            </summary>
            <param name="size_min">The size min</param>
            <param name="size_max">The size max</param>
            <param name="custom_callback">The custom callback</param>
            <param name="custom_callback_data">The custom callback data</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetNextWindowViewport(System.UInt32)">
            <summary>
            Sets the next window viewport using the specified viewport id
            </summary>
            <param name="viewport_id">The viewport id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollFromPosX(System.Single)">
            <summary>
            Sets the scroll from pos x using the specified local x
            </summary>
            <param name="local_x">The local</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollFromPosX(System.Single,System.Single)">
            <summary>
            Sets the scroll from pos x using the specified local x
            </summary>
            <param name="local_x">The local</param>
            <param name="center_x_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollFromPosY(System.Single)">
            <summary>
            Sets the scroll from pos y using the specified local y
            </summary>
            <param name="local_y">The local</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollFromPosY(System.Single,System.Single)">
            <summary>
            Sets the scroll from pos y using the specified local y
            </summary>
            <param name="local_y">The local</param>
            <param name="center_y_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollHereX">
            <summary>
            Sets the scroll here x
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollHereX(System.Single)">
            <summary>
            Sets the scroll here x using the specified center x ratio
            </summary>
            <param name="center_x_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollHereY">
            <summary>
            Sets the scroll here y
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollHereY(System.Single)">
            <summary>
            Sets the scroll here y using the specified center y ratio
            </summary>
            <param name="center_y_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollX(System.Single)">
            <summary>
            Sets the scroll x using the specified scroll x
            </summary>
            <param name="scroll_x">The scroll</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetScrollY(System.Single)">
            <summary>
            Sets the scroll y using the specified scroll y
            </summary>
            <param name="scroll_y">The scroll</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetStateStorage(ImGuiNET.ImGuiStoragePtr)">
            <summary>
            Sets the state storage using the specified storage
            </summary>
            <param name="storage">The storage</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetTabItemClosed(System.String)">
            <summary>
            Sets the tab item closed using the specified tab or docked window label
            </summary>
            <param name="tab_or_docked_window_label">The tab or docked window label</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetTooltip(System.String)">
            <summary>
            Sets the tooltip using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowCollapsed(System.Boolean)">
            <summary>
            Sets the window collapsed using the specified collapsed
            </summary>
            <param name="collapsed">The collapsed</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowCollapsed(System.Boolean,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the window collapsed using the specified collapsed
            </summary>
            <param name="collapsed">The collapsed</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowCollapsed(System.String,System.Boolean)">
            <summary>
            Sets the window collapsed using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="collapsed">The collapsed</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowCollapsed(System.String,System.Boolean,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the window collapsed using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="collapsed">The collapsed</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowFocus">
            <summary>
            Sets the window focus
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowFocus(System.String)">
            <summary>
            Sets the window focus using the specified name
            </summary>
            <param name="name">The name</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowFontScale(System.Single)">
            <summary>
            Sets the window font scale using the specified scale
            </summary>
            <param name="scale">The scale</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowPos(System.Numerics.Vector2)">
            <summary>
            Sets the window pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowPos(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the window pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowPos(System.String,System.Numerics.Vector2)">
            <summary>
            Sets the window pos using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowPos(System.String,System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the window pos using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowSize(System.Numerics.Vector2)">
            <summary>
            Sets the window size using the specified size
            </summary>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowSize(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the window size using the specified size
            </summary>
            <param name="size">The size</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowSize(System.String,System.Numerics.Vector2)">
            <summary>
            Sets the window size using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGui.SetWindowSize(System.String,System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Sets the window size using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="size">The size</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowAboutWindow">
            <summary>
            Shows the about window
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowAboutWindow(System.Boolean@)">
            <summary>
            Shows the about window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowDebugLogWindow">
            <summary>
            Shows the debug log window
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowDebugLogWindow(System.Boolean@)">
            <summary>
            Shows the debug log window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowDemoWindow">
            <summary>
            Shows the demo window
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowDemoWindow(System.Boolean@)">
            <summary>
            Shows the demo window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowFontSelector(System.String)">
            <summary>
            Shows the font selector using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowMetricsWindow">
            <summary>
            Shows the metrics window
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowMetricsWindow(System.Boolean@)">
            <summary>
            Shows the metrics window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowStackToolWindow">
            <summary>
            Shows the stack tool window
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowStackToolWindow(System.Boolean@)">
            <summary>
            Shows the stack tool window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowStyleEditor">
            <summary>
            Shows the style editor
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowStyleEditor(ImGuiNET.ImGuiStylePtr)">
            <summary>
            
            </summary>
            <param name="ref"></param>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowStyleSelector(System.String)">
            <summary>
            Describes whether show style selector
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.ShowUserGuide">
            <summary>
            Shows the user guide
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderAngle(System.String,System.Single@)">
            <summary>
            Describes whether slider angle
            </summary>
            <param name="label">The label</param>
            <param name="v_rad">The rad</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderAngle(System.String,System.Single@,System.Single)">
            <summary>
            Describes whether slider angle
            </summary>
            <param name="label">The label</param>
            <param name="v_rad">The rad</param>
            <param name="v_degrees_min">The degrees min</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderAngle(System.String,System.Single@,System.Single,System.Single)">
            <summary>
            Describes whether slider angle
            </summary>
            <param name="label">The label</param>
            <param name="v_rad">The rad</param>
            <param name="v_degrees_min">The degrees min</param>
            <param name="v_degrees_max">The degrees max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderAngle(System.String,System.Single@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether slider angle
            </summary>
            <param name="label">The label</param>
            <param name="v_rad">The rad</param>
            <param name="v_degrees_min">The degrees min</param>
            <param name="v_degrees_max">The degrees max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderAngle(System.String,System.Single@,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider angle
            </summary>
            <param name="label">The label</param>
            <param name="v_rad">The rad</param>
            <param name="v_degrees_min">The degrees min</param>
            <param name="v_degrees_max">The degrees max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat(System.String,System.Single@,System.Single,System.Single)">
            <summary>
            Describes whether slider float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat(System.String,System.Single@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether slider float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat(System.String,System.Single@,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider float
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single)">
            <summary>
            Describes whether slider float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether slider float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat2(System.String,System.Numerics.Vector2@,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider float 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single)">
            <summary>
            Describes whether slider float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether slider float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat3(System.String,System.Numerics.Vector3@,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider float 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single)">
            <summary>
            Describes whether slider float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether slider float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderFloat4(System.String,System.Numerics.Vector4@,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider float 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt(System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Describes whether slider int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt(System.String,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether slider int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt(System.String,System.Int32@,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider int
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt2(System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Describes whether slider int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt2(System.String,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether slider int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt2(System.String,System.Int32@,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider int 2
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt3(System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Describes whether slider int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt3(System.String,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether slider int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt3(System.String,System.Int32@,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider int 3
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt4(System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Describes whether slider int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt4(System.String,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether slider int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderInt4(System.String,System.Int32@,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider int 4
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether slider scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether slider scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderScalar(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider scalar
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether slider scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether slider scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SliderScalarN(System.String,ImGuiNET.ImGuiDataType,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether slider scalar n
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.SmallButton(System.String)">
            <summary>
            Describes whether small button
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Spacing">
            <summary>
            Spacings
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.StyleColorsClassic">
            <summary>
            Styles the colors classic
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.StyleColorsClassic(ImGuiNET.ImGuiStylePtr)">
            <summary>
            Styles the colors classic using the specified dst
            </summary>
            <param name="dst">The dst</param>
        </member>
        <member name="M:ImGuiNET.ImGui.StyleColorsDark">
            <summary>
            Styles the colors dark
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.StyleColorsDark(ImGuiNET.ImGuiStylePtr)">
            <summary>
            Styles the colors dark using the specified dst
            </summary>
            <param name="dst">The dst</param>
        </member>
        <member name="M:ImGuiNET.ImGui.StyleColorsLight">
            <summary>
            Styles the colors light
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.StyleColorsLight(ImGuiNET.ImGuiStylePtr)">
            <summary>
            Styles the colors light using the specified dst
            </summary>
            <param name="dst">The dst</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TabItemButton(System.String)">
            <summary>
            Describes whether tab item button
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TabItemButton(System.String,ImGuiNET.ImGuiTabItemFlags)">
            <summary>
            Describes whether tab item button
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetColumnCount">
            <summary>
            Tables the get column count
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetColumnFlags">
            <summary>
            Tables the get column flags
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetColumnFlags(System.Int32)">
            <summary>
            Tables the get column flags using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetColumnIndex">
            <summary>
            Tables the get column index
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetColumnName">
            <summary>
            Tables the get column name
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetColumnName(System.Int32)">
            <summary>
            Tables the get column name using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetRowIndex">
            <summary>
            Tables the get row index
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableGetSortSpecs">
            <summary>
            Tables the get sort specs
            </summary>
            <returns>The im gui table sort specs ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableHeader(System.String)">
            <summary>
            Tables the header using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableHeadersRow">
            <summary>
            Tables the headers row
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.TableNextColumn">
            <summary>
            Describes whether table next column
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableNextRow">
            <summary>
            Tables the next row
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.TableNextRow(ImGuiNET.ImGuiTableRowFlags)">
            <summary>
            Tables the next row using the specified row flags
            </summary>
            <param name="row_flags">The row flags</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableNextRow(ImGuiNET.ImGuiTableRowFlags,System.Single)">
            <summary>
            Tables the next row using the specified row flags
            </summary>
            <param name="row_flags">The row flags</param>
            <param name="min_row_height">The min row height</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetBgColor(ImGuiNET.ImGuiTableBgTarget,System.UInt32)">
            <summary>
            Tables the set bg color using the specified target
            </summary>
            <param name="target">The target</param>
            <param name="color">The color</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetBgColor(ImGuiNET.ImGuiTableBgTarget,System.UInt32,System.Int32)">
            <summary>
            Tables the set bg color using the specified target
            </summary>
            <param name="target">The target</param>
            <param name="color">The color</param>
            <param name="column_n">The column</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetColumnEnabled(System.Int32,System.Boolean)">
            <summary>
            Tables the set column enabled using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetColumnIndex(System.Int32)">
            <summary>
            Describes whether table set column index
            </summary>
            <param name="column_n">The column</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetupColumn(System.String)">
            <summary>
            Tables the setup column using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetupColumn(System.String,ImGuiNET.ImGuiTableColumnFlags)">
            <summary>
            Tables the setup column using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetupColumn(System.String,ImGuiNET.ImGuiTableColumnFlags,System.Single)">
            <summary>
            Tables the setup column using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="init_width_or_weight">The init width or weight</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetupColumn(System.String,ImGuiNET.ImGuiTableColumnFlags,System.Single,System.UInt32)">
            <summary>
            Tables the setup column using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="init_width_or_weight">The init width or weight</param>
            <param name="user_id">The user id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TableSetupScrollFreeze(System.Int32,System.Int32)">
            <summary>
            Tables the setup scroll freeze using the specified cols
            </summary>
            <param name="cols">The cols</param>
            <param name="rows">The rows</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Text(System.String)">
            <summary>
            Texts the fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TextColored(System.Numerics.Vector4,System.String)">
            <summary>
            Texts the colored using the specified col
            </summary>
            <param name="col">The col</param>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TextDisabled(System.String)">
            <summary>
            Texts the disabled using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TextUnformatted(System.String)">
            <summary>
            Texts the unformatted using the specified text
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TextWrapped(System.String)">
            <summary>
            Texts the wrapped using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNode(System.String)">
            <summary>
            Describes whether tree node
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNode(System.String,System.String)">
            <summary>
            Describes whether tree node
            </summary>
            <param name="str_id">The str id</param>
            <param name="fmt">The fmt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNode(System.IntPtr,System.String)">
            <summary>
            Describes whether tree node
            </summary>
            <param name="ptr_id">The ptr id</param>
            <param name="fmt">The fmt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNodeEx(System.String)">
            <summary>
            Describes whether tree node ex
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNodeEx(System.String,ImGuiNET.ImGuiTreeNodeFlags)">
            <summary>
            Describes whether tree node ex
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNodeEx(System.String,ImGuiNET.ImGuiTreeNodeFlags,System.String)">
            <summary>
            Describes whether tree node ex
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <param name="fmt">The fmt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreeNodeEx(System.IntPtr,ImGuiNET.ImGuiTreeNodeFlags,System.String)">
            <summary>
            Describes whether tree node ex
            </summary>
            <param name="ptr_id">The ptr id</param>
            <param name="flags">The flags</param>
            <param name="fmt">The fmt</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.TreePop">
            <summary>
            Trees the pop
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.TreePush(System.String)">
            <summary>
            Trees the push using the specified str id
            </summary>
            <param name="str_id">The str id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.TreePush(System.IntPtr)">
            <summary>
            Trees the push using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
        </member>
        <member name="M:ImGuiNET.ImGui.Unindent">
            <summary>
            Unindents
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.Unindent(System.Single)">
            <summary>
            Unindents the indent w
            </summary>
            <param name="indent_w">The indent</param>
        </member>
        <member name="M:ImGuiNET.ImGui.UpdatePlatformWindows">
            <summary>
            Updates the platform windows
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGui.Value(System.String,System.Boolean)">
            <summary>
            Values the prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="b">The </param>
        </member>
        <member name="M:ImGuiNET.ImGui.Value(System.String,System.Int32)">
            <summary>
            Values the prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGui.Value(System.String,System.UInt32)">
            <summary>
            Values the prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGui.Value(System.String,System.Single)">
            <summary>
            Values the prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGui.Value(System.String,System.Single,System.String)">
            <summary>
            Values the prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
            <param name="float_format">The float format</param>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderFloat(System.String,System.Numerics.Vector2,System.Single@,System.Single,System.Single)">
            <summary>
            Describes whether v slider float
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderFloat(System.String,System.Numerics.Vector2,System.Single@,System.Single,System.Single,System.String)">
            <summary>
            Describes whether v slider float
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderFloat(System.String,System.Numerics.Vector2,System.Single@,System.Single,System.Single,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether v slider float
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderInt(System.String,System.Numerics.Vector2,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Describes whether v slider int
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderInt(System.String,System.Numerics.Vector2,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>
            Describes whether v slider int
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderInt(System.String,System.Numerics.Vector2,System.Int32@,System.Int32,System.Int32,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether v slider int
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderScalar(System.String,System.Numerics.Vector2,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Describes whether v slider scalar
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderScalar(System.String,System.Numerics.Vector2,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            Describes whether v slider scalar
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.VSliderScalar(System.String,System.Numerics.Vector2,ImGuiNET.ImGuiDataType,System.IntPtr,System.IntPtr,System.IntPtr,System.String,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Describes whether v slider scalar
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.Byte[],System.UInt32)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.Byte[],System.UInt32,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.Byte[],System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.Byte[],System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.IntPtr)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.String@,System.UInt32)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.String@,System.UInt32,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.String@,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.String@,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.IntPtr)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextMultiline(System.String,System.String@,System.UInt32,System.Numerics.Vector2)">
            <summary>
            Describes whether input text multiline
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="size">The size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextMultiline(System.String,System.String@,System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input text multiline
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextMultiline(System.String,System.String@,System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback)">
            <summary>
            Describes whether input text multiline
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextMultiline(System.String,System.String@,System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.IntPtr)">
            <summary>
            Describes whether input text multiline
            </summary>
            <param name="label">The label</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextWithHint(System.String,System.String,System.String@,System.UInt32)">
            <summary>
            Describes whether input text with hint
            </summary>
            <param name="label">The label</param>
            <param name="hint">The hint</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextWithHint(System.String,System.String,System.String@,System.UInt32,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input text with hint
            </summary>
            <param name="label">The label</param>
            <param name="hint">The hint</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextWithHint(System.String,System.String,System.String@,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback)">
            <summary>
            Describes whether input text with hint
            </summary>
            <param name="label">The label</param>
            <param name="hint">The hint</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputTextWithHint(System.String,System.String,System.String@,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.IntPtr)">
            <summary>
            Describes whether input text with hint
            </summary>
            <param name="label">The label</param>
            <param name="hint">The hint</param>
            <param name="input">The input</param>
            <param name="maxLength">The max length</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Single)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="wrapWidth">The wrap width</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Boolean)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="hideTextAfterDoubleHash">The hide text after double hash</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32,System.Int32)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32,System.Boolean)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="hideTextAfterDoubleHash">The hide text after double hash</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32,System.Single)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="wrapWidth">The wrap width</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Boolean,System.Single)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="hideTextAfterDoubleHash">The hide text after double hash</param>
            <param name="wrapWidth">The wrap width</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <param name="hideTextAfterDoubleHash">The hide text after double hash</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32,System.Int32,System.Single)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <param name="wrapWidth">The wrap width</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSize(System.String,System.Int32,System.Int32,System.Boolean,System.Single)">
            <summary>
            Calcs the text size using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <param name="hideTextAfterDoubleHash">The hide text after double hash</param>
            <param name="wrapWidth">The wrap width</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.CalcTextSizeImpl(System.String,System.Int32,System.Nullable{System.Int32},System.Boolean,System.Single)">
            <summary>
            Calcs the text size impl using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <param name="hideTextAfterDoubleHash">The hide text after double hash</param>
            <param name="wrapWidth">The wrap width</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.IntPtr,System.UInt32)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.IntPtr,System.UInt32,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.IntPtr,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.InputText(System.String,System.IntPtr,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.IntPtr)">
            <summary>
            Describes whether input text
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.Begin(System.String,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Describes whether begin
            </summary>
            <param name="name">The name</param>
            <param name="flags">The flags</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGui.MenuItem(System.String,System.Boolean)">
            <summary>
            Describes whether menu item
            </summary>
            <param name="label">The label</param>
            <param name="enabled">The enabled</param>
            <returns>The bool</returns>
        </member>
        <member name="T:ImGuiNET.ImGuiBackendFlags">
            <summary>
            The im gui backend flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.None">
            <summary>
            The none im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.HasGamepad">
            <summary>
            The has gamepad im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.HasMouseCursors">
            <summary>
            The has mouse cursors im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.HasSetMousePos">
            <summary>
            The has set mouse pos im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.RendererHasVtxOffset">
            <summary>
            The renderer has vtx offset im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.PlatformHasViewports">
            <summary>
            The platform has viewports im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.HasMouseHoveredViewport">
            <summary>
            The has mouse hovered viewport im gui backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiBackendFlags.RendererHasViewports">
            <summary>
            The renderer has viewports im gui backend flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiButtonFlags">
            <summary>
            The im gui button flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiButtonFlags.None">
            <summary>
            The none im gui button flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiButtonFlags.MouseButtonLeft">
            <summary>
            The mouse button left im gui button flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiButtonFlags.MouseButtonRight">
            <summary>
            The mouse button right im gui button flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiButtonFlags.MouseButtonMiddle">
            <summary>
            The mouse button middle im gui button flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiButtonFlags.MouseButtonMask">
            <summary>
            The mouse button mask im gui button flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiButtonFlags.MouseButtonDefault">
            <summary>
            The mouse button default im gui button flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiCol">
            <summary>
            The im gui col enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.Text">
            <summary>
            The text im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TextDisabled">
            <summary>
            The text disabled im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.WindowBg">
            <summary>
            The window bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ChildBg">
            <summary>
            The child bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.PopupBg">
            <summary>
            The popup bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.Border">
            <summary>
            The border im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.BorderShadow">
            <summary>
            The border shadow im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.FrameBg">
            <summary>
            The frame bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.FrameBgHovered">
            <summary>
            The frame bg hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.FrameBgActive">
            <summary>
            The frame bg active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TitleBg">
            <summary>
            The title bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TitleBgActive">
            <summary>
            The title bg active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TitleBgCollapsed">
            <summary>
            The title bg collapsed im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.MenuBarBg">
            <summary>
            The menu bar bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ScrollbarBg">
            <summary>
            The scrollbar bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ScrollbarGrab">
            <summary>
            The scrollbar grab im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ScrollbarGrabHovered">
            <summary>
            The scrollbar grab hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ScrollbarGrabActive">
            <summary>
            The scrollbar grab active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.CheckMark">
            <summary>
            The check mark im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.SliderGrab">
            <summary>
            The slider grab im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.SliderGrabActive">
            <summary>
            The slider grab active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.Button">
            <summary>
            The button im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ButtonHovered">
            <summary>
            The button hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ButtonActive">
            <summary>
            The button active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.Header">
            <summary>
            The header im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.HeaderHovered">
            <summary>
            The header hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.HeaderActive">
            <summary>
            The header active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.Separator">
            <summary>
            The separator im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.SeparatorHovered">
            <summary>
            The separator hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.SeparatorActive">
            <summary>
            The separator active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ResizeGrip">
            <summary>
            The resize grip im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ResizeGripHovered">
            <summary>
            The resize grip hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ResizeGripActive">
            <summary>
            The resize grip active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.Tab">
            <summary>
            The tab im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TabHovered">
            <summary>
            The tab hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TabActive">
            <summary>
            The tab active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TabUnfocused">
            <summary>
            The tab unfocused im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TabUnfocusedActive">
            <summary>
            The tab unfocused active im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.DockingPreview">
            <summary>
            The docking preview im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.DockingEmptyBg">
            <summary>
            The docking empty bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.PlotLines">
            <summary>
            The plot lines im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.PlotLinesHovered">
            <summary>
            The plot lines hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.PlotHistogram">
            <summary>
            The plot histogram im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.PlotHistogramHovered">
            <summary>
            The plot histogram hovered im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TableHeaderBg">
            <summary>
            The table header bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TableBorderStrong">
            <summary>
            The table border strong im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TableBorderLight">
            <summary>
            The table border light im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TableRowBg">
            <summary>
            The table row bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TableRowBgAlt">
            <summary>
            The table row bg alt im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.TextSelectedBg">
            <summary>
            The text selected bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.DragDropTarget">
            <summary>
            The drag drop target im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.NavHighlight">
            <summary>
            The nav highlight im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.NavWindowingHighlight">
            <summary>
            The nav windowing highlight im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.NavWindowingDimBg">
            <summary>
            The nav windowing dim bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.ModalWindowDimBg">
            <summary>
            The modal window dim bg im gui col
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCol.COUNT">
            <summary>
            The count im gui col
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiColorEditFlags">
            <summary>
            The im gui color edit flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.None">
            <summary>
            The none im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoAlpha">
            <summary>
            The no alpha im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoPicker">
            <summary>
            The no picker im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoOptions">
            <summary>
            The no options im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoSmallPreview">
            <summary>
            The no small preview im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoInputs">
            <summary>
            The no inputs im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoTooltip">
            <summary>
            The no tooltip im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoLabel">
            <summary>
            The no label im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoSidePreview">
            <summary>
            The no side preview im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoDragDrop">
            <summary>
            The no drag drop im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.NoBorder">
            <summary>
            The no border im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.AlphaBar">
            <summary>
            The alpha bar im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.AlphaPreview">
            <summary>
            The alpha preview im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.AlphaPreviewHalf">
            <summary>
            The alpha preview half im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.HDR">
            <summary>
            The hdr im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.DisplayRGB">
            <summary>
            The display rgb im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.DisplayHSV">
            <summary>
            The display hsv im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.DisplayHex">
            <summary>
            The display hex im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.Uint8">
            <summary>
            The uint im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.Float">
            <summary>
            The float im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.PickerHueBar">
            <summary>
            The picker hue bar im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.PickerHueWheel">
            <summary>
            The picker hue wheel im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.InputRGB">
            <summary>
            The input rgb im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.InputHSV">
            <summary>
            The input hsv im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.DefaultOptions">
            <summary>
            The default options im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.DisplayMask">
            <summary>
            The display mask im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.DataTypeMask">
            <summary>
            The data type mask im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.PickerMask">
            <summary>
            The picker mask im gui color edit flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiColorEditFlags.InputMask">
            <summary>
            The input mask im gui color edit flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiComboFlags">
            <summary>
            The im gui combo flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.None">
            <summary>
            The none im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.PopupAlignLeft">
            <summary>
            The popup align left im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.HeightSmall">
            <summary>
            The height small im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.HeightRegular">
            <summary>
            The height regular im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.HeightLarge">
            <summary>
            The height large im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.HeightLargest">
            <summary>
            The height largest im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.NoArrowButton">
            <summary>
            The no arrow button im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.NoPreview">
            <summary>
            The no preview im gui combo flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiComboFlags.HeightMask">
            <summary>
            The height mask im gui combo flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiCond">
            <summary>
            The im gui cond enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCond.None">
            <summary>
            The none im gui cond
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCond.Always">
            <summary>
            The always im gui cond
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCond.Once">
            <summary>
            The once im gui cond
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCond.FirstUseEver">
            <summary>
            The first use ever im gui cond
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiCond.Appearing">
            <summary>
            The appearing im gui cond
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiConfigFlags">
            <summary>
            The im gui config flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.None">
            <summary>
            The none im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.NavEnableKeyboard">
            <summary>
            The nav enable keyboard im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.NavEnableGamepad">
            <summary>
            The nav enable gamepad im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.NavEnableSetMousePos">
            <summary>
            The nav enable set mouse pos im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.NavNoCaptureKeyboard">
            <summary>
            The nav no capture keyboard im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.NoMouse">
            <summary>
            The no mouse im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.NoMouseCursorChange">
            <summary>
            The no mouse cursor change im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.DockingEnable">
            <summary>
            The docking enable im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.ViewportsEnable">
            <summary>
            The viewports enable im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.DpiEnableScaleViewports">
            <summary>
            The dpi enable scale viewports im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.DpiEnableScaleFonts">
            <summary>
            The dpi enable scale fonts im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.IsSRGB">
            <summary>
            The is srgb im gui config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiConfigFlags.IsTouchScreen">
            <summary>
            The is touch screen im gui config flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiDataType">
            <summary>
            The im gui data type enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.S8">
            <summary>
            The  im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.U8">
            <summary>
            The  im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.S16">
            <summary>
            The 16 im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.U16">
            <summary>
            The 16 im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.S32">
            <summary>
            The 32 im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.U32">
            <summary>
            The 32 im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.S64">
            <summary>
            The 64 im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.U64">
            <summary>
            The 64 im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.Float">
            <summary>
            The float im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.Double">
            <summary>
            The double im gui data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDataType.COUNT">
            <summary>
            The count im gui data type
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiDir">
            <summary>
            The im gui dir enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDir.None">
            <summary>
            The none im gui dir
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDir.Left">
            <summary>
            The left im gui dir
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDir.Right">
            <summary>
            The right im gui dir
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDir.Up">
            <summary>
            The up im gui dir
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDir.Down">
            <summary>
            The down im gui dir
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDir.COUNT">
            <summary>
            The count im gui dir
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiDockNodeFlags">
            <summary>
            The im gui dock node flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.None">
            <summary>
            The none im gui dock node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.KeepAliveOnly">
            <summary>
            The keep alive only im gui dock node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.NoDockingInCentralNode">
            <summary>
            The no docking in central node im gui dock node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.PassthruCentralNode">
            <summary>
            The passthru central node im gui dock node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.NoSplit">
            <summary>
            The no split im gui dock node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.NoResize">
            <summary>
            The no resize im gui dock node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDockNodeFlags.AutoHideTabBar">
            <summary>
            The auto hide tab bar im gui dock node flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiDragDropFlags">
            <summary>
            The im gui drag drop flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.None">
            <summary>
            The none im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.SourceNoPreviewTooltip">
            <summary>
            The source no preview tooltip im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.SourceNoDisableHover">
            <summary>
            The source no disable hover im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.SourceNoHoldToOpenOthers">
            <summary>
            The source no hold to open others im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.SourceAllowNullID">
            <summary>
            The source allow null id im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.SourceExtern">
            <summary>
            The source extern im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.SourceAutoExpirePayload">
            <summary>
            The source auto expire payload im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.AcceptBeforeDelivery">
            <summary>
            The accept before delivery im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.AcceptNoDrawDefaultRect">
            <summary>
            The accept no draw default rect im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.AcceptNoPreviewTooltip">
            <summary>
            The accept no preview tooltip im gui drag drop flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiDragDropFlags.AcceptPeekOnly">
            <summary>
            The accept peek only im gui drag drop flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiFocusedFlags">
            <summary>
            The im gui focused flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.None">
            <summary>
            The none im gui focused flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.ChildWindows">
            <summary>
            The child windows im gui focused flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.RootWindow">
            <summary>
            The root window im gui focused flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.AnyWindow">
            <summary>
            The any window im gui focused flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.NoPopupHierarchy">
            <summary>
            The no popup hierarchy im gui focused flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.DockHierarchy">
            <summary>
            The dock hierarchy im gui focused flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiFocusedFlags.RootAndChildWindows">
            <summary>
            The root and child windows im gui focused flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiHoveredFlags">
            <summary>
            The im gui hovered flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.None">
            <summary>
            The none im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.ChildWindows">
            <summary>
            The child windows im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.RootWindow">
            <summary>
            The root window im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.AnyWindow">
            <summary>
            The any window im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.NoPopupHierarchy">
            <summary>
            The no popup hierarchy im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.DockHierarchy">
            <summary>
            The dock hierarchy im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.AllowWhenBlockedByPopup">
            <summary>
            The allow when blocked by popup im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.AllowWhenBlockedByActiveItem">
            <summary>
            The allow when blocked by active item im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.AllowWhenOverlapped">
            <summary>
            The allow when overlapped im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.AllowWhenDisabled">
            <summary>
            The allow when disabled im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.NoNavOverride">
            <summary>
            The no nav override im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.RectOnly">
            <summary>
            The rect only im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.RootAndChildWindows">
            <summary>
            The root and child windows im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.DelayNormal">
            <summary>
            The delay normal im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.DelayShort">
            <summary>
            The delay short im gui hovered flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiHoveredFlags.NoSharedDelay">
            <summary>
            The no shared delay im gui hovered flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiInputTextCallbackData">
            <summary>
            The im gui input text callback data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.Ctx">
            <summary>
            The ctx
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.EventFlag">
            <summary>
            The event flag
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.Flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.UserData">
            <summary>
            The user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.EventChar">
            <summary>
            The event char
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.EventKey">
            <summary>
            The event key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.Buf">
            <summary>
            The buf
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.BufTextLen">
            <summary>
            The buf text len
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.BufSize">
            <summary>
            The buf size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.BufDirty">
            <summary>
            The buf dirty
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.CursorPos">
            <summary>
            The cursor pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.SelectionStart">
            <summary>
            The selection start
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextCallbackData.SelectionEnd">
            <summary>
            The selection end
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiInputTextCallbackDataPtr">
            <summary>
            The im gui input text callback data ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.#ctor(ImGuiNET.ImGuiInputTextCallbackData*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiInputTextCallbackDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiInputTextCallbackDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.op_Implicit(ImGuiNET.ImGuiInputTextCallbackData*)~ImGuiNET.ImGuiInputTextCallbackDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.op_Implicit(ImGuiNET.ImGuiInputTextCallbackDataPtr)~ImGuiNET.ImGuiInputTextCallbackData*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiInputTextCallbackDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.Ctx">
            <summary>
            Gets the value of the ctx
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.EventFlag">
            <summary>
            Gets the value of the event flag
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.Flags">
            <summary>
            Gets the value of the flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.UserData">
            <summary>
            Gets or sets the value of the user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.EventChar">
            <summary>
            Gets the value of the event char
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.EventKey">
            <summary>
            Gets the value of the event key
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.Buf">
            <summary>
            Gets or sets the value of the buf
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.BufTextLen">
            <summary>
            Gets the value of the buf text len
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.BufSize">
            <summary>
            Gets the value of the buf size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.BufDirty">
            <summary>
            Gets the value of the buf dirty
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.CursorPos">
            <summary>
            Gets the value of the cursor pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.SelectionStart">
            <summary>
            Gets the value of the selection start
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiInputTextCallbackDataPtr.SelectionEnd">
            <summary>
            Gets the value of the selection end
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.ClearSelection">
            <summary>
            Clears the selection
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.DeleteChars(System.Int32,System.Int32)">
            <summary>
            Deletes the chars using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="bytes_count">The bytes count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.HasSelection">
            <summary>
            Describes whether this instance has selection
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.InsertChars(System.Int32,System.String)">
            <summary>
            Inserts the chars using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImGuiInputTextCallbackDataPtr.SelectAll">
            <summary>
            Selects the all
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiInputTextFlags">
            <summary>
            The im gui input text flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.None">
            <summary>
            The none im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CharsDecimal">
            <summary>
            The chars decimal im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CharsHexadecimal">
            <summary>
            The chars hexadecimal im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CharsUppercase">
            <summary>
            The chars uppercase im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CharsNoBlank">
            <summary>
            The chars no blank im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.AutoSelectAll">
            <summary>
            The auto select all im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.EnterReturnsTrue">
            <summary>
            The enter returns true im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CallbackCompletion">
            <summary>
            The callback completion im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CallbackHistory">
            <summary>
            The callback history im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CallbackAlways">
            <summary>
            The callback always im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CallbackCharFilter">
            <summary>
            The callback char filter im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.AllowTabInput">
            <summary>
            The allow tab input im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CtrlEnterForNewLine">
            <summary>
            The ctrl enter for new line im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.NoHorizontalScroll">
            <summary>
            The no horizontal scroll im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.AlwaysOverwrite">
            <summary>
            The always overwrite im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.ReadOnly">
            <summary>
            The read only im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.Password">
            <summary>
            The password im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.NoUndoRedo">
            <summary>
            The no undo redo im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CharsScientific">
            <summary>
            The chars scientific im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CallbackResize">
            <summary>
            The callback resize im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.CallbackEdit">
            <summary>
            The callback edit im gui input text flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiInputTextFlags.EscapeClearsAll">
            <summary>
            The escape clears all im gui input text flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiIO">
            <summary>
            The im gui io
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigFlags">
            <summary>
            The config flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendFlags">
            <summary>
            The backend flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.DisplaySize">
            <summary>
            The display size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.DeltaTime">
            <summary>
            The delta time
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.IniSavingRate">
            <summary>
            The ini saving rate
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.IniFilename">
            <summary>
            The ini filename
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.LogFilename">
            <summary>
            The log filename
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDoubleClickTime">
            <summary>
            The mouse double click time
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDoubleClickMaxDist">
            <summary>
            The mouse double click max dist
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragThreshold">
            <summary>
            The mouse drag threshold
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyRepeatDelay">
            <summary>
            The key repeat delay
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyRepeatRate">
            <summary>
            The key repeat rate
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.HoverDelayNormal">
            <summary>
            The hover delay normal
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.HoverDelayShort">
            <summary>
            The hover delay short
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.UserData">
            <summary>
            The user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.Fonts">
            <summary>
            The fonts
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.FontGlobalScale">
            <summary>
            The font global scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.FontAllowUserScaling">
            <summary>
            The font allow user scaling
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.FontDefault">
            <summary>
            The font default
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.DisplayFramebufferScale">
            <summary>
            The display framebuffer scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDockingNoSplit">
            <summary>
            The config docking no split
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDockingWithShift">
            <summary>
            The config docking with shift
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDockingAlwaysTabBar">
            <summary>
            The config docking always tab bar
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDockingTransparentPayload">
            <summary>
            The config docking transparent payload
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigViewportsNoAutoMerge">
            <summary>
            The config viewports no auto merge
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigViewportsNoTaskBarIcon">
            <summary>
            The config viewports no task bar icon
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigViewportsNoDecoration">
            <summary>
            The config viewports no decoration
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigViewportsNoDefaultParent">
            <summary>
            The config viewports no default parent
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDrawCursor">
            <summary>
            The mouse draw cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigMacOSXBehaviors">
            <summary>
            The config mac osx behaviors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigInputTrickleEventQueue">
            <summary>
            The config input trickle event queue
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigInputTextCursorBlink">
            <summary>
            The config input text cursor blink
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigInputTextEnterKeepActive">
            <summary>
            The config input text enter keep active
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDragClickToInputText">
            <summary>
            The config drag click to input text
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigWindowsResizeFromEdges">
            <summary>
            The config windows resize from edges
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigWindowsMoveFromTitleBarOnly">
            <summary>
            The config windows move from title bar only
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigMemoryCompactTimer">
            <summary>
            The config memory compact timer
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDebugBeginReturnValueOnce">
            <summary>
            The config debug begin return value once
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ConfigDebugBeginReturnValueLoop">
            <summary>
            The config debug begin return value loop
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendPlatformName">
            <summary>
            The backend platform name
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendRendererName">
            <summary>
            The backend renderer name
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendPlatformUserData">
            <summary>
            The backend platform user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendRendererUserData">
            <summary>
            The backend renderer user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendLanguageUserData">
            <summary>
            The backend language user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.GetClipboardTextFn">
            <summary>
            The get clipboard text fn
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.SetClipboardTextFn">
            <summary>
            The set clipboard text fn
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.ClipboardUserData">
            <summary>
            The clipboard user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.SetPlatformImeDataFn">
            <summary>
            The set platform ime data fn
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO._UnusedPadding">
            <summary>
            The unused padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.WantCaptureMouse">
            <summary>
            The want capture mouse
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.WantCaptureKeyboard">
            <summary>
            The want capture keyboard
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.WantTextInput">
            <summary>
            The want text input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.WantSetMousePos">
            <summary>
            The want set mouse pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.WantSaveIniSettings">
            <summary>
            The want save ini settings
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.NavActive">
            <summary>
            The nav active
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.NavVisible">
            <summary>
            The nav visible
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.Framerate">
            <summary>
            The framerate
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MetricsRenderVertices">
            <summary>
            The metrics render vertices
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MetricsRenderIndices">
            <summary>
            The metrics render indices
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MetricsRenderWindows">
            <summary>
            The metrics render windows
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MetricsActiveWindows">
            <summary>
            The metrics active windows
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MetricsActiveAllocations">
            <summary>
            The metrics active allocations
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDelta">
            <summary>
            The mouse delta
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyMap">
            <summary>
            The key map
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysDown">
            <summary>
            The keys down
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.NavInputs">
            <summary>
            The nav inputs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.Ctx">
            <summary>
            The ctx
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MousePos">
            <summary>
            The mouse pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDown">
            <summary>
            The mouse down
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseWheel">
            <summary>
            The mouse wheel
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseWheelH">
            <summary>
            The mouse wheel
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseSource">
            <summary>
            The mouse source
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseHoveredViewport">
            <summary>
            The mouse hovered viewport
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyCtrl">
            <summary>
            The key ctrl
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyShift">
            <summary>
            The key shift
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyAlt">
            <summary>
            The key alt
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeySuper">
            <summary>
            The key super
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeyMods">
            <summary>
            The key mods
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_0">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_1">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_2">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_3">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_4">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_5">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_6">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_7">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_8">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_9">
            <summary>
            The keysdata
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_10">
            <summary>
            The keysdata 10
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_11">
            <summary>
            The keysdata 11
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_12">
            <summary>
            The keysdata 12
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_13">
            <summary>
            The keysdata 13
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_14">
            <summary>
            The keysdata 14
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_15">
            <summary>
            The keysdata 15
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_16">
            <summary>
            The keysdata 16
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_17">
            <summary>
            The keysdata 17
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_18">
            <summary>
            The keysdata 18
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_19">
            <summary>
            The keysdata 19
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_20">
            <summary>
            The keysdata 20
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_21">
            <summary>
            The keysdata 21
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_22">
            <summary>
            The keysdata 22
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_23">
            <summary>
            The keysdata 23
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_24">
            <summary>
            The keysdata 24
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_25">
            <summary>
            The keysdata 25
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_26">
            <summary>
            The keysdata 26
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_27">
            <summary>
            The keysdata 27
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_28">
            <summary>
            The keysdata 28
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_29">
            <summary>
            The keysdata 29
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_30">
            <summary>
            The keysdata 30
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_31">
            <summary>
            The keysdata 31
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_32">
            <summary>
            The keysdata 32
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_33">
            <summary>
            The keysdata 33
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_34">
            <summary>
            The keysdata 34
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_35">
            <summary>
            The keysdata 35
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_36">
            <summary>
            The keysdata 36
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_37">
            <summary>
            The keysdata 37
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_38">
            <summary>
            The keysdata 38
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_39">
            <summary>
            The keysdata 39
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_40">
            <summary>
            The keysdata 40
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_41">
            <summary>
            The keysdata 41
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_42">
            <summary>
            The keysdata 42
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_43">
            <summary>
            The keysdata 43
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_44">
            <summary>
            The keysdata 44
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_45">
            <summary>
            The keysdata 45
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_46">
            <summary>
            The keysdata 46
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_47">
            <summary>
            The keysdata 47
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_48">
            <summary>
            The keysdata 48
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_49">
            <summary>
            The keysdata 49
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_50">
            <summary>
            The keysdata 50
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_51">
            <summary>
            The keysdata 51
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_52">
            <summary>
            The keysdata 52
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_53">
            <summary>
            The keysdata 53
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_54">
            <summary>
            The keysdata 54
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_55">
            <summary>
            The keysdata 55
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_56">
            <summary>
            The keysdata 56
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_57">
            <summary>
            The keysdata 57
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_58">
            <summary>
            The keysdata 58
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_59">
            <summary>
            The keysdata 59
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_60">
            <summary>
            The keysdata 60
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_61">
            <summary>
            The keysdata 61
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_62">
            <summary>
            The keysdata 62
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_63">
            <summary>
            The keysdata 63
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_64">
            <summary>
            The keysdata 64
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_65">
            <summary>
            The keysdata 65
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_66">
            <summary>
            The keysdata 66
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_67">
            <summary>
            The keysdata 67
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_68">
            <summary>
            The keysdata 68
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_69">
            <summary>
            The keysdata 69
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_70">
            <summary>
            The keysdata 70
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_71">
            <summary>
            The keysdata 71
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_72">
            <summary>
            The keysdata 72
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_73">
            <summary>
            The keysdata 73
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_74">
            <summary>
            The keysdata 74
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_75">
            <summary>
            The keysdata 75
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_76">
            <summary>
            The keysdata 76
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_77">
            <summary>
            The keysdata 77
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_78">
            <summary>
            The keysdata 78
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_79">
            <summary>
            The keysdata 79
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_80">
            <summary>
            The keysdata 80
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_81">
            <summary>
            The keysdata 81
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_82">
            <summary>
            The keysdata 82
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_83">
            <summary>
            The keysdata 83
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_84">
            <summary>
            The keysdata 84
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_85">
            <summary>
            The keysdata 85
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_86">
            <summary>
            The keysdata 86
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_87">
            <summary>
            The keysdata 87
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_88">
            <summary>
            The keysdata 88
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_89">
            <summary>
            The keysdata 89
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_90">
            <summary>
            The keysdata 90
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_91">
            <summary>
            The keysdata 91
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_92">
            <summary>
            The keysdata 92
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_93">
            <summary>
            The keysdata 93
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_94">
            <summary>
            The keysdata 94
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_95">
            <summary>
            The keysdata 95
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_96">
            <summary>
            The keysdata 96
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_97">
            <summary>
            The keysdata 97
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_98">
            <summary>
            The keysdata 98
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_99">
            <summary>
            The keysdata 99
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_100">
            <summary>
            The keysdata 100
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_101">
            <summary>
            The keysdata 101
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_102">
            <summary>
            The keysdata 102
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_103">
            <summary>
            The keysdata 103
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_104">
            <summary>
            The keysdata 104
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_105">
            <summary>
            The keysdata 105
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_106">
            <summary>
            The keysdata 106
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_107">
            <summary>
            The keysdata 107
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_108">
            <summary>
            The keysdata 108
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_109">
            <summary>
            The keysdata 109
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_110">
            <summary>
            The keysdata 110
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_111">
            <summary>
            The keysdata 111
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_112">
            <summary>
            The keysdata 112
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_113">
            <summary>
            The keysdata 113
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_114">
            <summary>
            The keysdata 114
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_115">
            <summary>
            The keysdata 115
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_116">
            <summary>
            The keysdata 116
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_117">
            <summary>
            The keysdata 117
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_118">
            <summary>
            The keysdata 118
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_119">
            <summary>
            The keysdata 119
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_120">
            <summary>
            The keysdata 120
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_121">
            <summary>
            The keysdata 121
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_122">
            <summary>
            The keysdata 122
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_123">
            <summary>
            The keysdata 123
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_124">
            <summary>
            The keysdata 124
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_125">
            <summary>
            The keysdata 125
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_126">
            <summary>
            The keysdata 126
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_127">
            <summary>
            The keysdata 127
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_128">
            <summary>
            The keysdata 128
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_129">
            <summary>
            The keysdata 129
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_130">
            <summary>
            The keysdata 130
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_131">
            <summary>
            The keysdata 131
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_132">
            <summary>
            The keysdata 132
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_133">
            <summary>
            The keysdata 133
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_134">
            <summary>
            The keysdata 134
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_135">
            <summary>
            The keysdata 135
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_136">
            <summary>
            The keysdata 136
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_137">
            <summary>
            The keysdata 137
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_138">
            <summary>
            The keysdata 138
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_139">
            <summary>
            The keysdata 139
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_140">
            <summary>
            The keysdata 140
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_141">
            <summary>
            The keysdata 141
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_142">
            <summary>
            The keysdata 142
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_143">
            <summary>
            The keysdata 143
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_144">
            <summary>
            The keysdata 144
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_145">
            <summary>
            The keysdata 145
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_146">
            <summary>
            The keysdata 146
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_147">
            <summary>
            The keysdata 147
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_148">
            <summary>
            The keysdata 148
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_149">
            <summary>
            The keysdata 149
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_150">
            <summary>
            The keysdata 150
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_151">
            <summary>
            The keysdata 151
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_152">
            <summary>
            The keysdata 152
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_153">
            <summary>
            The keysdata 153
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_154">
            <summary>
            The keysdata 154
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_155">
            <summary>
            The keysdata 155
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_156">
            <summary>
            The keysdata 156
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_157">
            <summary>
            The keysdata 157
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_158">
            <summary>
            The keysdata 158
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_159">
            <summary>
            The keysdata 159
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_160">
            <summary>
            The keysdata 160
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_161">
            <summary>
            The keysdata 161
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_162">
            <summary>
            The keysdata 162
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_163">
            <summary>
            The keysdata 163
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_164">
            <summary>
            The keysdata 164
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_165">
            <summary>
            The keysdata 165
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_166">
            <summary>
            The keysdata 166
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_167">
            <summary>
            The keysdata 167
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_168">
            <summary>
            The keysdata 168
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_169">
            <summary>
            The keysdata 169
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_170">
            <summary>
            The keysdata 170
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_171">
            <summary>
            The keysdata 171
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_172">
            <summary>
            The keysdata 172
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_173">
            <summary>
            The keysdata 173
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_174">
            <summary>
            The keysdata 174
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_175">
            <summary>
            The keysdata 175
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_176">
            <summary>
            The keysdata 176
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_177">
            <summary>
            The keysdata 177
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_178">
            <summary>
            The keysdata 178
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_179">
            <summary>
            The keysdata 179
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_180">
            <summary>
            The keysdata 180
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_181">
            <summary>
            The keysdata 181
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_182">
            <summary>
            The keysdata 182
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_183">
            <summary>
            The keysdata 183
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_184">
            <summary>
            The keysdata 184
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_185">
            <summary>
            The keysdata 185
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_186">
            <summary>
            The keysdata 186
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_187">
            <summary>
            The keysdata 187
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_188">
            <summary>
            The keysdata 188
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_189">
            <summary>
            The keysdata 189
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_190">
            <summary>
            The keysdata 190
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_191">
            <summary>
            The keysdata 191
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_192">
            <summary>
            The keysdata 192
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_193">
            <summary>
            The keysdata 193
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_194">
            <summary>
            The keysdata 194
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_195">
            <summary>
            The keysdata 195
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_196">
            <summary>
            The keysdata 196
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_197">
            <summary>
            The keysdata 197
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_198">
            <summary>
            The keysdata 198
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_199">
            <summary>
            The keysdata 199
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_200">
            <summary>
            The keysdata 200
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_201">
            <summary>
            The keysdata 201
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_202">
            <summary>
            The keysdata 202
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_203">
            <summary>
            The keysdata 203
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_204">
            <summary>
            The keysdata 204
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_205">
            <summary>
            The keysdata 205
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_206">
            <summary>
            The keysdata 206
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_207">
            <summary>
            The keysdata 207
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_208">
            <summary>
            The keysdata 208
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_209">
            <summary>
            The keysdata 209
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_210">
            <summary>
            The keysdata 210
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_211">
            <summary>
            The keysdata 211
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_212">
            <summary>
            The keysdata 212
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_213">
            <summary>
            The keysdata 213
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_214">
            <summary>
            The keysdata 214
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_215">
            <summary>
            The keysdata 215
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_216">
            <summary>
            The keysdata 216
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_217">
            <summary>
            The keysdata 217
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_218">
            <summary>
            The keysdata 218
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_219">
            <summary>
            The keysdata 219
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_220">
            <summary>
            The keysdata 220
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_221">
            <summary>
            The keysdata 221
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_222">
            <summary>
            The keysdata 222
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_223">
            <summary>
            The keysdata 223
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_224">
            <summary>
            The keysdata 224
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_225">
            <summary>
            The keysdata 225
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_226">
            <summary>
            The keysdata 226
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_227">
            <summary>
            The keysdata 227
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_228">
            <summary>
            The keysdata 228
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_229">
            <summary>
            The keysdata 229
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_230">
            <summary>
            The keysdata 230
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_231">
            <summary>
            The keysdata 231
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_232">
            <summary>
            The keysdata 232
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_233">
            <summary>
            The keysdata 233
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_234">
            <summary>
            The keysdata 234
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_235">
            <summary>
            The keysdata 235
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_236">
            <summary>
            The keysdata 236
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_237">
            <summary>
            The keysdata 237
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_238">
            <summary>
            The keysdata 238
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_239">
            <summary>
            The keysdata 239
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_240">
            <summary>
            The keysdata 240
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_241">
            <summary>
            The keysdata 241
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_242">
            <summary>
            The keysdata 242
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_243">
            <summary>
            The keysdata 243
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_244">
            <summary>
            The keysdata 244
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_245">
            <summary>
            The keysdata 245
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_246">
            <summary>
            The keysdata 246
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_247">
            <summary>
            The keysdata 247
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_248">
            <summary>
            The keysdata 248
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_249">
            <summary>
            The keysdata 249
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_250">
            <summary>
            The keysdata 250
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_251">
            <summary>
            The keysdata 251
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_252">
            <summary>
            The keysdata 252
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_253">
            <summary>
            The keysdata 253
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_254">
            <summary>
            The keysdata 254
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_255">
            <summary>
            The keysdata 255
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_256">
            <summary>
            The keysdata 256
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_257">
            <summary>
            The keysdata 257
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_258">
            <summary>
            The keysdata 258
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_259">
            <summary>
            The keysdata 259
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_260">
            <summary>
            The keysdata 260
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_261">
            <summary>
            The keysdata 261
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_262">
            <summary>
            The keysdata 262
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_263">
            <summary>
            The keysdata 263
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_264">
            <summary>
            The keysdata 264
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_265">
            <summary>
            The keysdata 265
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_266">
            <summary>
            The keysdata 266
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_267">
            <summary>
            The keysdata 267
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_268">
            <summary>
            The keysdata 268
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_269">
            <summary>
            The keysdata 269
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_270">
            <summary>
            The keysdata 270
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_271">
            <summary>
            The keysdata 271
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_272">
            <summary>
            The keysdata 272
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_273">
            <summary>
            The keysdata 273
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_274">
            <summary>
            The keysdata 274
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_275">
            <summary>
            The keysdata 275
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_276">
            <summary>
            The keysdata 276
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_277">
            <summary>
            The keysdata 277
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_278">
            <summary>
            The keysdata 278
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_279">
            <summary>
            The keysdata 279
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_280">
            <summary>
            The keysdata 280
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_281">
            <summary>
            The keysdata 281
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_282">
            <summary>
            The keysdata 282
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_283">
            <summary>
            The keysdata 283
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_284">
            <summary>
            The keysdata 284
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_285">
            <summary>
            The keysdata 285
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_286">
            <summary>
            The keysdata 286
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_287">
            <summary>
            The keysdata 287
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_288">
            <summary>
            The keysdata 288
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_289">
            <summary>
            The keysdata 289
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_290">
            <summary>
            The keysdata 290
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_291">
            <summary>
            The keysdata 291
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_292">
            <summary>
            The keysdata 292
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_293">
            <summary>
            The keysdata 293
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_294">
            <summary>
            The keysdata 294
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_295">
            <summary>
            The keysdata 295
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_296">
            <summary>
            The keysdata 296
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_297">
            <summary>
            The keysdata 297
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_298">
            <summary>
            The keysdata 298
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_299">
            <summary>
            The keysdata 299
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_300">
            <summary>
            The keysdata 300
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_301">
            <summary>
            The keysdata 301
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_302">
            <summary>
            The keysdata 302
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_303">
            <summary>
            The keysdata 303
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_304">
            <summary>
            The keysdata 304
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_305">
            <summary>
            The keysdata 305
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_306">
            <summary>
            The keysdata 306
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_307">
            <summary>
            The keysdata 307
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_308">
            <summary>
            The keysdata 308
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_309">
            <summary>
            The keysdata 309
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_310">
            <summary>
            The keysdata 310
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_311">
            <summary>
            The keysdata 311
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_312">
            <summary>
            The keysdata 312
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_313">
            <summary>
            The keysdata 313
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_314">
            <summary>
            The keysdata 314
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_315">
            <summary>
            The keysdata 315
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_316">
            <summary>
            The keysdata 316
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_317">
            <summary>
            The keysdata 317
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_318">
            <summary>
            The keysdata 318
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_319">
            <summary>
            The keysdata 319
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_320">
            <summary>
            The keysdata 320
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_321">
            <summary>
            The keysdata 321
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_322">
            <summary>
            The keysdata 322
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_323">
            <summary>
            The keysdata 323
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_324">
            <summary>
            The keysdata 324
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_325">
            <summary>
            The keysdata 325
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_326">
            <summary>
            The keysdata 326
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_327">
            <summary>
            The keysdata 327
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_328">
            <summary>
            The keysdata 328
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_329">
            <summary>
            The keysdata 329
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_330">
            <summary>
            The keysdata 330
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_331">
            <summary>
            The keysdata 331
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_332">
            <summary>
            The keysdata 332
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_333">
            <summary>
            The keysdata 333
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_334">
            <summary>
            The keysdata 334
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_335">
            <summary>
            The keysdata 335
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_336">
            <summary>
            The keysdata 336
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_337">
            <summary>
            The keysdata 337
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_338">
            <summary>
            The keysdata 338
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_339">
            <summary>
            The keysdata 339
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_340">
            <summary>
            The keysdata 340
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_341">
            <summary>
            The keysdata 341
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_342">
            <summary>
            The keysdata 342
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_343">
            <summary>
            The keysdata 343
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_344">
            <summary>
            The keysdata 344
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_345">
            <summary>
            The keysdata 345
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_346">
            <summary>
            The keysdata 346
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_347">
            <summary>
            The keysdata 347
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_348">
            <summary>
            The keysdata 348
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_349">
            <summary>
            The keysdata 349
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_350">
            <summary>
            The keysdata 350
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_351">
            <summary>
            The keysdata 351
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_352">
            <summary>
            The keysdata 352
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_353">
            <summary>
            The keysdata 353
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_354">
            <summary>
            The keysdata 354
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_355">
            <summary>
            The keysdata 355
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_356">
            <summary>
            The keysdata 356
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_357">
            <summary>
            The keysdata 357
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_358">
            <summary>
            The keysdata 358
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_359">
            <summary>
            The keysdata 359
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_360">
            <summary>
            The keysdata 360
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_361">
            <summary>
            The keysdata 361
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_362">
            <summary>
            The keysdata 362
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_363">
            <summary>
            The keysdata 363
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_364">
            <summary>
            The keysdata 364
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_365">
            <summary>
            The keysdata 365
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_366">
            <summary>
            The keysdata 366
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_367">
            <summary>
            The keysdata 367
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_368">
            <summary>
            The keysdata 368
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_369">
            <summary>
            The keysdata 369
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_370">
            <summary>
            The keysdata 370
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_371">
            <summary>
            The keysdata 371
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_372">
            <summary>
            The keysdata 372
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_373">
            <summary>
            The keysdata 373
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_374">
            <summary>
            The keysdata 374
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_375">
            <summary>
            The keysdata 375
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_376">
            <summary>
            The keysdata 376
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_377">
            <summary>
            The keysdata 377
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_378">
            <summary>
            The keysdata 378
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_379">
            <summary>
            The keysdata 379
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_380">
            <summary>
            The keysdata 380
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_381">
            <summary>
            The keysdata 381
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_382">
            <summary>
            The keysdata 382
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_383">
            <summary>
            The keysdata 383
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_384">
            <summary>
            The keysdata 384
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_385">
            <summary>
            The keysdata 385
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_386">
            <summary>
            The keysdata 386
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_387">
            <summary>
            The keysdata 387
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_388">
            <summary>
            The keysdata 388
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_389">
            <summary>
            The keysdata 389
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_390">
            <summary>
            The keysdata 390
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_391">
            <summary>
            The keysdata 391
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_392">
            <summary>
            The keysdata 392
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_393">
            <summary>
            The keysdata 393
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_394">
            <summary>
            The keysdata 394
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_395">
            <summary>
            The keysdata 395
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_396">
            <summary>
            The keysdata 396
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_397">
            <summary>
            The keysdata 397
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_398">
            <summary>
            The keysdata 398
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_399">
            <summary>
            The keysdata 399
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_400">
            <summary>
            The keysdata 400
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_401">
            <summary>
            The keysdata 401
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_402">
            <summary>
            The keysdata 402
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_403">
            <summary>
            The keysdata 403
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_404">
            <summary>
            The keysdata 404
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_405">
            <summary>
            The keysdata 405
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_406">
            <summary>
            The keysdata 406
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_407">
            <summary>
            The keysdata 407
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_408">
            <summary>
            The keysdata 408
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_409">
            <summary>
            The keysdata 409
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_410">
            <summary>
            The keysdata 410
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_411">
            <summary>
            The keysdata 411
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_412">
            <summary>
            The keysdata 412
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_413">
            <summary>
            The keysdata 413
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_414">
            <summary>
            The keysdata 414
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_415">
            <summary>
            The keysdata 415
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_416">
            <summary>
            The keysdata 416
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_417">
            <summary>
            The keysdata 417
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_418">
            <summary>
            The keysdata 418
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_419">
            <summary>
            The keysdata 419
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_420">
            <summary>
            The keysdata 420
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_421">
            <summary>
            The keysdata 421
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_422">
            <summary>
            The keysdata 422
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_423">
            <summary>
            The keysdata 423
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_424">
            <summary>
            The keysdata 424
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_425">
            <summary>
            The keysdata 425
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_426">
            <summary>
            The keysdata 426
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_427">
            <summary>
            The keysdata 427
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_428">
            <summary>
            The keysdata 428
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_429">
            <summary>
            The keysdata 429
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_430">
            <summary>
            The keysdata 430
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_431">
            <summary>
            The keysdata 431
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_432">
            <summary>
            The keysdata 432
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_433">
            <summary>
            The keysdata 433
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_434">
            <summary>
            The keysdata 434
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_435">
            <summary>
            The keysdata 435
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_436">
            <summary>
            The keysdata 436
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_437">
            <summary>
            The keysdata 437
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_438">
            <summary>
            The keysdata 438
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_439">
            <summary>
            The keysdata 439
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_440">
            <summary>
            The keysdata 440
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_441">
            <summary>
            The keysdata 441
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_442">
            <summary>
            The keysdata 442
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_443">
            <summary>
            The keysdata 443
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_444">
            <summary>
            The keysdata 444
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_445">
            <summary>
            The keysdata 445
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_446">
            <summary>
            The keysdata 446
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_447">
            <summary>
            The keysdata 447
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_448">
            <summary>
            The keysdata 448
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_449">
            <summary>
            The keysdata 449
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_450">
            <summary>
            The keysdata 450
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_451">
            <summary>
            The keysdata 451
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_452">
            <summary>
            The keysdata 452
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_453">
            <summary>
            The keysdata 453
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_454">
            <summary>
            The keysdata 454
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_455">
            <summary>
            The keysdata 455
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_456">
            <summary>
            The keysdata 456
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_457">
            <summary>
            The keysdata 457
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_458">
            <summary>
            The keysdata 458
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_459">
            <summary>
            The keysdata 459
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_460">
            <summary>
            The keysdata 460
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_461">
            <summary>
            The keysdata 461
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_462">
            <summary>
            The keysdata 462
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_463">
            <summary>
            The keysdata 463
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_464">
            <summary>
            The keysdata 464
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_465">
            <summary>
            The keysdata 465
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_466">
            <summary>
            The keysdata 466
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_467">
            <summary>
            The keysdata 467
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_468">
            <summary>
            The keysdata 468
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_469">
            <summary>
            The keysdata 469
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_470">
            <summary>
            The keysdata 470
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_471">
            <summary>
            The keysdata 471
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_472">
            <summary>
            The keysdata 472
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_473">
            <summary>
            The keysdata 473
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_474">
            <summary>
            The keysdata 474
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_475">
            <summary>
            The keysdata 475
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_476">
            <summary>
            The keysdata 476
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_477">
            <summary>
            The keysdata 477
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_478">
            <summary>
            The keysdata 478
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_479">
            <summary>
            The keysdata 479
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_480">
            <summary>
            The keysdata 480
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_481">
            <summary>
            The keysdata 481
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_482">
            <summary>
            The keysdata 482
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_483">
            <summary>
            The keysdata 483
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_484">
            <summary>
            The keysdata 484
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_485">
            <summary>
            The keysdata 485
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_486">
            <summary>
            The keysdata 486
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_487">
            <summary>
            The keysdata 487
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_488">
            <summary>
            The keysdata 488
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_489">
            <summary>
            The keysdata 489
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_490">
            <summary>
            The keysdata 490
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_491">
            <summary>
            The keysdata 491
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_492">
            <summary>
            The keysdata 492
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_493">
            <summary>
            The keysdata 493
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_494">
            <summary>
            The keysdata 494
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_495">
            <summary>
            The keysdata 495
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_496">
            <summary>
            The keysdata 496
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_497">
            <summary>
            The keysdata 497
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_498">
            <summary>
            The keysdata 498
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_499">
            <summary>
            The keysdata 499
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_500">
            <summary>
            The keysdata 500
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_501">
            <summary>
            The keysdata 501
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_502">
            <summary>
            The keysdata 502
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_503">
            <summary>
            The keysdata 503
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_504">
            <summary>
            The keysdata 504
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_505">
            <summary>
            The keysdata 505
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_506">
            <summary>
            The keysdata 506
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_507">
            <summary>
            The keysdata 507
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_508">
            <summary>
            The keysdata 508
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_509">
            <summary>
            The keysdata 509
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_510">
            <summary>
            The keysdata 510
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_511">
            <summary>
            The keysdata 511
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_512">
            <summary>
            The keysdata 512
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_513">
            <summary>
            The keysdata 513
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_514">
            <summary>
            The keysdata 514
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_515">
            <summary>
            The keysdata 515
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_516">
            <summary>
            The keysdata 516
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_517">
            <summary>
            The keysdata 517
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_518">
            <summary>
            The keysdata 518
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_519">
            <summary>
            The keysdata 519
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_520">
            <summary>
            The keysdata 520
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_521">
            <summary>
            The keysdata 521
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_522">
            <summary>
            The keysdata 522
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_523">
            <summary>
            The keysdata 523
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_524">
            <summary>
            The keysdata 524
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_525">
            <summary>
            The keysdata 525
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_526">
            <summary>
            The keysdata 526
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_527">
            <summary>
            The keysdata 527
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_528">
            <summary>
            The keysdata 528
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_529">
            <summary>
            The keysdata 529
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_530">
            <summary>
            The keysdata 530
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_531">
            <summary>
            The keysdata 531
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_532">
            <summary>
            The keysdata 532
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_533">
            <summary>
            The keysdata 533
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_534">
            <summary>
            The keysdata 534
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_535">
            <summary>
            The keysdata 535
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_536">
            <summary>
            The keysdata 536
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_537">
            <summary>
            The keysdata 537
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_538">
            <summary>
            The keysdata 538
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_539">
            <summary>
            The keysdata 539
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_540">
            <summary>
            The keysdata 540
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_541">
            <summary>
            The keysdata 541
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_542">
            <summary>
            The keysdata 542
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_543">
            <summary>
            The keysdata 543
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_544">
            <summary>
            The keysdata 544
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_545">
            <summary>
            The keysdata 545
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_546">
            <summary>
            The keysdata 546
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_547">
            <summary>
            The keysdata 547
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_548">
            <summary>
            The keysdata 548
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_549">
            <summary>
            The keysdata 549
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_550">
            <summary>
            The keysdata 550
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_551">
            <summary>
            The keysdata 551
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_552">
            <summary>
            The keysdata 552
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_553">
            <summary>
            The keysdata 553
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_554">
            <summary>
            The keysdata 554
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_555">
            <summary>
            The keysdata 555
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_556">
            <summary>
            The keysdata 556
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_557">
            <summary>
            The keysdata 557
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_558">
            <summary>
            The keysdata 558
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_559">
            <summary>
            The keysdata 559
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_560">
            <summary>
            The keysdata 560
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_561">
            <summary>
            The keysdata 561
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_562">
            <summary>
            The keysdata 562
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_563">
            <summary>
            The keysdata 563
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_564">
            <summary>
            The keysdata 564
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_565">
            <summary>
            The keysdata 565
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_566">
            <summary>
            The keysdata 566
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_567">
            <summary>
            The keysdata 567
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_568">
            <summary>
            The keysdata 568
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_569">
            <summary>
            The keysdata 569
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_570">
            <summary>
            The keysdata 570
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_571">
            <summary>
            The keysdata 571
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_572">
            <summary>
            The keysdata 572
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_573">
            <summary>
            The keysdata 573
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_574">
            <summary>
            The keysdata 574
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_575">
            <summary>
            The keysdata 575
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_576">
            <summary>
            The keysdata 576
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_577">
            <summary>
            The keysdata 577
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_578">
            <summary>
            The keysdata 578
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_579">
            <summary>
            The keysdata 579
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_580">
            <summary>
            The keysdata 580
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_581">
            <summary>
            The keysdata 581
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_582">
            <summary>
            The keysdata 582
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_583">
            <summary>
            The keysdata 583
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_584">
            <summary>
            The keysdata 584
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_585">
            <summary>
            The keysdata 585
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_586">
            <summary>
            The keysdata 586
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_587">
            <summary>
            The keysdata 587
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_588">
            <summary>
            The keysdata 588
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_589">
            <summary>
            The keysdata 589
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_590">
            <summary>
            The keysdata 590
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_591">
            <summary>
            The keysdata 591
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_592">
            <summary>
            The keysdata 592
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_593">
            <summary>
            The keysdata 593
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_594">
            <summary>
            The keysdata 594
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_595">
            <summary>
            The keysdata 595
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_596">
            <summary>
            The keysdata 596
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_597">
            <summary>
            The keysdata 597
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_598">
            <summary>
            The keysdata 598
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_599">
            <summary>
            The keysdata 599
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_600">
            <summary>
            The keysdata 600
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_601">
            <summary>
            The keysdata 601
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_602">
            <summary>
            The keysdata 602
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_603">
            <summary>
            The keysdata 603
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_604">
            <summary>
            The keysdata 604
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_605">
            <summary>
            The keysdata 605
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_606">
            <summary>
            The keysdata 606
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_607">
            <summary>
            The keysdata 607
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_608">
            <summary>
            The keysdata 608
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_609">
            <summary>
            The keysdata 609
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_610">
            <summary>
            The keysdata 610
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_611">
            <summary>
            The keysdata 611
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_612">
            <summary>
            The keysdata 612
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_613">
            <summary>
            The keysdata 613
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_614">
            <summary>
            The keysdata 614
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_615">
            <summary>
            The keysdata 615
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_616">
            <summary>
            The keysdata 616
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_617">
            <summary>
            The keysdata 617
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_618">
            <summary>
            The keysdata 618
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_619">
            <summary>
            The keysdata 619
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_620">
            <summary>
            The keysdata 620
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_621">
            <summary>
            The keysdata 621
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_622">
            <summary>
            The keysdata 622
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_623">
            <summary>
            The keysdata 623
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_624">
            <summary>
            The keysdata 624
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_625">
            <summary>
            The keysdata 625
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_626">
            <summary>
            The keysdata 626
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_627">
            <summary>
            The keysdata 627
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_628">
            <summary>
            The keysdata 628
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_629">
            <summary>
            The keysdata 629
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_630">
            <summary>
            The keysdata 630
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_631">
            <summary>
            The keysdata 631
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_632">
            <summary>
            The keysdata 632
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_633">
            <summary>
            The keysdata 633
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_634">
            <summary>
            The keysdata 634
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_635">
            <summary>
            The keysdata 635
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_636">
            <summary>
            The keysdata 636
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_637">
            <summary>
            The keysdata 637
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_638">
            <summary>
            The keysdata 638
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_639">
            <summary>
            The keysdata 639
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_640">
            <summary>
            The keysdata 640
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_641">
            <summary>
            The keysdata 641
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_642">
            <summary>
            The keysdata 642
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_643">
            <summary>
            The keysdata 643
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_644">
            <summary>
            The keysdata 644
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_645">
            <summary>
            The keysdata 645
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_646">
            <summary>
            The keysdata 646
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_647">
            <summary>
            The keysdata 647
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_648">
            <summary>
            The keysdata 648
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_649">
            <summary>
            The keysdata 649
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_650">
            <summary>
            The keysdata 650
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.KeysData_651">
            <summary>
            The keysdata 651
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.WantCaptureMouseUnlessPopupClose">
            <summary>
            The want capture mouse unless popup close
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MousePosPrev">
            <summary>
            The mouse pos prev
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedPos_0">
            <summary>
            The mouseclickedpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedPos_1">
            <summary>
            The mouseclickedpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedPos_2">
            <summary>
            The mouseclickedpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedPos_3">
            <summary>
            The mouseclickedpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedPos_4">
            <summary>
            The mouseclickedpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedTime">
            <summary>
            The mouse clicked time
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClicked">
            <summary>
            The mouse clicked
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDoubleClicked">
            <summary>
            The mouse double clicked
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedCount">
            <summary>
            The mouse clicked count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseClickedLastCount">
            <summary>
            The mouse clicked last count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseReleased">
            <summary>
            The mouse released
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDownOwned">
            <summary>
            The mouse down owned
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDownOwnedUnlessPopupClose">
            <summary>
            The mouse down owned unless popup close
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseWheelRequestAxisSwap">
            <summary>
            The mouse wheel request axis swap
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDownDuration">
            <summary>
            The mouse down duration
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDownDurationPrev">
            <summary>
            The mouse down duration prev
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragMaxDistanceAbs_0">
            <summary>
            The mousedragmaxdistanceabs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragMaxDistanceAbs_1">
            <summary>
            The mousedragmaxdistanceabs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragMaxDistanceAbs_2">
            <summary>
            The mousedragmaxdistanceabs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragMaxDistanceAbs_3">
            <summary>
            The mousedragmaxdistanceabs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragMaxDistanceAbs_4">
            <summary>
            The mousedragmaxdistanceabs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.MouseDragMaxDistanceSqr">
            <summary>
            The mouse drag max distance sqr
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.PenPressure">
            <summary>
            The pen pressure
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.AppFocusLost">
            <summary>
            The app focus lost
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.AppAcceptingEvents">
            <summary>
            The app accepting events
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendUsingLegacyKeyArrays">
            <summary>
            The backend using legacy key arrays
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.BackendUsingLegacyNavInputArray">
            <summary>
            The backend using legacy nav input array
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.InputQueueSurrogate">
            <summary>
            The input queue surrogate
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiIO.InputQueueCharacters">
            <summary>
            The input queue characters
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiIOPtr">
            <summary>
            The im gui io ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.#ctor(ImGuiNET.ImGuiIO*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiIOPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiIOPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.op_Implicit(ImGuiNET.ImGuiIO*)~ImGuiNET.ImGuiIOPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.op_Implicit(ImGuiNET.ImGuiIOPtr)~ImGuiNET.ImGuiIO*">
            <summary>
            /
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiIOPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigFlags">
            <summary>
            Gets the value of the config flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendFlags">
            <summary>
            Gets the value of the backend flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.DisplaySize">
            <summary>
            Gets the value of the display size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.DeltaTime">
            <summary>
            Gets the value of the delta time
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.IniSavingRate">
            <summary>
            Gets the value of the ini saving rate
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.IniFilename">
            <summary>
            Gets the value of the ini filename
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.LogFilename">
            <summary>
            Gets the value of the log filename
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDoubleClickTime">
            <summary>
            Gets the value of the mouse double click time
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDoubleClickMaxDist">
            <summary>
            Gets the value of the mouse double click max dist
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDragThreshold">
            <summary>
            Gets the value of the mouse drag threshold
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyRepeatDelay">
            <summary>
            Gets the value of the key repeat delay
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyRepeatRate">
            <summary>
            Gets the value of the key repeat rate
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.HoverDelayNormal">
            <summary>
            Gets the value of the hover delay normal
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.HoverDelayShort">
            <summary>
            Gets the value of the hover delay short
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.UserData">
            <summary>
            Gets or sets the value of the user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.Fonts">
            <summary>
            Gets the value of the fonts
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.FontGlobalScale">
            <summary>
            Gets the value of the font global scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.FontAllowUserScaling">
            <summary>
            Gets the value of the font allow user scaling
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.FontDefault">
            <summary>
            Gets the value of the font default
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.DisplayFramebufferScale">
            <summary>
            Gets the value of the display framebuffer scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDockingNoSplit">
            <summary>
            Gets the value of the config docking no split
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDockingWithShift">
            <summary>
            Gets the value of the config docking with shift
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDockingAlwaysTabBar">
            <summary>
            Gets the value of the config docking always tab bar
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDockingTransparentPayload">
            <summary>
            Gets the value of the config docking transparent payload
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigViewportsNoAutoMerge">
            <summary>
            Gets the value of the config viewports no auto merge
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigViewportsNoTaskBarIcon">
            <summary>
            Gets the value of the config viewports no task bar icon
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigViewportsNoDecoration">
            <summary>
            Gets the value of the config viewports no decoration
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigViewportsNoDefaultParent">
            <summary>
            Gets the value of the config viewports no default parent
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDrawCursor">
            <summary>
            Gets the value of the mouse draw cursor
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigMacOSXBehaviors">
            <summary>
            Gets the value of the config mac osx behaviors
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigInputTrickleEventQueue">
            <summary>
            Gets the value of the config input trickle event queue
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigInputTextCursorBlink">
            <summary>
            Gets the value of the config input text cursor blink
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigInputTextEnterKeepActive">
            <summary>
            Gets the value of the config input text enter keep active
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDragClickToInputText">
            <summary>
            Gets the value of the config drag click to input text
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigWindowsResizeFromEdges">
            <summary>
            Gets the value of the config windows resize from edges
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigWindowsMoveFromTitleBarOnly">
            <summary>
            Gets the value of the config windows move from title bar only
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigMemoryCompactTimer">
            <summary>
            Gets the value of the config memory compact timer
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDebugBeginReturnValueOnce">
            <summary>
            Gets the value of the config debug begin return value once
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ConfigDebugBeginReturnValueLoop">
            <summary>
            Gets the value of the config debug begin return value loop
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendPlatformName">
            <summary>
            Gets the value of the backend platform name
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendRendererName">
            <summary>
            Gets the value of the backend renderer name
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendPlatformUserData">
            <summary>
            Gets or sets the value of the backend platform user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendRendererUserData">
            <summary>
            Gets or sets the value of the backend renderer user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendLanguageUserData">
            <summary>
            Gets or sets the value of the backend language user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.GetClipboardTextFn">
            <summary>
            Gets the value of the get clipboard text fn
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.SetClipboardTextFn">
            <summary>
            Gets the value of the set clipboard text fn
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.ClipboardUserData">
            <summary>
            Gets or sets the value of the clipboard user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.SetPlatformImeDataFn">
            <summary>
            Gets the value of the set platform ime data fn
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr._UnusedPadding">
            <summary>
            Gets or sets the value of the  unusedpadding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.WantCaptureMouse">
            <summary>
            Gets the value of the want capture mouse
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.WantCaptureKeyboard">
            <summary>
            Gets the value of the want capture keyboard
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.WantTextInput">
            <summary>
            Gets the value of the want text input
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.WantSetMousePos">
            <summary>
            Gets the value of the want set mouse pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.WantSaveIniSettings">
            <summary>
            Gets the value of the want save ini settings
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.NavActive">
            <summary>
            Gets the value of the nav active
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.NavVisible">
            <summary>
            Gets the value of the nav visible
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.Framerate">
            <summary>
            Gets the value of the framerate
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MetricsRenderVertices">
            <summary>
            Gets the value of the metrics render vertices
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MetricsRenderIndices">
            <summary>
            Gets the value of the metrics render indices
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MetricsRenderWindows">
            <summary>
            Gets the value of the metrics render windows
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MetricsActiveWindows">
            <summary>
            Gets the value of the metrics active windows
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MetricsActiveAllocations">
            <summary>
            Gets the value of the metrics active allocations
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDelta">
            <summary>
            Gets the value of the mouse delta
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyMap">
            <summary>
            Gets the value of the key map
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeysDown">
            <summary>
            Gets the value of the keys down
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.NavInputs">
            <summary>
            Gets the value of the nav inputs
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.Ctx">
            <summary>
            Gets the value of the ctx
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MousePos">
            <summary>
            Gets the value of the mouse pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDown">
            <summary>
            Gets the value of the mouse down
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseWheel">
            <summary>
            Gets the value of the mouse wheel
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseWheelH">
            <summary>
            Gets the value of the mouse wheel h
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseSource">
            <summary>
            Gets the value of the mouse source
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseHoveredViewport">
            <summary>
            Gets the value of the mouse hovered viewport
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyCtrl">
            <summary>
            Gets the value of the key ctrl
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyShift">
            <summary>
            Gets the value of the key shift
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyAlt">
            <summary>
            Gets the value of the key alt
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeySuper">
            <summary>
            Gets the value of the key super
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeyMods">
            <summary>
            Gets the value of the key mods
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.KeysData">
            <summary>
            Gets the value of the keys data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.WantCaptureMouseUnlessPopupClose">
            <summary>
            Gets the value of the want capture mouse unless popup close
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MousePosPrev">
            <summary>
            Gets the value of the mouse pos prev
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseClickedPos">
            <summary>
            Gets the value of the mouse clicked pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseClickedTime">
            <summary>
            Gets the value of the mouse clicked time
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseClicked">
            <summary>
            Gets the value of the mouse clicked
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDoubleClicked">
            <summary>
            Gets the value of the mouse double clicked
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseClickedCount">
            <summary>
            Gets the value of the mouse clicked count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseClickedLastCount">
            <summary>
            Gets the value of the mouse clicked last count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseReleased">
            <summary>
            Gets the value of the mouse released
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDownOwned">
            <summary>
            Gets the value of the mouse down owned
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDownOwnedUnlessPopupClose">
            <summary>
            Gets the value of the mouse down owned unless popup close
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseWheelRequestAxisSwap">
            <summary>
            Gets the value of the mouse wheel request axis swap
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDownDuration">
            <summary>
            Gets the value of the mouse down duration
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDownDurationPrev">
            <summary>
            Gets the value of the mouse down duration prev
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDragMaxDistanceAbs">
            <summary>
            Gets the value of the mouse drag max distance abs
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.MouseDragMaxDistanceSqr">
            <summary>
            Gets the value of the mouse drag max distance sqr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.PenPressure">
            <summary>
            Gets the value of the pen pressure
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.AppFocusLost">
            <summary>
            Gets the value of the app focus lost
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.AppAcceptingEvents">
            <summary>
            Gets the value of the app accepting events
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendUsingLegacyKeyArrays">
            <summary>
            Gets the value of the backend using legacy key arrays
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.BackendUsingLegacyNavInputArray">
            <summary>
            Gets the value of the backend using legacy nav input array
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.InputQueueSurrogate">
            <summary>
            Gets the value of the input queue surrogate
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiIOPtr.InputQueueCharacters">
            <summary>
            Gets the value of the input queue characters
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddFocusEvent(System.Boolean)">
            <summary>
            Adds the focus event using the specified focused
            </summary>
            <param name="focused">The focused</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddInputCharacter(System.UInt32)">
            <summary>
            Adds the input character using the specified c
            </summary>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddInputCharactersUTF8(System.String)">
            <summary>
            Adds the input characters utf 8 using the specified str
            </summary>
            <param name="str">The str</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddInputCharacterUTF16(System.UInt16)">
            <summary>
            Adds the input character utf 16 using the specified c
            </summary>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddKeyAnalogEvent(ImGuiNET.ImGuiKey,System.Boolean,System.Single)">
            <summary>
            Adds the key analog event using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="down">The down</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddKeyEvent(ImGuiNET.ImGuiKey,System.Boolean)">
            <summary>
            Adds the key event using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="down">The down</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddMouseButtonEvent(System.Int32,System.Boolean)">
            <summary>
            Adds the mouse button event using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="down">The down</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddMousePosEvent(System.Single,System.Single)">
            <summary>
            Adds the mouse pos event using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddMouseSourceEvent(ImGuiNET.ImGuiMouseSource)">
            <summary>
            Adds the mouse source event using the specified source
            </summary>
            <param name="source">The source</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddMouseViewportEvent(System.UInt32)">
            <summary>
            Adds the mouse viewport event using the specified id
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.AddMouseWheelEvent(System.Single,System.Single)">
            <summary>
            Adds the mouse wheel event using the specified wheel x
            </summary>
            <param name="wheel_x">The wheel</param>
            <param name="wheel_y">The wheel</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.ClearInputCharacters">
            <summary>
            Clears the input characters
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.ClearInputKeys">
            <summary>
            Clears the input keys
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.SetAppAcceptingEvents(System.Boolean)">
            <summary>
            Sets the app accepting events using the specified accepting events
            </summary>
            <param name="accepting_events">The accepting events</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.SetKeyEventNativeData(ImGuiNET.ImGuiKey,System.Int32,System.Int32)">
            <summary>
            Sets the key event native data using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="native_keycode">The native keycode</param>
            <param name="native_scancode">The native scancode</param>
        </member>
        <member name="M:ImGuiNET.ImGuiIOPtr.SetKeyEventNativeData(ImGuiNET.ImGuiKey,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the key event native data using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="native_keycode">The native keycode</param>
            <param name="native_scancode">The native scancode</param>
            <param name="native_legacy_index">The native legacy index</param>
        </member>
        <member name="T:ImGuiNET.ImGuiKey">
            <summary>
            The im gui key enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.None">
            <summary>
            The none im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Tab">
            <summary>
            The tab im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.LeftArrow">
            <summary>
            The left arrow im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.RightArrow">
            <summary>
            The right arrow im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.UpArrow">
            <summary>
            The up arrow im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.DownArrow">
            <summary>
            The down arrow im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.PageUp">
            <summary>
            The page up im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.PageDown">
            <summary>
            The page down im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Home">
            <summary>
            The home im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.End">
            <summary>
            The end im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Insert">
            <summary>
            The insert im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Delete">
            <summary>
            The delete im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Backspace">
            <summary>
            The backspace im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Space">
            <summary>
            The space im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Enter">
            <summary>
            The enter im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Escape">
            <summary>
            The escape im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.LeftCtrl">
            <summary>
            The left ctrl im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.LeftShift">
            <summary>
            The left shift im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.LeftAlt">
            <summary>
            The left alt im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.LeftSuper">
            <summary>
            The left super im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.RightCtrl">
            <summary>
            The right ctrl im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.RightShift">
            <summary>
            The right shift im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.RightAlt">
            <summary>
            The right alt im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.RightSuper">
            <summary>
            The right super im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Menu">
            <summary>
            The menu im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._0">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._1">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._2">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._3">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._4">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._5">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._6">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._7">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._8">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey._9">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.A">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.B">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.C">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.D">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.E">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.G">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.H">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.I">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.J">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.K">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.L">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.M">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.N">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.O">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.P">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Q">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.R">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.S">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.T">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.U">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.V">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.W">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.X">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Y">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Z">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F1">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F2">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F3">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F4">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F5">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F6">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F7">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F8">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F9">
            <summary>
            The  im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F10">
            <summary>
            The 10 im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F11">
            <summary>
            The 11 im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.F12">
            <summary>
            The 12 im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Apostrophe">
            <summary>
            The apostrophe im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Comma">
            <summary>
            The comma im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Minus">
            <summary>
            The minus im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Period">
            <summary>
            The period im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Slash">
            <summary>
            The slash im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Semicolon">
            <summary>
            The semicolon im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Equal">
            <summary>
            The equal im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.LeftBracket">
            <summary>
            The left bracket im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Backslash">
            <summary>
            The backslash im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.RightBracket">
            <summary>
            The right bracket im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GraveAccent">
            <summary>
            The grave accent im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.CapsLock">
            <summary>
            The caps lock im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ScrollLock">
            <summary>
            The scroll lock im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.NumLock">
            <summary>
            The num lock im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.PrintScreen">
            <summary>
            The print screen im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Pause">
            <summary>
            The pause im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad0">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad1">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad2">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad3">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad4">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad5">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad6">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad7">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad8">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.Keypad9">
            <summary>
            The keypad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadDecimal">
            <summary>
            The keypad decimal im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadDivide">
            <summary>
            The keypad divide im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadMultiply">
            <summary>
            The keypad multiply im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadSubtract">
            <summary>
            The keypad subtract im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadAdd">
            <summary>
            The keypad add im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadEnter">
            <summary>
            The keypad enter im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeypadEqual">
            <summary>
            The keypad equal im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadStart">
            <summary>
            The gamepad start im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadBack">
            <summary>
            The gamepad back im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadFaceLeft">
            <summary>
            The gamepad face left im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadFaceRight">
            <summary>
            The gamepad face right im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadFaceUp">
            <summary>
            The gamepad face up im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadFaceDown">
            <summary>
            The gamepad face down im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadDpadLeft">
            <summary>
            The gamepad dpad left im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadDpadRight">
            <summary>
            The gamepad dpad right im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadDpadUp">
            <summary>
            The gamepad dpad up im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadDpadDown">
            <summary>
            The gamepad dpad down im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadL1">
            <summary>
            The gamepad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadR1">
            <summary>
            The gamepad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadL2">
            <summary>
            The gamepad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadR2">
            <summary>
            The gamepad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadL3">
            <summary>
            The gamepad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadR3">
            <summary>
            The gamepad im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadLStickLeft">
            <summary>
            The gamepad stick left im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadLStickRight">
            <summary>
            The gamepad stick right im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadLStickUp">
            <summary>
            The gamepad stick up im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadLStickDown">
            <summary>
            The gamepad stick down im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadRStickLeft">
            <summary>
            The gamepad stick left im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadRStickRight">
            <summary>
            The gamepad stick right im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadRStickUp">
            <summary>
            The gamepad stick up im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.GamepadRStickDown">
            <summary>
            The gamepad stick down im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseLeft">
            <summary>
            The mouse left im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseRight">
            <summary>
            The mouse right im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseMiddle">
            <summary>
            The mouse middle im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseX1">
            <summary>
            The mouse im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseX2">
            <summary>
            The mouse im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseWheelX">
            <summary>
            The mouse wheel im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.MouseWheelY">
            <summary>
            The mouse wheel im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ReservedForModCtrl">
            <summary>
            The reserved for mod ctrl im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ReservedForModShift">
            <summary>
            The reserved for mod shift im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ReservedForModAlt">
            <summary>
            The reserved for mod alt im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ReservedForModSuper">
            <summary>
            The reserved for mod super im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.COUNT">
            <summary>
            The count im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModNone">
            <summary>
            The mod none im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModCtrl">
            <summary>
            The mod ctrl im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModShift">
            <summary>
            The mod shift im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModAlt">
            <summary>
            The mod alt im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModSuper">
            <summary>
            The mod super im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModShortcut">
            <summary>
            The mod shortcut im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.ModMask">
            <summary>
            The mod mask im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.NamedKey_BEGIN">
            <summary>
            The namedkey begin im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.NamedKey_END">
            <summary>
            The namedkey end im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.NamedKey_COUNT">
            <summary>
            The namedkey count im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeysData_SIZE">
            <summary>
            The keysdata size im gui key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKey.KeysData_OFFSET">
            <summary>
            The keysdata offset im gui key
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiKeyData">
            <summary>
            The im gui key data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKeyData.Down">
            <summary>
            The down
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKeyData.DownDuration">
            <summary>
            The down duration
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKeyData.DownDurationPrev">
            <summary>
            The down duration prev
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiKeyData.AnalogValue">
            <summary>
            The analog value
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiKeyDataPtr">
            <summary>
            The im gui key data ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiKeyDataPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiKeyDataPtr.#ctor(ImGuiNET.ImGuiKeyData*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiKeyDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiKeyDataPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiKeyDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiKeyDataPtr.op_Implicit(ImGuiNET.ImGuiKeyData*)~ImGuiNET.ImGuiKeyDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiKeyDataPtr.op_Implicit(ImGuiNET.ImGuiKeyDataPtr)~ImGuiNET.ImGuiKeyData*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiKeyDataPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiKeyDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiKeyDataPtr.Down">
            <summary>
            Gets the value of the down
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiKeyDataPtr.DownDuration">
            <summary>
            Gets the value of the down duration
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiKeyDataPtr.DownDurationPrev">
            <summary>
            Gets the value of the down duration prev
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiKeyDataPtr.AnalogValue">
            <summary>
            Gets the value of the analog value
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiListClipper">
            <summary>
            The im gui list clipper
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.Ctx">
            <summary>
            The ctx
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.DisplayStart">
            <summary>
            The display start
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.DisplayEnd">
            <summary>
            The display end
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.ItemsCount">
            <summary>
            The items count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.ItemsHeight">
            <summary>
            The items height
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.StartPosY">
            <summary>
            The start pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiListClipper.TempData">
            <summary>
            The temp data
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiListClipperPtr">
            <summary>
            The im gui list clipper ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.#ctor(ImGuiNET.ImGuiListClipper*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiListClipperPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiListClipperPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.op_Implicit(ImGuiNET.ImGuiListClipper*)~ImGuiNET.ImGuiListClipperPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.op_Implicit(ImGuiNET.ImGuiListClipperPtr)~ImGuiNET.ImGuiListClipper*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiListClipperPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.Ctx">
            <summary>
            Gets the value of the ctx
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.DisplayStart">
            <summary>
            Gets the value of the display start
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.DisplayEnd">
            <summary>
            Gets the value of the display end
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.ItemsCount">
            <summary>
            Gets the value of the items count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.ItemsHeight">
            <summary>
            Gets the value of the items height
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.StartPosY">
            <summary>
            Gets the value of the start pos y
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiListClipperPtr.TempData">
            <summary>
            Gets or sets the value of the temp data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.Begin(System.Int32)">
            <summary>
            Begins the items count
            </summary>
            <param name="items_count">The items count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.Begin(System.Int32,System.Single)">
            <summary>
            Begins the items count
            </summary>
            <param name="items_count">The items count</param>
            <param name="items_height">The items height</param>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.End">
            <summary>
            Ends this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.ForceDisplayRangeByIndices(System.Int32,System.Int32)">
            <summary>
            Forces the display range by indices using the specified item min
            </summary>
            <param name="item_min">The item min</param>
            <param name="item_max">The item max</param>
        </member>
        <member name="M:ImGuiNET.ImGuiListClipperPtr.Step">
            <summary>
            Describes whether this instance step
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:ImGuiNET.ImGuiModFlags">
            <summary>
            The im gui mod flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiModFlags.None">
            <summary>
            The none im gui mod flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiModFlags.Ctrl">
            <summary>
            The ctrl im gui mod flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiModFlags.Shift">
            <summary>
            The shift im gui mod flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiModFlags.Alt">
            <summary>
            The alt im gui mod flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiModFlags.Super">
            <summary>
            The super im gui mod flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiMouseButton">
            <summary>
            The im gui mouse button enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseButton.Left">
            <summary>
            The left im gui mouse button
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseButton.Right">
            <summary>
            The right im gui mouse button
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseButton.Middle">
            <summary>
            The middle im gui mouse button
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseButton.COUNT">
            <summary>
            The count im gui mouse button
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiMouseCursor">
            <summary>
            The im gui mouse cursor enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.None">
            <summary>
            The none im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.Arrow">
            <summary>
            The arrow im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.TextInput">
            <summary>
            The text input im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.ResizeAll">
            <summary>
            The resize all im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.ResizeNS">
            <summary>
            The resize ns im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.ResizeEW">
            <summary>
            The resize ew im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.ResizeNESW">
            <summary>
            The resize nesw im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.ResizeNWSE">
            <summary>
            The resize nwse im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.Hand">
            <summary>
            The hand im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.NotAllowed">
            <summary>
            The not allowed im gui mouse cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseCursor.COUNT">
            <summary>
            The count im gui mouse cursor
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiMouseSource">
            <summary>
            The im gui mouse source enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseSource.Mouse">
            <summary>
            The mouse im gui mouse source
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseSource.TouchScreen">
            <summary>
            The touch screen im gui mouse source
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseSource.Pen">
            <summary>
            The pen im gui mouse source
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiMouseSource.COUNT">
            <summary>
            The count im gui mouse source
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiNative">
            <summary>
            The im gui native class
            </summary>
            <summary>
            The im gui native class
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igAcceptDragDropPayload(System.Byte*,ImGuiNET.ImGuiDragDropFlags)">
            <summary>
            Igs the accept drag drop payload using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="flags">The flags</param>
            <returns>The im gui payload</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igAlignTextToFramePadding">
            <summary>
            Igs the align text to frame padding
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igArrowButton(System.Byte*,ImGuiNET.ImGuiDir)">
            <summary>
            Igs the arrow button using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="dir">The dir</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBegin(System.Byte*,System.Byte*,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Igs the begin using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="p_open">The open</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginChild_Str(System.Byte*,System.Numerics.Vector2,System.Byte,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Igs the begin child str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <param name="border">The border</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginChild_ID(System.UInt32,System.Numerics.Vector2,System.Byte,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Igs the begin child id using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="border">The border</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginChildFrame(System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Igs the begin child frame using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginCombo(System.Byte*,System.Byte*,ImGuiNET.ImGuiComboFlags)">
            <summary>
            Igs the begin combo using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="preview_value">The preview value</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginDisabled(System.Byte)">
            <summary>
            Igs the begin disabled using the specified disabled
            </summary>
            <param name="disabled">The disabled</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginDragDropSource(ImGuiNET.ImGuiDragDropFlags)">
            <summary>
            Igs the begin drag drop source using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginDragDropTarget">
            <summary>
            Igs the begin drag drop target
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginGroup">
            <summary>
            Igs the begin group
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginListBox(System.Byte*,System.Numerics.Vector2)">
            <summary>
            Igs the begin list box using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginMainMenuBar">
            <summary>
            Igs the begin main menu bar
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginMenu(System.Byte*,System.Byte)">
            <summary>
            Igs the begin menu using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="enabled">The enabled</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginMenuBar">
            <summary>
            Igs the begin menu bar
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginPopup(System.Byte*,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Igs the begin popup using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginPopupContextItem(System.Byte*,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the begin popup context item using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginPopupContextVoid(System.Byte*,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the begin popup context void using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginPopupContextWindow(System.Byte*,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the begin popup context window using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginPopupModal(System.Byte*,System.Byte*,ImGuiNET.ImGuiWindowFlags)">
            <summary>
            Igs the begin popup modal using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="p_open">The open</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginTabBar(System.Byte*,ImGuiNET.ImGuiTabBarFlags)">
            <summary>
            Igs the begin tab bar using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginTabItem(System.Byte*,System.Byte*,ImGuiNET.ImGuiTabItemFlags)">
            <summary>
            Igs the begin tab item using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="p_open">The open</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginTable(System.Byte*,System.Int32,ImGuiNET.ImGuiTableFlags,System.Numerics.Vector2,System.Single)">
            <summary>
            Igs the begin table using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="column">The column</param>
            <param name="flags">The flags</param>
            <param name="outer_size">The outer size</param>
            <param name="inner_width">The inner width</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBeginTooltip">
            <summary>
            Igs the begin tooltip
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBullet">
            <summary>
            Igs the bullet
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igBulletText(System.Byte*)">
            <summary>
            Igs the bullet text using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igButton(System.Byte*,System.Numerics.Vector2)">
            <summary>
            Igs the button using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCalcItemWidth">
            <summary>
            Igs the calc item width
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCalcTextSize(System.Numerics.Vector2*,System.Byte*,System.Byte*,System.Byte,System.Single)">
            <summary>
            Igs the calc text size using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="text">The text</param>
            <param name="text_end">The text end</param>
            <param name="hide_text_after_double_hash">The hide text after double hash</param>
            <param name="wrap_width">The wrap width</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCheckbox(System.Byte*,System.Byte*)">
            <summary>
            Igs the checkbox using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCheckboxFlags_IntPtr(System.Byte*,System.Int32*,System.Int32)">
            <summary>
            Igs the checkbox flags int ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="flags_value">The flags value</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCheckboxFlags_UintPtr(System.Byte*,System.UInt32*,System.UInt32)">
            <summary>
            Igs the checkbox flags uint ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="flags_value">The flags value</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCloseCurrentPopup">
            <summary>
            Igs the close current popup
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCollapsingHeader_TreeNodeFlags(System.Byte*,ImGuiNET.ImGuiTreeNodeFlags)">
            <summary>
            Igs the collapsing header tree node flags using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCollapsingHeader_BoolPtr(System.Byte*,System.Byte*,ImGuiNET.ImGuiTreeNodeFlags)">
            <summary>
            Igs the collapsing header bool ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="p_visible">The visible</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorButton(System.Byte*,System.Numerics.Vector4,ImGuiNET.ImGuiColorEditFlags,System.Numerics.Vector2)">
            <summary>
            Igs the color button using the specified desc id
            </summary>
            <param name="desc_id">The desc id</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="size">The size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorConvertFloat4ToU32(System.Numerics.Vector4)">
            <summary>
            
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorConvertHSVtoRGB(System.Single,System.Single,System.Single,System.Single*,System.Single*,System.Single*)">
            <summary>
            Igs the color convert hs vto rgb using the specified h
            </summary>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <param name="out_r">The out</param>
            <param name="out_g">The out</param>
            <param name="out_b">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorConvertRGBtoHSV(System.Single,System.Single,System.Single,System.Single*,System.Single*,System.Single*)">
            <summary>
            Igs the color convert rg bto hsv using the specified r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="out_h">The out</param>
            <param name="out_s">The out</param>
            <param name="out_v">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorConvertU32ToFloat4(System.Numerics.Vector4*,System.UInt32)">
            <summary>
            
            </summary>
            <param name="pOut"></param>
            <param name="in"></param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorEdit3(System.Byte*,System.Numerics.Vector3*,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Igs the color edit 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorEdit4(System.Byte*,System.Numerics.Vector4*,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Igs the color edit 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorPicker3(System.Byte*,System.Numerics.Vector3*,ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Igs the color picker 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColorPicker4(System.Byte*,System.Numerics.Vector4*,ImGuiNET.ImGuiColorEditFlags,System.Single*)">
            <summary>
            Igs the color picker 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="ref_col">The ref col</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igColumns(System.Int32,System.Byte*,System.Byte)">
            <summary>
            Igs the columns using the specified count
            </summary>
            <param name="count">The count</param>
            <param name="id">The id</param>
            <param name="border">The border</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCombo_Str_arr(System.Byte*,System.Int32*,System.Byte**,System.Int32,System.Int32)">
            <summary>
            Igs the combo str arr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items">The items</param>
            <param name="items_count">The items count</param>
            <param name="popup_max_height_in_items">The popup max height in items</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCombo_Str(System.Byte*,System.Int32*,System.Byte*,System.Int32)">
            <summary>
            Igs the combo str using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items_separated_by_zeros">The items separated by zeros</param>
            <param name="popup_max_height_in_items">The popup max height in items</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igCreateContext(ImGuiNET.ImFontAtlas*)">
            <summary>
            Igs the create context using the specified shared font atlas
            </summary>
            <param name="shared_font_atlas">The shared font atlas</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDebugCheckVersionAndDataLayout(System.Byte*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Igs the debug check version and data layout using the specified version str
            </summary>
            <param name="version_str">The version str</param>
            <param name="sz_io">The sz io</param>
            <param name="sz_style">The sz style</param>
            <param name="sz_vec2">The sz vec2</param>
            <param name="sz_vec4">The sz vec4</param>
            <param name="sz_drawvert">The sz drawvert</param>
            <param name="sz_drawidx">The sz drawidx</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDebugTextEncoding(System.Byte*)">
            <summary>
            Igs the debug text encoding using the specified text
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDestroyContext(System.IntPtr)">
            <summary>
            Igs the destroy context using the specified ctx
            </summary>
            <param name="ctx">The ctx</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDestroyPlatformWindows">
            <summary>
            Igs the destroy platform windows
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDockSpace(System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiDockNodeFlags,ImGuiNET.ImGuiWindowClass*)">
            <summary>
            Igs the dock space using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <param name="window_class">The window class</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDockSpaceOverViewport(ImGuiNET.ImGuiViewport*,ImGuiNET.ImGuiDockNodeFlags,ImGuiNET.ImGuiWindowClass*)">
            <summary>
            Igs the dock space over viewport using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <param name="flags">The flags</param>
            <param name="window_class">The window class</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragFloat(System.Byte*,System.Single*,System.Single,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag float using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragFloat2(System.Byte*,System.Numerics.Vector2*,System.Single,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag float 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragFloat3(System.Byte*,System.Numerics.Vector3*,System.Single,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag float 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragFloat4(System.Byte*,System.Numerics.Vector4*,System.Single,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag float 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragFloatRange2(System.Byte*,System.Single*,System.Single*,System.Single,System.Single,System.Single,System.Byte*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag float range 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="format_max">The format max</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragInt(System.Byte*,System.Int32*,System.Single,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag int using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragInt2(System.Byte*,System.Int32*,System.Single,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag int 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragInt3(System.Byte*,System.Int32*,System.Single,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag int 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragInt4(System.Byte*,System.Int32*,System.Single,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag int 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragIntRange2(System.Byte*,System.Int32*,System.Int32*,System.Single,System.Int32,System.Int32,System.Byte*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag int range 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v_current_min">The current min</param>
            <param name="v_current_max">The current max</param>
            <param name="v_speed">The speed</param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="format_max">The format max</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragScalar(System.Byte*,ImGuiNET.ImGuiDataType,System.Void*,System.Single,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag scalar using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDragScalarN(System.Byte*,ImGuiNET.ImGuiDataType,System.Void*,System.Int32,System.Single,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the drag scalar n using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="v_speed">The speed</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igDummy(System.Numerics.Vector2)">
            <summary>
            Igs the dummy using the specified size
            </summary>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEnd">
            <summary>
            Igs the end
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndChild">
            <summary>
            Igs the end child
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndChildFrame">
            <summary>
            Igs the end child frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndCombo">
            <summary>
            Igs the end combo
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndDisabled">
            <summary>
            Igs the end disabled
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndDragDropSource">
            <summary>
            Igs the end drag drop source
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndDragDropTarget">
            <summary>
            Igs the end drag drop target
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndFrame">
            <summary>
            Igs the end frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndGroup">
            <summary>
            Igs the end group
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndListBox">
            <summary>
            Igs the end list box
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndMainMenuBar">
            <summary>
            Igs the end main menu bar
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndMenu">
            <summary>
            Igs the end menu
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndMenuBar">
            <summary>
            Igs the end menu bar
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndPopup">
            <summary>
            Igs the end popup
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndTabBar">
            <summary>
            Igs the end tab bar
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndTabItem">
            <summary>
            Igs the end tab item
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndTable">
            <summary>
            Igs the end table
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igEndTooltip">
            <summary>
            Igs the end tooltip
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igFindViewportByID(System.UInt32)">
            <summary>
            Igs the find viewport by id using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The im gui viewport</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igFindViewportByPlatformHandle(System.Void*)">
            <summary>
            Igs the find viewport by platform handle using the specified platform handle
            </summary>
            <param name="platform_handle">The platform handle</param>
            <returns>The im gui viewport</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetAllocatorFunctions(System.IntPtr*,System.IntPtr*,System.Void**)">
            <summary>
            Igs the get allocator functions using the specified p alloc func
            </summary>
            <param name="p_alloc_func">The alloc func</param>
            <param name="p_free_func">The free func</param>
            <param name="p_user_data">The user data</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetBackgroundDrawList_Nil">
            <summary>
            Igs the get background draw list nil
            </summary>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetBackgroundDrawList_ViewportPtr(ImGuiNET.ImGuiViewport*)">
            <summary>
            Igs the get background draw list viewport ptr using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetClipboardText">
            <summary>
            Igs the get clipboard text
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColorU32_Col(ImGuiNET.ImGuiCol,System.Single)">
            <summary>
            Igs the get color u 32 col using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="alpha_mul">The alpha mul</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColorU32_Vec4(System.Numerics.Vector4)">
            <summary>
            Igs the get color u 32 vec 4 using the specified col
            </summary>
            <param name="col">The col</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColorU32_U32(System.UInt32)">
            <summary>
            Igs the get color u 32 u 32 using the specified col
            </summary>
            <param name="col">The col</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColumnIndex">
            <summary>
            Igs the get column index
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColumnOffset(System.Int32)">
            <summary>
            Igs the get column offset using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColumnsCount">
            <summary>
            Igs the get columns count
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetColumnWidth(System.Int32)">
            <summary>
            Igs the get column width using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetContentRegionAvail(System.Numerics.Vector2*)">
            <summary>
            Igs the get content region avail using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetContentRegionMax(System.Numerics.Vector2*)">
            <summary>
            Igs the get content region max using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetCurrentContext">
            <summary>
            Igs the get current context
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetCursorPos(System.Numerics.Vector2*)">
            <summary>
            Igs the get cursor pos using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetCursorPosX">
            <summary>
            Igs the get cursor pos x
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetCursorPosY">
            <summary>
            Igs the get cursor pos y
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetCursorScreenPos(System.Numerics.Vector2*)">
            <summary>
            Igs the get cursor screen pos using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetCursorStartPos(System.Numerics.Vector2*)">
            <summary>
            Igs the get cursor start pos using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetDragDropPayload">
            <summary>
            Igs the get drag drop payload
            </summary>
            <returns>The im gui payload</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetDrawData">
            <summary>
            Igs the get draw data
            </summary>
            <returns>The im draw data</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetDrawListSharedData">
            <summary>
            Igs the get draw list shared data
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetFont">
            <summary>
            Igs the get font
            </summary>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetFontSize">
            <summary>
            Igs the get font size
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetFontTexUvWhitePixel(System.Numerics.Vector2*)">
            <summary>
            Igs the get font tex uv white pixel using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetForegroundDrawList_Nil">
            <summary>
            Igs the get foreground draw list nil
            </summary>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetForegroundDrawList_ViewportPtr(ImGuiNET.ImGuiViewport*)">
            <summary>
            Igs the get foreground draw list viewport ptr using the specified viewport
            </summary>
            <param name="viewport">The viewport</param>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetFrameCount">
            <summary>
            Igs the get frame count
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetFrameHeight">
            <summary>
            Igs the get frame height
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetFrameHeightWithSpacing">
            <summary>
            Igs the get frame height with spacing
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetID_Str(System.Byte*)">
            <summary>
            Igs the get id str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetID_StrStr(System.Byte*,System.Byte*)">
            <summary>
            Igs the get id str str using the specified str id begin
            </summary>
            <param name="str_id_begin">The str id begin</param>
            <param name="str_id_end">The str id end</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetID_Ptr(System.Void*)">
            <summary>
            Igs the get id ptr using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetIO">
            <summary>
            Igs the get io
            </summary>
            <returns>The im gui io</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetItemID">
            <summary>
            Igs the get item id
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetItemRectMax(System.Numerics.Vector2*)">
            <summary>
            Igs the get item rect max using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetItemRectMin(System.Numerics.Vector2*)">
            <summary>
            Igs the get item rect min using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetItemRectSize(System.Numerics.Vector2*)">
            <summary>
            Igs the get item rect size using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetKeyIndex(ImGuiNET.ImGuiKey)">
            <summary>
            Igs the get key index using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The im gui key</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetKeyName(ImGuiNET.ImGuiKey)">
            <summary>
            Igs the get key name using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetKeyPressedAmount(ImGuiNET.ImGuiKey,System.Single,System.Single)">
            <summary>
            Igs the get key pressed amount using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="repeat_delay">The repeat delay</param>
            <param name="rate">The rate</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetMainViewport">
            <summary>
            Igs the get main viewport
            </summary>
            <returns>The im gui viewport</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetMouseClickedCount(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Igs the get mouse clicked count using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetMouseCursor">
            <summary>
            Igs the get mouse cursor
            </summary>
            <returns>The im gui mouse cursor</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetMouseDragDelta(System.Numerics.Vector2*,ImGuiNET.ImGuiMouseButton,System.Single)">
            <summary>
            Igs the get mouse drag delta using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="button">The button</param>
            <param name="lock_threshold">The lock threshold</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetMousePos(System.Numerics.Vector2*)">
            <summary>
            Igs the get mouse pos using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetMousePosOnOpeningCurrentPopup(System.Numerics.Vector2*)">
            <summary>
            Igs the get mouse pos on opening current popup using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetPlatformIO">
            <summary>
            Igs the get platform io
            </summary>
            <returns>The im gui platform io</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetScrollMaxX">
            <summary>
            Igs the get scroll max x
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetScrollMaxY">
            <summary>
            Igs the get scroll max y
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetScrollX">
            <summary>
            Igs the get scroll x
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetScrollY">
            <summary>
            Igs the get scroll y
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetStateStorage">
            <summary>
            Igs the get state storage
            </summary>
            <returns>The im gui storage</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetStyle">
            <summary>
            Igs the get style
            </summary>
            <returns>The im gui style</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetStyleColorName(ImGuiNET.ImGuiCol)">
            <summary>
            Igs the get style color name using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetStyleColorVec4(ImGuiNET.ImGuiCol)">
            <summary>
            Igs the get style color vec 4 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetTextLineHeight">
            <summary>
            Igs the get text line height
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetTextLineHeightWithSpacing">
            <summary>
            Igs the get text line height with spacing
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetTime">
            <summary>
            Igs the get time
            </summary>
            <returns>The double</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetTreeNodeToLabelSpacing">
            <summary>
            Igs the get tree node to label spacing
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetVersion">
            <summary>
            Igs the get version
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowContentRegionMax(System.Numerics.Vector2*)">
            <summary>
            Igs the get window content region max using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowContentRegionMin(System.Numerics.Vector2*)">
            <summary>
            Igs the get window content region min using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowDockID">
            <summary>
            Igs the get window dock id
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowDpiScale">
            <summary>
            Igs the get window dpi scale
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowDrawList">
            <summary>
            Igs the get window draw list
            </summary>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowHeight">
            <summary>
            Igs the get window height
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowPos(System.Numerics.Vector2*)">
            <summary>
            Igs the get window pos using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowSize(System.Numerics.Vector2*)">
            <summary>
            Igs the get window size using the specified p out
            </summary>
            <param name="pOut">The out</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowViewport">
            <summary>
            Igs the get window viewport
            </summary>
            <returns>The im gui viewport</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igGetWindowWidth">
            <summary>
            Igs the get window width
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igImage(System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector4,System.Numerics.Vector4)">
            <summary>
            Igs the image using the specified user texture id
            </summary>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <param name="tint_col">The tint col</param>
            <param name="border_col">The border col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igImageButton(System.Byte*,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector4,System.Numerics.Vector4)">
            <summary>
            Igs the image button using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="size">The size</param>
            <param name="uv0">The uv</param>
            <param name="uv1">The uv</param>
            <param name="bg_col">The bg col</param>
            <param name="tint_col">The tint col</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIndent(System.Single)">
            <summary>
            Igs the indent using the specified indent w
            </summary>
            <param name="indent_w">The indent</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputDouble(System.Byte*,System.Double*,System.Double,System.Double,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input double using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputFloat(System.Byte*,System.Single*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input float using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputFloat2(System.Byte*,System.Numerics.Vector2*,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input float 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputFloat3(System.Byte*,System.Numerics.Vector3*,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input float 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputFloat4(System.Byte*,System.Numerics.Vector4*,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input float 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputInt(System.Byte*,System.Int32*,System.Int32,System.Int32,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input int using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="step">The step</param>
            <param name="step_fast">The step fast</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputInt2(System.Byte*,System.Int32*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input int 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputInt3(System.Byte*,System.Int32*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input int 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputInt4(System.Byte*,System.Int32*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input int 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputScalar(System.Byte*,ImGuiNET.ImGuiDataType,System.Void*,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input scalar using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputScalarN(System.Byte*,ImGuiNET.ImGuiDataType,System.Void*,System.Int32,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiInputTextFlags)">
            <summary>
            Igs the input scalar n using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_step">The step</param>
            <param name="p_step_fast">The step fast</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputText(System.Byte*,System.Byte*,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.Void*)">
            <summary>
            Igs the input text using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputTextMultiline(System.Byte*,System.Byte*,System.UInt32,System.Numerics.Vector2,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.Void*)">
            <summary>
            Igs the input text multiline using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInputTextWithHint(System.Byte*,System.Byte*,System.Byte*,System.UInt32,ImGuiNET.ImGuiInputTextFlags,ImGuiNET.ImGuiInputTextCallback,System.Void*)">
            <summary>
            Igs the input text with hint using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="hint">The hint</param>
            <param name="buf">The buf</param>
            <param name="buf_size">The buf size</param>
            <param name="flags">The flags</param>
            <param name="callback">The callback</param>
            <param name="user_data">The user data</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igInvisibleButton(System.Byte*,System.Numerics.Vector2,ImGuiNET.ImGuiButtonFlags)">
            <summary>
            Igs the invisible button using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="size">The size</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsAnyItemActive">
            <summary>
            Igs the is any item active
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsAnyItemFocused">
            <summary>
            Igs the is any item focused
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsAnyItemHovered">
            <summary>
            Igs the is any item hovered
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsAnyMouseDown">
            <summary>
            Igs the is any mouse down
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemActivated">
            <summary>
            Igs the is item activated
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemActive">
            <summary>
            Igs the is item active
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemClicked(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Igs the is item clicked using the specified mouse button
            </summary>
            <param name="mouse_button">The mouse button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemDeactivated">
            <summary>
            Igs the is item deactivated
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemDeactivatedAfterEdit">
            <summary>
            Igs the is item deactivated after edit
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemEdited">
            <summary>
            Igs the is item edited
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemFocused">
            <summary>
            Igs the is item focused
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemHovered(ImGuiNET.ImGuiHoveredFlags)">
            <summary>
            Igs the is item hovered using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemToggledOpen">
            <summary>
            Igs the is item toggled open
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsItemVisible">
            <summary>
            Igs the is item visible
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsKeyDown_Nil(ImGuiNET.ImGuiKey)">
            <summary>
            Igs the is key down nil using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsKeyPressed_Bool(ImGuiNET.ImGuiKey,System.Byte)">
            <summary>
            Igs the is key pressed bool using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="repeat">The repeat</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsKeyReleased_Nil(ImGuiNET.ImGuiKey)">
            <summary>
            Igs the is key released nil using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMouseClicked_Bool(ImGuiNET.ImGuiMouseButton,System.Byte)">
            <summary>
            Igs the is mouse clicked bool using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="repeat">The repeat</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMouseDoubleClicked(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Igs the is mouse double clicked using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMouseDown_Nil(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Igs the is mouse down nil using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMouseDragging(ImGuiNET.ImGuiMouseButton,System.Single)">
            <summary>
            Igs the is mouse dragging using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="lock_threshold">The lock threshold</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMouseHoveringRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Byte)">
            <summary>
            Igs the is mouse hovering rect using the specified r min
            </summary>
            <param name="r_min">The min</param>
            <param name="r_max">The max</param>
            <param name="clip">The clip</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMousePosValid(System.Numerics.Vector2*)">
            <summary>
            Igs the is mouse pos valid using the specified mouse pos
            </summary>
            <param name="mouse_pos">The mouse pos</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsMouseReleased_Nil(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Igs the is mouse released nil using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsPopupOpen_Str(System.Byte*,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the is popup open str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsRectVisible_Nil(System.Numerics.Vector2)">
            <summary>
            Igs the is rect visible nil using the specified size
            </summary>
            <param name="size">The size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsRectVisible_Vec2(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Igs the is rect visible vec 2 using the specified rect min
            </summary>
            <param name="rect_min">The rect min</param>
            <param name="rect_max">The rect max</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsWindowAppearing">
            <summary>
            Igs the is window appearing
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsWindowCollapsed">
            <summary>
            Igs the is window collapsed
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsWindowDocked">
            <summary>
            Igs the is window docked
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsWindowFocused(ImGuiNET.ImGuiFocusedFlags)">
            <summary>
            Igs the is window focused using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igIsWindowHovered(ImGuiNET.ImGuiHoveredFlags)">
            <summary>
            Igs the is window hovered using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLabelText(System.Byte*,System.Byte*)">
            <summary>
            Igs the label text using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igListBox_Str_arr(System.Byte*,System.Int32*,System.Byte**,System.Int32,System.Int32)">
            <summary>
            Igs the list box str arr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="current_item">The current item</param>
            <param name="items">The items</param>
            <param name="items_count">The items count</param>
            <param name="height_in_items">The height in items</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLoadIniSettingsFromDisk(System.Byte*)">
            <summary>
            Igs the load ini settings from disk using the specified ini filename
            </summary>
            <param name="ini_filename">The ini filename</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLoadIniSettingsFromMemory(System.Byte*,System.UInt32)">
            <summary>
            Igs the load ini settings from memory using the specified ini data
            </summary>
            <param name="ini_data">The ini data</param>
            <param name="ini_size">The ini size</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLogButtons">
            <summary>
            Igs the log buttons
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLogFinish">
            <summary>
            Igs the log finish
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLogText(System.Byte*)">
            <summary>
            Igs the log text using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLogToClipboard(System.Int32)">
            <summary>
            Igs the log to clipboard using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLogToFile(System.Int32,System.Byte*)">
            <summary>
            Igs the log to file using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
            <param name="filename">The filename</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igLogToTTY(System.Int32)">
            <summary>
            Igs the log to tty using the specified auto open depth
            </summary>
            <param name="auto_open_depth">The auto open depth</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igMemAlloc(System.UInt32)">
            <summary>
            Igs the mem alloc using the specified size
            </summary>
            <param name="size">The size</param>
            <returns>The void</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igMemFree(System.Void*)">
            <summary>
            Igs the mem free using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igMenuItem_Bool(System.Byte*,System.Byte*,System.Byte,System.Byte)">
            <summary>
            Igs the menu item bool using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <param name="selected">The selected</param>
            <param name="enabled">The enabled</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igMenuItem_BoolPtr(System.Byte*,System.Byte*,System.Byte*,System.Byte)">
            <summary>
            Igs the menu item bool ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="shortcut">The shortcut</param>
            <param name="p_selected">The selected</param>
            <param name="enabled">The enabled</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igNewFrame">
            <summary>
            Igs the new frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igNewLine">
            <summary>
            Igs the new line
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igNextColumn">
            <summary>
            Igs the next column
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igOpenPopup_Str(System.Byte*,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the open popup str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igOpenPopup_ID(System.UInt32,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the open popup id using the specified id
            </summary>
            <param name="id">The id</param>
            <param name="popup_flags">The popup flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igOpenPopupOnItemClick(System.Byte*,ImGuiNET.ImGuiPopupFlags)">
            <summary>
            Igs the open popup on item click using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="popup_flags">The popup flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPlotHistogram_FloatPtr(System.Byte*,System.Single*,System.Int32,System.Int32,System.Byte*,System.Single,System.Single,System.Numerics.Vector2,System.Int32)">
            <summary>
            Igs the plot histogram float ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
            <param name="graph_size">The graph size</param>
            <param name="stride">The stride</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPlotLines_FloatPtr(System.Byte*,System.Single*,System.Int32,System.Int32,System.Byte*,System.Single,System.Single,System.Numerics.Vector2,System.Int32)">
            <summary>
            Igs the plot lines float ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="values">The values</param>
            <param name="values_count">The values count</param>
            <param name="values_offset">The values offset</param>
            <param name="overlay_text">The overlay text</param>
            <param name="scale_min">The scale min</param>
            <param name="scale_max">The scale max</param>
            <param name="graph_size">The graph size</param>
            <param name="stride">The stride</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopButtonRepeat">
            <summary>
            Igs the pop button repeat
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopClipRect">
            <summary>
            Igs the pop clip rect
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopFont">
            <summary>
            Igs the pop font
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopID">
            <summary>
            Igs the pop id
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopItemWidth">
            <summary>
            Igs the pop item width
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopStyleColor(System.Int32)">
            <summary>
            Igs the pop style color using the specified count
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopStyleVar(System.Int32)">
            <summary>
            Igs the pop style var using the specified count
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopTabStop">
            <summary>
            Igs the pop tab stop
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPopTextWrapPos">
            <summary>
            Igs the pop text wrap pos
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igProgressBar(System.Single,System.Numerics.Vector2,System.Byte*)">
            <summary>
            Igs the progress bar using the specified fraction
            </summary>
            <param name="fraction">The fraction</param>
            <param name="size_arg">The size arg</param>
            <param name="overlay">The overlay</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushButtonRepeat(System.Byte)">
            <summary>
            Igs the push button repeat using the specified repeat
            </summary>
            <param name="repeat">The repeat</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushClipRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Byte)">
            <summary>
            Igs the push clip rect using the specified clip rect min
            </summary>
            <param name="clip_rect_min">The clip rect min</param>
            <param name="clip_rect_max">The clip rect max</param>
            <param name="intersect_with_current_clip_rect">The intersect with current clip rect</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushFont(ImGuiNET.ImFont*)">
            <summary>
            Igs the push font using the specified font
            </summary>
            <param name="font">The font</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushID_Str(System.Byte*)">
            <summary>
            Igs the push id str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushID_StrStr(System.Byte*,System.Byte*)">
            <summary>
            Igs the push id str str using the specified str id begin
            </summary>
            <param name="str_id_begin">The str id begin</param>
            <param name="str_id_end">The str id end</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushID_Ptr(System.Void*)">
            <summary>
            Igs the push id ptr using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushID_Int(System.Int32)">
            <summary>
            Igs the push id int using the specified int id
            </summary>
            <param name="int_id">The int id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushItemWidth(System.Single)">
            <summary>
            Igs the push item width using the specified item width
            </summary>
            <param name="item_width">The item width</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushStyleColor_U32(ImGuiNET.ImGuiCol,System.UInt32)">
            <summary>
            Igs the push style color u 32 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushStyleColor_Vec4(ImGuiNET.ImGuiCol,System.Numerics.Vector4)">
            <summary>
            Igs the push style color vec 4 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushStyleVar_Float(ImGuiNET.ImGuiStyleVar,System.Single)">
            <summary>
            Igs the push style var float using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushStyleVar_Vec2(ImGuiNET.ImGuiStyleVar,System.Numerics.Vector2)">
            <summary>
            Igs the push style var vec 2 using the specified idx
            </summary>
            <param name="idx">The idx</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushTabStop(System.Byte)">
            <summary>
            Igs the push tab stop using the specified tab stop
            </summary>
            <param name="tab_stop">The tab stop</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igPushTextWrapPos(System.Single)">
            <summary>
            Igs the push text wrap pos using the specified wrap local pos x
            </summary>
            <param name="wrap_local_pos_x">The wrap local pos</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igRadioButton_Bool(System.Byte*,System.Byte)">
            <summary>
            Igs the radio button bool using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="active">The active</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igRadioButton_IntPtr(System.Byte*,System.Int32*,System.Int32)">
            <summary>
            Igs the radio button int ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igRender">
            <summary>
            Igs the render
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igRenderPlatformWindowsDefault(System.Void*,System.Void*)">
            <summary>
            Igs the render platform windows default using the specified platform render arg
            </summary>
            <param name="platform_render_arg">The platform render arg</param>
            <param name="renderer_render_arg">The renderer render arg</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igResetMouseDragDelta(ImGuiNET.ImGuiMouseButton)">
            <summary>
            Igs the reset mouse drag delta using the specified button
            </summary>
            <param name="button">The button</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSameLine(System.Single,System.Single)">
            <summary>
            Igs the same line using the specified offset from start x
            </summary>
            <param name="offset_from_start_x">The offset from start</param>
            <param name="spacing">The spacing</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSaveIniSettingsToDisk(System.Byte*)">
            <summary>
            Igs the save ini settings to disk using the specified ini filename
            </summary>
            <param name="ini_filename">The ini filename</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSaveIniSettingsToMemory(System.UInt32*)">
            <summary>
            Igs the save ini settings to memory using the specified out ini size
            </summary>
            <param name="out_ini_size">The out ini size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSelectable_Bool(System.Byte*,System.Byte,ImGuiNET.ImGuiSelectableFlags,System.Numerics.Vector2)">
            <summary>
            Igs the selectable bool using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="selected">The selected</param>
            <param name="flags">The flags</param>
            <param name="size">The size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSelectable_BoolPtr(System.Byte*,System.Byte*,ImGuiNET.ImGuiSelectableFlags,System.Numerics.Vector2)">
            <summary>
            Igs the selectable bool ptr using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="p_selected">The selected</param>
            <param name="flags">The flags</param>
            <param name="size">The size</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSeparator">
            <summary>
            Igs the separator
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSeparatorText(System.Byte*)">
            <summary>
            Igs the separator text using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetAllocatorFunctions(System.IntPtr,System.IntPtr,System.Void*)">
            <summary>
            Igs the set allocator functions using the specified alloc func
            </summary>
            <param name="alloc_func">The alloc func</param>
            <param name="free_func">The free func</param>
            <param name="user_data">The user data</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetClipboardText(System.Byte*)">
            <summary>
            Igs the set clipboard text using the specified text
            </summary>
            <param name="text">The text</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetColorEditOptions(ImGuiNET.ImGuiColorEditFlags)">
            <summary>
            Igs the set color edit options using the specified flags
            </summary>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetColumnOffset(System.Int32,System.Single)">
            <summary>
            Igs the set column offset using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <param name="offset_x">The offset</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetColumnWidth(System.Int32,System.Single)">
            <summary>
            Igs the set column width using the specified column index
            </summary>
            <param name="column_index">The column index</param>
            <param name="width">The width</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetCurrentContext(System.IntPtr)">
            <summary>
            Igs the set current context using the specified ctx
            </summary>
            <param name="ctx">The ctx</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetCursorPos(System.Numerics.Vector2)">
            <summary>
            Igs the set cursor pos using the specified local pos
            </summary>
            <param name="local_pos">The local pos</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetCursorPosX(System.Single)">
            <summary>
            Igs the set cursor pos x using the specified local x
            </summary>
            <param name="local_x">The local</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetCursorPosY(System.Single)">
            <summary>
            Igs the set cursor pos y using the specified local y
            </summary>
            <param name="local_y">The local</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetCursorScreenPos(System.Numerics.Vector2)">
            <summary>
            Igs the set cursor screen pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetDragDropPayload(System.Byte*,System.Void*,System.UInt32,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set drag drop payload using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="data">The data</param>
            <param name="sz">The sz</param>
            <param name="cond">The cond</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetItemAllowOverlap">
            <summary>
            Igs the set item allow overlap
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetItemDefaultFocus">
            <summary>
            Igs the set item default focus
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetKeyboardFocusHere(System.Int32)">
            <summary>
            Igs the set keyboard focus here using the specified offset
            </summary>
            <param name="offset">The offset</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetMouseCursor(ImGuiNET.ImGuiMouseCursor)">
            <summary>
            Igs the set mouse cursor using the specified cursor type
            </summary>
            <param name="cursor_type">The cursor type</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextFrameWantCaptureKeyboard(System.Byte)">
            <summary>
            Igs the set next frame want capture keyboard using the specified want capture keyboard
            </summary>
            <param name="want_capture_keyboard">The want capture keyboard</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextFrameWantCaptureMouse(System.Byte)">
            <summary>
            Igs the set next frame want capture mouse using the specified want capture mouse
            </summary>
            <param name="want_capture_mouse">The want capture mouse</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextItemOpen(System.Byte,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set next item open using the specified is open
            </summary>
            <param name="is_open">The is open</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextItemWidth(System.Single)">
            <summary>
            Igs the set next item width using the specified item width
            </summary>
            <param name="item_width">The item width</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowBgAlpha(System.Single)">
            <summary>
            Igs the set next window bg alpha using the specified alpha
            </summary>
            <param name="alpha">The alpha</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowClass(ImGuiNET.ImGuiWindowClass*)">
            <summary>
            Igs the set next window using the specified window class
            </summary>
            <param name="window_class">The window class</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowCollapsed(System.Byte,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set next window collapsed using the specified collapsed
            </summary>
            <param name="collapsed">The collapsed</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowContentSize(System.Numerics.Vector2)">
            <summary>
            Igs the set next window content size using the specified size
            </summary>
            <param name="size">The size</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowDockID(System.UInt32,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set next window dock id using the specified dock id
            </summary>
            <param name="dock_id">The dock id</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowFocus">
            <summary>
            Igs the set next window focus
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowPos(System.Numerics.Vector2,ImGuiNET.ImGuiCond,System.Numerics.Vector2)">
            <summary>
            Igs the set next window pos using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
            <param name="pivot">The pivot</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowScroll(System.Numerics.Vector2)">
            <summary>
            Igs the set next window scroll using the specified scroll
            </summary>
            <param name="scroll">The scroll</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowSize(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set next window size using the specified size
            </summary>
            <param name="size">The size</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowSizeConstraints(System.Numerics.Vector2,System.Numerics.Vector2,ImGuiNET.ImGuiSizeCallback,System.Void*)">
            <summary>
            Igs the set next window size constraints using the specified size min
            </summary>
            <param name="size_min">The size min</param>
            <param name="size_max">The size max</param>
            <param name="custom_callback">The custom callback</param>
            <param name="custom_callback_data">The custom callback data</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetNextWindowViewport(System.UInt32)">
            <summary>
            Igs the set next window viewport using the specified viewport id
            </summary>
            <param name="viewport_id">The viewport id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetScrollFromPosX_Float(System.Single,System.Single)">
            <summary>
            Igs the set scroll from pos x float using the specified local x
            </summary>
            <param name="local_x">The local</param>
            <param name="center_x_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetScrollFromPosY_Float(System.Single,System.Single)">
            <summary>
            Igs the set scroll from pos y float using the specified local y
            </summary>
            <param name="local_y">The local</param>
            <param name="center_y_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetScrollHereX(System.Single)">
            <summary>
            Igs the set scroll here x using the specified center x ratio
            </summary>
            <param name="center_x_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetScrollHereY(System.Single)">
            <summary>
            Igs the set scroll here y using the specified center y ratio
            </summary>
            <param name="center_y_ratio">The center ratio</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetScrollX_Float(System.Single)">
            <summary>
            Igs the set scroll x float using the specified scroll x
            </summary>
            <param name="scroll_x">The scroll</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetScrollY_Float(System.Single)">
            <summary>
            Igs the set scroll y float using the specified scroll y
            </summary>
            <param name="scroll_y">The scroll</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetStateStorage(ImGuiNET.ImGuiStorage*)">
            <summary>
            Igs the set state storage using the specified storage
            </summary>
            <param name="storage">The storage</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetTabItemClosed(System.Byte*)">
            <summary>
            Igs the set tab item closed using the specified tab or docked window label
            </summary>
            <param name="tab_or_docked_window_label">The tab or docked window label</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetTooltip(System.Byte*)">
            <summary>
            Igs the set tooltip using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowCollapsed_Bool(System.Byte,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set window collapsed bool using the specified collapsed
            </summary>
            <param name="collapsed">The collapsed</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowCollapsed_Str(System.Byte*,System.Byte,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set window collapsed str using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="collapsed">The collapsed</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowFocus_Nil">
            <summary>
            Igs the set window focus nil
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowFocus_Str(System.Byte*)">
            <summary>
            Igs the set window focus str using the specified name
            </summary>
            <param name="name">The name</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowFontScale(System.Single)">
            <summary>
            Igs the set window font scale using the specified scale
            </summary>
            <param name="scale">The scale</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowPos_Vec2(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set window pos vec 2 using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowPos_Str(System.Byte*,System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set window pos str using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="pos">The pos</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowSize_Vec2(System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set window size vec 2 using the specified size
            </summary>
            <param name="size">The size</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSetWindowSize_Str(System.Byte*,System.Numerics.Vector2,ImGuiNET.ImGuiCond)">
            <summary>
            Igs the set window size str using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="size">The size</param>
            <param name="cond">The cond</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowAboutWindow(System.Byte*)">
            <summary>
            Igs the show about window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowDebugLogWindow(System.Byte*)">
            <summary>
            Igs the show debug log window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowDemoWindow(System.Byte*)">
            <summary>
            Igs the show demo window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowFontSelector(System.Byte*)">
            <summary>
            Igs the show font selector using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowMetricsWindow(System.Byte*)">
            <summary>
            Igs the show metrics window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowStackToolWindow(System.Byte*)">
            <summary>
            Igs the show stack tool window using the specified p open
            </summary>
            <param name="p_open">The open</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowStyleEditor(ImGuiNET.ImGuiStyle*)">
            <summary>
            
            </summary>
            <param name="ref"></param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowStyleSelector(System.Byte*)">
            <summary>
            Igs the show style selector using the specified label
            </summary>
            <param name="label">The label</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igShowUserGuide">
            <summary>
            Igs the show user guide
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderAngle(System.Byte*,System.Single*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider angle using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v_rad">The rad</param>
            <param name="v_degrees_min">The degrees min</param>
            <param name="v_degrees_max">The degrees max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderFloat(System.Byte*,System.Single*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider float using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderFloat2(System.Byte*,System.Numerics.Vector2*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider float 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderFloat3(System.Byte*,System.Numerics.Vector3*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider float 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderFloat4(System.Byte*,System.Numerics.Vector4*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider float 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderInt(System.Byte*,System.Int32*,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider int using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderInt2(System.Byte*,System.Int32*,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider int 2 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderInt3(System.Byte*,System.Int32*,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider int 3 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderInt4(System.Byte*,System.Int32*,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider int 4 using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderScalar(System.Byte*,ImGuiNET.ImGuiDataType,System.Void*,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider scalar using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSliderScalarN(System.Byte*,ImGuiNET.ImGuiDataType,System.Void*,System.Int32,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the slider scalar n using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="components">The components</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSmallButton(System.Byte*)">
            <summary>
            Igs the small button using the specified label
            </summary>
            <param name="label">The label</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igSpacing">
            <summary>
            Igs the spacing
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igStyleColorsClassic(ImGuiNET.ImGuiStyle*)">
            <summary>
            Igs the style colors classic using the specified dst
            </summary>
            <param name="dst">The dst</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igStyleColorsDark(ImGuiNET.ImGuiStyle*)">
            <summary>
            Igs the style colors dark using the specified dst
            </summary>
            <param name="dst">The dst</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igStyleColorsLight(ImGuiNET.ImGuiStyle*)">
            <summary>
            Igs the style colors light using the specified dst
            </summary>
            <param name="dst">The dst</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTabItemButton(System.Byte*,ImGuiNET.ImGuiTabItemFlags)">
            <summary>
            Igs the tab item button using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableGetColumnCount">
            <summary>
            Igs the table get column count
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableGetColumnFlags(System.Int32)">
            <summary>
            Igs the table get column flags using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <returns>The im gui table column flags</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableGetColumnIndex">
            <summary>
            Igs the table get column index
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableGetColumnName_Int(System.Int32)">
            <summary>
            Igs the table get column name int using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableGetRowIndex">
            <summary>
            Igs the table get row index
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableGetSortSpecs">
            <summary>
            Igs the table get sort specs
            </summary>
            <returns>The im gui table sort specs</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableHeader(System.Byte*)">
            <summary>
            Igs the table header using the specified label
            </summary>
            <param name="label">The label</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableHeadersRow">
            <summary>
            Igs the table headers row
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableNextColumn">
            <summary>
            Igs the table next column
            </summary>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableNextRow(ImGuiNET.ImGuiTableRowFlags,System.Single)">
            <summary>
            Igs the table next row using the specified row flags
            </summary>
            <param name="row_flags">The row flags</param>
            <param name="min_row_height">The min row height</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableSetBgColor(ImGuiNET.ImGuiTableBgTarget,System.UInt32,System.Int32)">
            <summary>
            Igs the table set bg color using the specified target
            </summary>
            <param name="target">The target</param>
            <param name="color">The color</param>
            <param name="column_n">The column</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableSetColumnEnabled(System.Int32,System.Byte)">
            <summary>
            Igs the table set column enabled using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableSetColumnIndex(System.Int32)">
            <summary>
            Igs the table set column index using the specified column n
            </summary>
            <param name="column_n">The column</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableSetupColumn(System.Byte*,ImGuiNET.ImGuiTableColumnFlags,System.Single,System.UInt32)">
            <summary>
            Igs the table setup column using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <param name="init_width_or_weight">The init width or weight</param>
            <param name="user_id">The user id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTableSetupScrollFreeze(System.Int32,System.Int32)">
            <summary>
            Igs the table setup scroll freeze using the specified cols
            </summary>
            <param name="cols">The cols</param>
            <param name="rows">The rows</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igText(System.Byte*)">
            <summary>
            Igs the text using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTextColored(System.Numerics.Vector4,System.Byte*)">
            <summary>
            Igs the text colored using the specified col
            </summary>
            <param name="col">The col</param>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTextDisabled(System.Byte*)">
            <summary>
            Igs the text disabled using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTextUnformatted(System.Byte*,System.Byte*)">
            <summary>
            Igs the text unformatted using the specified text
            </summary>
            <param name="text">The text</param>
            <param name="text_end">The text end</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTextWrapped(System.Byte*)">
            <summary>
            Igs the text wrapped using the specified fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreeNode_Str(System.Byte*)">
            <summary>
            Igs the tree node str using the specified label
            </summary>
            <param name="label">The label</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreeNode_StrStr(System.Byte*,System.Byte*)">
            <summary>
            Igs the tree node str str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="fmt">The fmt</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreeNode_Ptr(System.Void*,System.Byte*)">
            <summary>
            Igs the tree node ptr using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
            <param name="fmt">The fmt</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreeNodeEx_Str(System.Byte*,ImGuiNET.ImGuiTreeNodeFlags)">
            <summary>
            Igs the tree node ex str using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreeNodeEx_StrStr(System.Byte*,ImGuiNET.ImGuiTreeNodeFlags,System.Byte*)">
            <summary>
            Igs the tree node ex str str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
            <param name="flags">The flags</param>
            <param name="fmt">The fmt</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreeNodeEx_Ptr(System.Void*,ImGuiNET.ImGuiTreeNodeFlags,System.Byte*)">
            <summary>
            Igs the tree node ex ptr using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
            <param name="flags">The flags</param>
            <param name="fmt">The fmt</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreePop">
            <summary>
            Igs the tree pop
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreePush_Str(System.Byte*)">
            <summary>
            Igs the tree push str using the specified str id
            </summary>
            <param name="str_id">The str id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igTreePush_Ptr(System.Void*)">
            <summary>
            Igs the tree push ptr using the specified ptr id
            </summary>
            <param name="ptr_id">The ptr id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igUnindent(System.Single)">
            <summary>
            Igs the unindent using the specified indent w
            </summary>
            <param name="indent_w">The indent</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igUpdatePlatformWindows">
            <summary>
            Igs the update platform windows
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igValue_Bool(System.Byte*,System.Byte)">
            <summary>
            Igs the value bool using the specified prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="b">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igValue_Int(System.Byte*,System.Int32)">
            <summary>
            Igs the value int using the specified prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igValue_Uint(System.Byte*,System.UInt32)">
            <summary>
            Igs the value uint using the specified prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igValue_Float(System.Byte*,System.Single,System.Byte*)">
            <summary>
            Igs the value float using the specified prefix
            </summary>
            <param name="prefix">The prefix</param>
            <param name="v">The </param>
            <param name="float_format">The float format</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igVSliderFloat(System.Byte*,System.Numerics.Vector2,System.Single*,System.Single,System.Single,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the v slider float using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igVSliderInt(System.Byte*,System.Numerics.Vector2,System.Int32*,System.Int32,System.Int32,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the v slider int using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="v">The </param>
            <param name="v_min">The min</param>
            <param name="v_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.igVSliderScalar(System.Byte*,System.Numerics.Vector2,ImGuiNET.ImGuiDataType,System.Void*,System.Void*,System.Void*,System.Byte*,ImGuiNET.ImGuiSliderFlags)">
            <summary>
            Igs the v slider scalar using the specified label
            </summary>
            <param name="label">The label</param>
            <param name="size">The size</param>
            <param name="data_type">The data type</param>
            <param name="p_data">The data</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="format">The format</param>
            <param name="flags">The flags</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_destroy(ImGuiNET.ImColor*)">
            <summary>
            Ims the color destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_HSV(ImGuiNET.ImColor*,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Ims the color hsv using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_ImColor_Nil">
            <summary>
            Ims the color im color nil
            </summary>
            <returns>The im color</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_ImColor_Float(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Ims the color im color float using the specified r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The im color</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_ImColor_Vec4(System.Numerics.Vector4)">
            <summary>
            Ims the color im color vec 4 using the specified col
            </summary>
            <param name="col">The col</param>
            <returns>The im color</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_ImColor_Int(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ims the color im color int using the specified r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The im color</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_ImColor_U32(System.UInt32)">
            <summary>
            Ims the color im color u 32 using the specified rgba
            </summary>
            <param name="rgba">The rgba</param>
            <returns>The im color</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImColor_SetHSV(ImGuiNET.ImColor*,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Ims the color set hsv using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="h">The </param>
            <param name="s">The </param>
            <param name="v">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawCmd_destroy(ImGuiNET.ImDrawCmd*)">
            <summary>
            Ims the draw cmd destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawCmd_GetTexID(ImGuiNET.ImDrawCmd*)">
            <summary>
            Ims the draw cmd get tex id using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawCmd_ImDrawCmd">
            <summary>
            Ims the draw cmd im draw cmd
            </summary>
            <returns>The im draw cmd</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawData_Clear(ImGuiNET.ImDrawData*)">
            <summary>
            Ims the draw data clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawData_DeIndexAllBuffers(ImGuiNET.ImDrawData*)">
            <summary>
            Ims the draw data de index all buffers using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawData_destroy(ImGuiNET.ImDrawData*)">
            <summary>
            Ims the draw data destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawData_ImDrawData">
            <summary>
            Ims the draw data im draw data
            </summary>
            <returns>The im draw data</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawData_ScaleClipRects(ImGuiNET.ImDrawData*,System.Numerics.Vector2)">
            <summary>
            Ims the draw data scale clip rects using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="fb_scale">The fb scale</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__CalcCircleAutoSegmentCount(ImGuiNET.ImDrawList*,System.Single)">
            <summary>
            Ims the draw list calc circle auto segment count using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="radius">The radius</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__ClearFreeMemory(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list clear free memory using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__OnChangedClipRect(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list on changed clip rect using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__OnChangedTextureID(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list on changed texture id using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__OnChangedVtxOffset(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list on changed vtx offset using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__PathArcToFastEx(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ims the draw list path arc to fast ex using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min_sample">The min sample</param>
            <param name="a_max_sample">The max sample</param>
            <param name="a_step">The step</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__PathArcToN(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Ims the draw list path arc to n using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min">The min</param>
            <param name="a_max">The max</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__PopUnusedDrawCmd(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list pop unused draw cmd using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__ResetForNewFrame(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list reset for new frame using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList__TryMergeDrawCmds(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list try merge draw cmds using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddBezierCubic(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,System.Int32)">
            <summary>
            Ims the draw list add bezier cubic using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddBezierQuadratic(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,System.Int32)">
            <summary>
            Ims the draw list add bezier quadratic using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddCallback(ImGuiNET.ImDrawList*,System.IntPtr,System.Void*)">
            <summary>
            Ims the draw list add callback using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="callback">The callback</param>
            <param name="callback_data">The callback data</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddCircle(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.UInt32,System.Int32,System.Single)">
            <summary>
            Ims the draw list add circle using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddCircleFilled(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.UInt32,System.Int32)">
            <summary>
            Ims the draw list add circle filled using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddConvexPolyFilled(ImGuiNET.ImDrawList*,System.Numerics.Vector2*,System.Int32,System.UInt32)">
            <summary>
            Ims the draw list add convex poly filled using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="points">The points</param>
            <param name="num_points">The num points</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddDrawCmd(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list add draw cmd using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddImage(ImGuiNET.ImDrawList*,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list add image using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
            <param name="uv_max">The uv max</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddImageQuad(ImGuiNET.ImDrawList*,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list add image quad using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="uv1">The uv</param>
            <param name="uv2">The uv</param>
            <param name="uv3">The uv</param>
            <param name="uv4">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddImageRounded(ImGuiNET.ImDrawList*,System.IntPtr,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Ims the draw list add image rounded using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="user_texture_id">The user texture id</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="uv_min">The uv min</param>
            <param name="uv_max">The uv max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddLine(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Ims the draw list add line using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddNgon(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.UInt32,System.Int32,System.Single)">
            <summary>
            Ims the draw list add ngon using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddNgonFilled(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.UInt32,System.Int32)">
            <summary>
            Ims the draw list add ngon filled using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="col">The col</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddPolyline(ImGuiNET.ImDrawList*,System.Numerics.Vector2*,System.Int32,System.UInt32,ImGuiNET.ImDrawFlags,System.Single)">
            <summary>
            Ims the draw list add polyline using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="points">The points</param>
            <param name="num_points">The num points</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddQuad(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Ims the draw list add quad using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddQuadFilled(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list add quad filled using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddRect(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags,System.Single)">
            <summary>
            Ims the draw list add rect using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddRectFilled(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Ims the draw list add rect filled using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col">The col</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddRectFilledMultiColor(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Ims the draw list add rect filled multi color using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p_min">The min</param>
            <param name="p_max">The max</param>
            <param name="col_upr_left">The col upr left</param>
            <param name="col_upr_right">The col upr right</param>
            <param name="col_bot_right">The col bot right</param>
            <param name="col_bot_left">The col bot left</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddText_Vec2(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.UInt32,System.Byte*,System.Byte*)">
            <summary>
            Ims the draw list add text vec 2 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="text_begin">The text begin</param>
            <param name="text_end">The text end</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddText_FontPtr(ImGuiNET.ImDrawList*,ImGuiNET.ImFont*,System.Single,System.Numerics.Vector2,System.UInt32,System.Byte*,System.Byte*,System.Single,System.Numerics.Vector4*)">
            <summary>
            Ims the draw list add text font ptr using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="font">The font</param>
            <param name="font_size">The font size</param>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="text_begin">The text begin</param>
            <param name="text_end">The text end</param>
            <param name="wrap_width">The wrap width</param>
            <param name="cpu_fine_clip_rect">The cpu fine clip rect</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddTriangle(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32,System.Single)">
            <summary>
            Ims the draw list add triangle using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_AddTriangleFilled(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list add triangle filled using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_ChannelsMerge(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list channels merge using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_ChannelsSetCurrent(ImGuiNET.ImDrawList*,System.Int32)">
            <summary>
            Ims the draw list channels set current using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="n">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_ChannelsSplit(ImGuiNET.ImDrawList*,System.Int32)">
            <summary>
            Ims the draw list channels split using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_CloneOutput(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list clone output using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_destroy(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_GetClipRectMax(System.Numerics.Vector2*,ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list get clip rect max using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_GetClipRectMin(System.Numerics.Vector2*,ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list get clip rect min using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_ImDrawList(System.IntPtr)">
            <summary>
            Ims the draw list im draw list using the specified shared data
            </summary>
            <param name="shared_data">The shared data</param>
            <returns>The im draw list</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathArcTo(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Ims the draw list path arc to using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min">The min</param>
            <param name="a_max">The max</param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathArcToFast(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Single,System.Int32,System.Int32)">
            <summary>
            Ims the draw list path arc to fast using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="center">The center</param>
            <param name="radius">The radius</param>
            <param name="a_min_of_12">The min of 12</param>
            <param name="a_max_of_12">The max of 12</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathBezierCubicCurveTo(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Int32)">
            <summary>
            Ims the draw list path bezier cubic curve to using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="p4">The </param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathBezierQuadraticCurveTo(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Int32)">
            <summary>
            Ims the draw list path bezier quadratic curve to using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="p2">The </param>
            <param name="p3">The </param>
            <param name="num_segments">The num segments</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathClear(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list path clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathFillConvex(ImGuiNET.ImDrawList*,System.UInt32)">
            <summary>
            Ims the draw list path fill convex using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathLineTo(ImGuiNET.ImDrawList*,System.Numerics.Vector2)">
            <summary>
            Ims the draw list path line to using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathLineToMergeDuplicate(ImGuiNET.ImDrawList*,System.Numerics.Vector2)">
            <summary>
            Ims the draw list path line to merge duplicate using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathRect(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,ImGuiNET.ImDrawFlags)">
            <summary>
            Ims the draw list path rect using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="rect_min">The rect min</param>
            <param name="rect_max">The rect max</param>
            <param name="rounding">The rounding</param>
            <param name="flags">The flags</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PathStroke(ImGuiNET.ImDrawList*,System.UInt32,ImGuiNET.ImDrawFlags,System.Single)">
            <summary>
            Ims the draw list path stroke using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="col">The col</param>
            <param name="flags">The flags</param>
            <param name="thickness">The thickness</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PopClipRect(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list pop clip rect using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PopTextureID(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list pop texture id using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimQuadUV(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list prim quad uv using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <param name="d">The </param>
            <param name="uv_a">The uv</param>
            <param name="uv_b">The uv</param>
            <param name="uv_c">The uv</param>
            <param name="uv_d">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimRect(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list prim rect using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimRectUV(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list prim rect uv using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="uv_a">The uv</param>
            <param name="uv_b">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimReserve(ImGuiNET.ImDrawList*,System.Int32,System.Int32)">
            <summary>
            Ims the draw list prim reserve using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="idx_count">The idx count</param>
            <param name="vtx_count">The vtx count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimUnreserve(ImGuiNET.ImDrawList*,System.Int32,System.Int32)">
            <summary>
            Ims the draw list prim unreserve using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="idx_count">The idx count</param>
            <param name="vtx_count">The vtx count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimVtx(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list prim vtx using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
            <param name="uv">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimWriteIdx(ImGuiNET.ImDrawList*,System.UInt16)">
            <summary>
            Ims the draw list prim write idx using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="idx">The idx</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PrimWriteVtx(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.UInt32)">
            <summary>
            Ims the draw list prim write vtx using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
            <param name="uv">The uv</param>
            <param name="col">The col</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PushClipRect(ImGuiNET.ImDrawList*,System.Numerics.Vector2,System.Numerics.Vector2,System.Byte)">
            <summary>
            Ims the draw list push clip rect using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="clip_rect_min">The clip rect min</param>
            <param name="clip_rect_max">The clip rect max</param>
            <param name="intersect_with_current_clip_rect">The intersect with current clip rect</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PushClipRectFullScreen(ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list push clip rect full screen using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawList_PushTextureID(ImGuiNET.ImDrawList*,System.IntPtr)">
            <summary>
            Ims the draw list push texture id using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="texture_id">The texture id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_Clear(ImGuiNET.ImDrawListSplitter*)">
            <summary>
            Ims the draw list splitter clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_ClearFreeMemory(ImGuiNET.ImDrawListSplitter*)">
            <summary>
            Ims the draw list splitter clear free memory using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_destroy(ImGuiNET.ImDrawListSplitter*)">
            <summary>
            Ims the draw list splitter destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_ImDrawListSplitter">
            <summary>
            Ims the draw list splitter im draw list splitter
            </summary>
            <returns>The im draw list splitter</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_Merge(ImGuiNET.ImDrawListSplitter*,ImGuiNET.ImDrawList*)">
            <summary>
            Ims the draw list splitter merge using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="draw_list">The draw list</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_SetCurrentChannel(ImGuiNET.ImDrawListSplitter*,ImGuiNET.ImDrawList*,System.Int32)">
            <summary>
            Ims the draw list splitter set current channel using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="draw_list">The draw list</param>
            <param name="channel_idx">The channel idx</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImDrawListSplitter_Split(ImGuiNET.ImDrawListSplitter*,ImGuiNET.ImDrawList*,System.Int32)">
            <summary>
            Ims the draw list splitter split using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="draw_list">The draw list</param>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_AddGlyph(ImGuiNET.ImFont*,ImGuiNET.ImFontConfig*,System.UInt16,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Ims the font add glyph using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="src_cfg">The src cfg</param>
            <param name="c">The </param>
            <param name="x0">The </param>
            <param name="y0">The </param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="u0">The </param>
            <param name="v0">The </param>
            <param name="u1">The </param>
            <param name="v1">The </param>
            <param name="advance_x">The advance</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_AddRemapChar(ImGuiNET.ImFont*,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Ims the font add remap char using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="overwrite_dst">The overwrite dst</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_BuildLookupTable(ImGuiNET.ImFont*)">
            <summary>
            Ims the font build lookup table using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_CalcTextSizeA(System.Numerics.Vector2*,ImGuiNET.ImFont*,System.Single,System.Single,System.Single,System.Byte*,System.Byte*,System.Byte**)">
            <summary>
            Ims the font calc text size a using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="self">The self</param>
            <param name="size">The size</param>
            <param name="max_width">The max width</param>
            <param name="wrap_width">The wrap width</param>
            <param name="text_begin">The text begin</param>
            <param name="text_end">The text end</param>
            <param name="remaining">The remaining</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_CalcWordWrapPositionA(ImGuiNET.ImFont*,System.Single,System.Byte*,System.Byte*,System.Single)">
            <summary>
            Ims the font calc word wrap position a using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="scale">The scale</param>
            <param name="text">The text</param>
            <param name="text_end">The text end</param>
            <param name="wrap_width">The wrap width</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_ClearOutputData(ImGuiNET.ImFont*)">
            <summary>
            Ims the font clear output data using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_destroy(ImGuiNET.ImFont*)">
            <summary>
            Ims the font destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_FindGlyph(ImGuiNET.ImFont*,System.UInt16)">
            <summary>
            Ims the font find glyph using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
            <returns>The im font glyph</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_FindGlyphNoFallback(ImGuiNET.ImFont*,System.UInt16)">
            <summary>
            Ims the font find glyph no fallback using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
            <returns>The im font glyph</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_GetCharAdvance(ImGuiNET.ImFont*,System.UInt16)">
            <summary>
            Ims the font get char advance using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_GetDebugName(ImGuiNET.ImFont*)">
            <summary>
            Ims the font get debug name using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_GrowIndex(ImGuiNET.ImFont*,System.Int32)">
            <summary>
            Ims the font grow index using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="new_size">The new size</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_ImFont">
            <summary>
            Ims the font im font
            </summary>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_IsGlyphRangeUnused(ImGuiNET.ImFont*,System.UInt32,System.UInt32)">
            <summary>
            Ims the font is glyph range unused using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c_begin">The begin</param>
            <param name="c_last">The last</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_IsLoaded(ImGuiNET.ImFont*)">
            <summary>
            Ims the font is loaded using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_RenderChar(ImGuiNET.ImFont*,ImGuiNET.ImDrawList*,System.Single,System.Numerics.Vector2,System.UInt32,System.UInt16)">
            <summary>
            Ims the font render char using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="draw_list">The draw list</param>
            <param name="size">The size</param>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_RenderText(ImGuiNET.ImFont*,ImGuiNET.ImDrawList*,System.Single,System.Numerics.Vector2,System.UInt32,System.Numerics.Vector4,System.Byte*,System.Byte*,System.Single,System.Byte)">
            <summary>
            Ims the font render text using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="draw_list">The draw list</param>
            <param name="size">The size</param>
            <param name="pos">The pos</param>
            <param name="col">The col</param>
            <param name="clip_rect">The clip rect</param>
            <param name="text_begin">The text begin</param>
            <param name="text_end">The text end</param>
            <param name="wrap_width">The wrap width</param>
            <param name="cpu_fine_clip">The cpu fine clip</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFont_SetGlyphVisible(ImGuiNET.ImFont*,System.UInt16,System.Byte)">
            <summary>
            Ims the font set glyph visible using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
            <param name="visible">The visible</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddCustomRectFontGlyph(ImGuiNET.ImFontAtlas*,ImGuiNET.ImFont*,System.UInt16,System.Int32,System.Int32,System.Single,System.Numerics.Vector2)">
            <summary>
            Ims the font atlas add custom rect font glyph using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="font">The font</param>
            <param name="id">The id</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="advance_x">The advance</param>
            <param name="offset">The offset</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddCustomRectRegular(ImGuiNET.ImFontAtlas*,System.Int32,System.Int32)">
            <summary>
            Ims the font atlas add custom rect regular using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddFont(ImGuiNET.ImFontAtlas*,ImGuiNET.ImFontConfig*)">
            <summary>
            Ims the font atlas add font using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddFontDefault(ImGuiNET.ImFontAtlas*,ImGuiNET.ImFontConfig*)">
            <summary>
            Ims the font atlas add font default using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="font_cfg">The font cfg</param>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddFontFromFileTTF(ImGuiNET.ImFontAtlas*,System.Byte*,System.Single,ImGuiNET.ImFontConfig*,System.UInt16*)">
            <summary>
            Ims the font atlas add font from file ttf using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="filename">The filename</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(ImGuiNET.ImFontAtlas*,System.Byte*,System.Single,ImGuiNET.ImFontConfig*,System.UInt16*)">
            <summary>
            Ims the font atlas add font from memory compressed base 85 ttf using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="compressed_font_data_base85">The compressed font data base85</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddFontFromMemoryCompressedTTF(ImGuiNET.ImFontAtlas*,System.Void*,System.Int32,System.Single,ImGuiNET.ImFontConfig*,System.UInt16*)">
            <summary>
            Ims the font atlas add font from memory compressed ttf using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="compressed_font_data">The compressed font data</param>
            <param name="compressed_font_size">The compressed font size</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_AddFontFromMemoryTTF(ImGuiNET.ImFontAtlas*,System.Void*,System.Int32,System.Single,ImGuiNET.ImFontConfig*,System.UInt16*)">
            <summary>
            Ims the font atlas add font from memory ttf using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="font_data">The font data</param>
            <param name="font_size">The font size</param>
            <param name="size_pixels">The size pixels</param>
            <param name="font_cfg">The font cfg</param>
            <param name="glyph_ranges">The glyph ranges</param>
            <returns>The im font</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_Build(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas build using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_CalcCustomRectUV(ImGuiNET.ImFontAtlas*,ImGuiNET.ImFontAtlasCustomRect*,System.Numerics.Vector2*,System.Numerics.Vector2*)">
            <summary>
            Ims the font atlas calc custom rect uv using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="rect">The rect</param>
            <param name="out_uv_min">The out uv min</param>
            <param name="out_uv_max">The out uv max</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_Clear(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_ClearFonts(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas clear fonts using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_ClearInputData(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas clear input data using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_ClearTexData(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas clear tex data using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_destroy(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetCustomRectByIndex(ImGuiNET.ImFontAtlas*,System.Int32)">
            <summary>
            Ims the font atlas get custom rect by index using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="index">The index</param>
            <returns>The im font atlas custom rect</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesChineseFull(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges chinese full using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges chinese simplified common using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesCyrillic(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges cyrillic using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesDefault(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges default using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesGreek(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges greek using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesJapanese(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges japanese using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesKorean(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges korean using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesThai(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges thai using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetGlyphRangesVietnamese(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas get glyph ranges vietnamese using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetMouseCursorTexData(ImGuiNET.ImFontAtlas*,ImGuiNET.ImGuiMouseCursor,System.Numerics.Vector2*,System.Numerics.Vector2*,System.Numerics.Vector2*,System.Numerics.Vector2*)">
            <summary>
            Ims the font atlas get mouse cursor tex data using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="cursor">The cursor</param>
            <param name="out_offset">The out offset</param>
            <param name="out_size">The out size</param>
            <param name="out_uv_border">The out uv border</param>
            <param name="out_uv_fill">The out uv fill</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetTexDataAsAlpha8(ImGuiNET.ImFontAtlas*,System.Byte**,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Ims the font atlas get tex data as alpha 8 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetTexDataAsAlpha8(ImGuiNET.ImFontAtlas*,System.IntPtr*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Ims the font atlas get tex data as alpha 8 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetTexDataAsRGBA32(ImGuiNET.ImFontAtlas*,System.Byte**,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Ims the font atlas get tex data as rgba 32 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_GetTexDataAsRGBA32(ImGuiNET.ImFontAtlas*,System.IntPtr*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Ims the font atlas get tex data as rgba 32 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="out_pixels">The out pixels</param>
            <param name="out_width">The out width</param>
            <param name="out_height">The out height</param>
            <param name="out_bytes_per_pixel">The out bytes per pixel</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_ImFontAtlas">
            <summary>
            Ims the font atlas im font atlas
            </summary>
            <returns>The im font atlas</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_IsBuilt(ImGuiNET.ImFontAtlas*)">
            <summary>
            Ims the font atlas is built using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlas_SetTexID(ImGuiNET.ImFontAtlas*,System.IntPtr)">
            <summary>
            Ims the font atlas set tex id using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="id">The id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlasCustomRect_destroy(ImGuiNET.ImFontAtlasCustomRect*)">
            <summary>
            Ims the font atlas custom rect destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlasCustomRect_ImFontAtlasCustomRect">
            <summary>
            Ims the font atlas custom rect im font atlas custom rect
            </summary>
            <returns>The im font atlas custom rect</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontAtlasCustomRect_IsPacked(ImGuiNET.ImFontAtlasCustomRect*)">
            <summary>
            Ims the font atlas custom rect is packed using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontConfig_destroy(ImGuiNET.ImFontConfig*)">
            <summary>
            Ims the font config destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontConfig_ImFontConfig">
            <summary>
            Ims the font config im font config
            </summary>
            <returns>The im font config</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_AddChar(ImGuiNET.ImFontGlyphRangesBuilder*,System.UInt16)">
            <summary>
            Ims the font glyph ranges builder add char using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_AddRanges(ImGuiNET.ImFontGlyphRangesBuilder*,System.UInt16*)">
            <summary>
            Ims the font glyph ranges builder add ranges using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="ranges">The ranges</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_AddText(ImGuiNET.ImFontGlyphRangesBuilder*,System.Byte*,System.Byte*)">
            <summary>
            Ims the font glyph ranges builder add text using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="text">The text</param>
            <param name="text_end">The text end</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_BuildRanges(ImGuiNET.ImFontGlyphRangesBuilder*,ImGuiNET.ImVector*)">
            <summary>
            Ims the font glyph ranges builder build ranges using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="out_ranges">The out ranges</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_Clear(ImGuiNET.ImFontGlyphRangesBuilder*)">
            <summary>
            Ims the font glyph ranges builder clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_destroy(ImGuiNET.ImFontGlyphRangesBuilder*)">
            <summary>
            Ims the font glyph ranges builder destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_GetBit(ImGuiNET.ImFontGlyphRangesBuilder*,System.UInt32)">
            <summary>
            Ims the font glyph ranges builder get bit using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="n">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder">
            <summary>
            Ims the font glyph ranges builder im font glyph ranges builder
            </summary>
            <returns>The im font glyph ranges builder</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImFontGlyphRangesBuilder_SetBit(ImGuiNET.ImFontGlyphRangesBuilder*,System.UInt32)">
            <summary>
            Ims the font glyph ranges builder set bit using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="n">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_ClearSelection(ImGuiNET.ImGuiInputTextCallbackData*)">
            <summary>
            Ims the gui input text callback data clear selection using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_DeleteChars(ImGuiNET.ImGuiInputTextCallbackData*,System.Int32,System.Int32)">
            <summary>
            Ims the gui input text callback data delete chars using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
            <param name="bytes_count">The bytes count</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_destroy(ImGuiNET.ImGuiInputTextCallbackData*)">
            <summary>
            Ims the gui input text callback data destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_HasSelection(ImGuiNET.ImGuiInputTextCallbackData*)">
            <summary>
            Ims the gui input text callback data has selection using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_ImGuiInputTextCallbackData">
            <summary>
            Ims the gui input text callback data im gui input text callback data
            </summary>
            <returns>The im gui input text callback data</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_InsertChars(ImGuiNET.ImGuiInputTextCallbackData*,System.Int32,System.Byte*,System.Byte*)">
            <summary>
            Ims the gui input text callback data insert chars using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="pos">The pos</param>
            <param name="text">The text</param>
            <param name="text_end">The text end</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiInputTextCallbackData_SelectAll(ImGuiNET.ImGuiInputTextCallbackData*)">
            <summary>
            Ims the gui input text callback data select all using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddFocusEvent(ImGuiNET.ImGuiIO*,System.Byte)">
            <summary>
            Ims the gui io add focus event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="focused">The focused</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddInputCharacter(ImGuiNET.ImGuiIO*,System.UInt32)">
            <summary>
            Ims the gui io add input character using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddInputCharactersUTF8(ImGuiNET.ImGuiIO*,System.Byte*)">
            <summary>
            Ims the gui io add input characters utf 8 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="str">The str</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddInputCharacterUTF16(ImGuiNET.ImGuiIO*,System.UInt16)">
            <summary>
            Ims the gui io add input character utf 16 using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="c">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddKeyAnalogEvent(ImGuiNET.ImGuiIO*,ImGuiNET.ImGuiKey,System.Byte,System.Single)">
            <summary>
            Ims the gui io add key analog event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="down">The down</param>
            <param name="v">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddKeyEvent(ImGuiNET.ImGuiIO*,ImGuiNET.ImGuiKey,System.Byte)">
            <summary>
            Ims the gui io add key event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="down">The down</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddMouseButtonEvent(ImGuiNET.ImGuiIO*,System.Int32,System.Byte)">
            <summary>
            Ims the gui io add mouse button event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="button">The button</param>
            <param name="down">The down</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddMousePosEvent(ImGuiNET.ImGuiIO*,System.Single,System.Single)">
            <summary>
            Ims the gui io add mouse pos event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddMouseSourceEvent(ImGuiNET.ImGuiIO*,ImGuiNET.ImGuiMouseSource)">
            <summary>
            Ims the gui io add mouse source event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="source">The source</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddMouseViewportEvent(ImGuiNET.ImGuiIO*,System.UInt32)">
            <summary>
            Ims the gui io add mouse viewport event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="id">The id</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_AddMouseWheelEvent(ImGuiNET.ImGuiIO*,System.Single,System.Single)">
            <summary>
            Ims the gui io add mouse wheel event using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="wheel_x">The wheel</param>
            <param name="wheel_y">The wheel</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_ClearInputCharacters(ImGuiNET.ImGuiIO*)">
            <summary>
            Ims the gui io clear input characters using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_ClearInputKeys(ImGuiNET.ImGuiIO*)">
            <summary>
            Ims the gui io clear input keys using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_destroy(ImGuiNET.ImGuiIO*)">
            <summary>
            Ims the gui io destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_ImGuiIO">
            <summary>
            Ims the gui io im gui io
            </summary>
            <returns>The im gui io</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_SetAppAcceptingEvents(ImGuiNET.ImGuiIO*,System.Byte)">
            <summary>
            Ims the gui io set app accepting events using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="accepting_events">The accepting events</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiIO_SetKeyEventNativeData(ImGuiNET.ImGuiIO*,ImGuiNET.ImGuiKey,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ims the gui io set key event native data using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="native_keycode">The native keycode</param>
            <param name="native_scancode">The native scancode</param>
            <param name="native_legacy_index">The native legacy index</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiListClipper_Begin(ImGuiNET.ImGuiListClipper*,System.Int32,System.Single)">
            <summary>
            Ims the gui list clipper begin using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="items_count">The items count</param>
            <param name="items_height">The items height</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiListClipper_destroy(ImGuiNET.ImGuiListClipper*)">
            <summary>
            Ims the gui list clipper destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiListClipper_End(ImGuiNET.ImGuiListClipper*)">
            <summary>
            Ims the gui list clipper end using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiListClipper_ForceDisplayRangeByIndices(ImGuiNET.ImGuiListClipper*,System.Int32,System.Int32)">
            <summary>
            Ims the gui list clipper force display range by indices using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="item_min">The item min</param>
            <param name="item_max">The item max</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiListClipper_ImGuiListClipper">
            <summary>
            Ims the gui list clipper im gui list clipper
            </summary>
            <returns>The im gui list clipper</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiListClipper_Step(ImGuiNET.ImGuiListClipper*)">
            <summary>
            Ims the gui list clipper step using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiOnceUponAFrame_destroy(ImGuiNET.ImGuiOnceUponAFrame*)">
            <summary>
            Ims the gui once upon a frame destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiOnceUponAFrame_ImGuiOnceUponAFrame">
            <summary>
            Ims the gui once upon a frame im gui once upon a frame
            </summary>
            <returns>The im gui once upon frame</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPayload_Clear(ImGuiNET.ImGuiPayload*)">
            <summary>
            Ims the gui payload clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPayload_destroy(ImGuiNET.ImGuiPayload*)">
            <summary>
            Ims the gui payload destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPayload_ImGuiPayload">
            <summary>
            Ims the gui payload im gui payload
            </summary>
            <returns>The im gui payload</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPayload_IsDataType(ImGuiNET.ImGuiPayload*,System.Byte*)">
            <summary>
            Ims the gui payload is data type using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="type">The type</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPayload_IsDelivery(ImGuiNET.ImGuiPayload*)">
            <summary>
            Ims the gui payload is delivery using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPayload_IsPreview(ImGuiNET.ImGuiPayload*)">
            <summary>
            Ims the gui payload is preview using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformImeData_destroy(ImGuiNET.ImGuiPlatformImeData*)">
            <summary>
            Ims the gui platform ime data destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformImeData_ImGuiPlatformImeData">
            <summary>
            Ims the gui platform ime data im gui platform ime data
            </summary>
            <returns>The im gui platform ime data</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformIO_destroy(ImGuiNET.ImGuiPlatformIO*)">
            <summary>
            Ims the gui platform io destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformIO_ImGuiPlatformIO">
            <summary>
            Ims the gui platform io im gui platform io
            </summary>
            <returns>The im gui platform io</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformMonitor_destroy(ImGuiNET.ImGuiPlatformMonitor*)">
            <summary>
            Ims the gui platform monitor destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformMonitor_ImGuiPlatformMonitor">
            <summary>
            Ims the gui platform monitor im gui platform monitor
            </summary>
            <returns>The im gui platform monitor</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_BuildSortByKey(ImGuiNET.ImGuiStorage*)">
            <summary>
            Ims the gui storage build sort by key using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_Clear(ImGuiNET.ImGuiStorage*)">
            <summary>
            Ims the gui storage clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetBool(ImGuiNET.ImGuiStorage*,System.UInt32,System.Byte)">
            <summary>
            Ims the gui storage get bool using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetBoolRef(ImGuiNET.ImGuiStorage*,System.UInt32,System.Byte)">
            <summary>
            Ims the gui storage get bool ref using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetFloat(ImGuiNET.ImGuiStorage*,System.UInt32,System.Single)">
            <summary>
            Ims the gui storage get float using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetFloatRef(ImGuiNET.ImGuiStorage*,System.UInt32,System.Single)">
            <summary>
            Ims the gui storage get float ref using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The float</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetInt(ImGuiNET.ImGuiStorage*,System.UInt32,System.Int32)">
            <summary>
            Ims the gui storage get int using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetIntRef(ImGuiNET.ImGuiStorage*,System.UInt32,System.Int32)">
            <summary>
            Ims the gui storage get int ref using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetVoidPtr(ImGuiNET.ImGuiStorage*,System.UInt32)">
            <summary>
            Ims the gui storage get void ptr using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <returns>The void</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_GetVoidPtrRef(ImGuiNET.ImGuiStorage*,System.UInt32,System.Void*)">
            <summary>
            Ims the gui storage get void ptr ref using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The void</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_SetAllInt(ImGuiNET.ImGuiStorage*,System.Int32)">
            <summary>
            Ims the gui storage set all int using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_SetBool(ImGuiNET.ImGuiStorage*,System.UInt32,System.Byte)">
            <summary>
            Ims the gui storage set bool using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_SetFloat(ImGuiNET.ImGuiStorage*,System.UInt32,System.Single)">
            <summary>
            Ims the gui storage set float using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_SetInt(ImGuiNET.ImGuiStorage*,System.UInt32,System.Int32)">
            <summary>
            Ims the gui storage set int using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStorage_SetVoidPtr(ImGuiNET.ImGuiStorage*,System.UInt32,System.Void*)">
            <summary>
            Ims the gui storage set void ptr using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStoragePair_destroy(ImGuiNET.ImGuiStoragePair*)">
            <summary>
            Ims the gui storage pair destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStoragePair_ImGuiStoragePair_Int(System.UInt32,System.Int32)">
            <summary>
            Ims the gui storage pair im gui storage pair int using the specified  key
            </summary>
            <param name="_key">The key</param>
            <param name="_val_i">The val</param>
            <returns>The im gui storage pair</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStoragePair_ImGuiStoragePair_Float(System.UInt32,System.Single)">
            <summary>
            Ims the gui storage pair im gui storage pair float using the specified  key
            </summary>
            <param name="_key">The key</param>
            <param name="_val_f">The val</param>
            <returns>The im gui storage pair</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStoragePair_ImGuiStoragePair_Ptr(System.UInt32,System.Void*)">
            <summary>
            Ims the gui storage pair im gui storage pair ptr using the specified  key
            </summary>
            <param name="_key">The key</param>
            <param name="_val_p">The val</param>
            <returns>The im gui storage pair</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStyle_destroy(ImGuiNET.ImGuiStyle*)">
            <summary>
            Ims the gui style destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStyle_ImGuiStyle">
            <summary>
            Ims the gui style im gui style
            </summary>
            <returns>The im gui style</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiStyle_ScaleAllSizes(ImGuiNET.ImGuiStyle*,System.Single)">
            <summary>
            Ims the gui style scale all sizes using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="scale_factor">The scale factor</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTableColumnSortSpecs_destroy(ImGuiNET.ImGuiTableColumnSortSpecs*)">
            <summary>
            Ims the gui table column sort specs destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs">
            <summary>
            Ims the gui table column sort specs im gui table column sort specs
            </summary>
            <returns>The im gui table column sort specs</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTableSortSpecs_destroy(ImGuiNET.ImGuiTableSortSpecs*)">
            <summary>
            Ims the gui table sort specs destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTableSortSpecs_ImGuiTableSortSpecs">
            <summary>
            Ims the gui table sort specs im gui table sort specs
            </summary>
            <returns>The im gui table sort specs</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_append(ImGuiNET.ImGuiTextBuffer*,System.Byte*,System.Byte*)">
            <summary>
            Ims the gui text buffer append using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="str">The str</param>
            <param name="str_end">The str end</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_appendf(ImGuiNET.ImGuiTextBuffer*,System.Byte*)">
            <summary>
            Ims the gui text buffer appendf using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_begin(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer begin using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_c_str(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer c str using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_clear(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_destroy(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_empty(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer empty using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_end(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer end using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_ImGuiTextBuffer">
            <summary>
            Ims the gui text buffer im gui text buffer
            </summary>
            <returns>The im gui text buffer</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_reserve(ImGuiNET.ImGuiTextBuffer*,System.Int32)">
            <summary>
            Ims the gui text buffer reserve using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="capacity">The capacity</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextBuffer_size(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Ims the gui text buffer size using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_Build(ImGuiNET.ImGuiTextFilter*)">
            <summary>
            Ims the gui text filter build using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_Clear(ImGuiNET.ImGuiTextFilter*)">
            <summary>
            Ims the gui text filter clear using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_destroy(ImGuiNET.ImGuiTextFilter*)">
            <summary>
            Ims the gui text filter destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_Draw(ImGuiNET.ImGuiTextFilter*,System.Byte*,System.Single)">
            <summary>
            Ims the gui text filter draw using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="label">The label</param>
            <param name="width">The width</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_ImGuiTextFilter(System.Byte*)">
            <summary>
            Ims the gui text filter im gui text filter using the specified default filter
            </summary>
            <param name="default_filter">The default filter</param>
            <returns>The im gui text filter</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_IsActive(ImGuiNET.ImGuiTextFilter*)">
            <summary>
            Ims the gui text filter is active using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextFilter_PassFilter(ImGuiNET.ImGuiTextFilter*,System.Byte*,System.Byte*)">
            <summary>
            Ims the gui text filter pass filter using the specified self
            </summary>
            <param name="self">The self</param>
            <param name="text">The text</param>
            <param name="text_end">The text end</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextRange_destroy(ImGuiNET.ImGuiTextRange*)">
            <summary>
            Ims the gui text range destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextRange_empty(ImGuiNET.ImGuiTextRange*)">
            <summary>
            Ims the gui text range empty using the specified self
            </summary>
            <param name="self">The self</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextRange_ImGuiTextRange_Nil">
            <summary>
            Ims the gui text range im gui text range nil
            </summary>
            <returns>The im gui text range</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextRange_ImGuiTextRange_Str(System.Byte*,System.Byte*)">
            <summary>
            Ims the gui text range im gui text range str using the specified  b
            </summary>
            <param name="_b">The </param>
            <param name="_e">The </param>
            <returns>The im gui text range</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiTextRange_split(ImGuiNET.ImGuiTextRange*,System.Byte,ImGuiNET.ImVector*)">
            <summary>
            
            </summary>
            <param name="self"></param>
            <param name="separator"></param>
            <param name="out"></param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiViewport_destroy(ImGuiNET.ImGuiViewport*)">
            <summary>
            Ims the gui viewport destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiViewport_GetCenter(System.Numerics.Vector2*,ImGuiNET.ImGuiViewport*)">
            <summary>
            Ims the gui viewport get center using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiViewport_GetWorkCenter(System.Numerics.Vector2*,ImGuiNET.ImGuiViewport*)">
            <summary>
            Ims the gui viewport get work center using the specified p out
            </summary>
            <param name="pOut">The out</param>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiViewport_ImGuiViewport">
            <summary>
            Ims the gui viewport im gui viewport
            </summary>
            <returns>The im gui viewport</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiWindowClass_destroy(ImGuiNET.ImGuiWindowClass*)">
            <summary>
            Ims the gui window class destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiWindowClass_ImGuiWindowClass">
            <summary>
            Ims the gui window class im gui window
            </summary>
            <returns>The im gui window class</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImVec2_destroy(System.Numerics.Vector2*)">
            <summary>
            Ims the vec 2 destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImVec2_ImVec2_Nil">
            <summary>
            Ims the vec 2 im vec 2 nil
            </summary>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImVec2_ImVec2_Float(System.Single,System.Single)">
            <summary>
            Ims the vec 2 im vec 2 float using the specified  x
            </summary>
            <param name="_x">The </param>
            <param name="_y">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImVec4_destroy(System.Numerics.Vector4*)">
            <summary>
            Ims the vec 4 destroy using the specified self
            </summary>
            <param name="self">The self</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImVec4_ImVec4_Nil">
            <summary>
            Ims the vec 4 im vec 4 nil
            </summary>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImVec4_ImVec4_Float(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Ims the vec 4 im vec 4 float using the specified  x
            </summary>
            <param name="_x">The </param>
            <param name="_y">The </param>
            <param name="_z">The </param>
            <param name="_w">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformIO_Set_Platform_GetWindowPos(ImGuiNET.ImGuiPlatformIO*,System.IntPtr)">
            <summary>
            Ims the gui platform io set platform get window pos using the specified platform io
            </summary>
            <param name="platform_io">The platform io</param>
            <param name="funcPtr">The func ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiNative.ImGuiPlatformIO_Set_Platform_GetWindowSize(ImGuiNET.ImGuiPlatformIO*,System.IntPtr)">
            <summary>
            Ims the gui platform io set platform get window size using the specified platform io
            </summary>
            <param name="platform_io">The platform io</param>
            <param name="funcPtr">The func ptr</param>
        </member>
        <member name="T:ImGuiNET.ImGuiNavInput">
            <summary>
            The im gui nav input enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.Activate">
            <summary>
            The activate im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.Cancel">
            <summary>
            The cancel im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.Input">
            <summary>
            The input im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.Menu">
            <summary>
            The menu im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.DpadLeft">
            <summary>
            The dpad left im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.DpadRight">
            <summary>
            The dpad right im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.DpadUp">
            <summary>
            The dpad up im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.DpadDown">
            <summary>
            The dpad down im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.LStickLeft">
            <summary>
            The stick left im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.LStickRight">
            <summary>
            The stick right im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.LStickUp">
            <summary>
            The stick up im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.LStickDown">
            <summary>
            The stick down im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.FocusPrev">
            <summary>
            The focus prev im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.FocusNext">
            <summary>
            The focus next im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.TweakSlow">
            <summary>
            The tweak slow im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.TweakFast">
            <summary>
            The tweak fast im gui nav input
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiNavInput.COUNT">
            <summary>
            The count im gui nav input
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiOnceUponAFrame">
            <summary>
            The im gui once upon frame
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiOnceUponAFrame.RefFrame">
            <summary>
            The ref frame
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiOnceUponAFramePtr">
            <summary>
            The im gui once upon frame ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiOnceUponAFramePtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiOnceUponAFramePtr.#ctor(ImGuiNET.ImGuiOnceUponAFrame*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiOnceUponAFramePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiOnceUponAFramePtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiOnceUponAFramePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiOnceUponAFramePtr.op_Implicit(ImGuiNET.ImGuiOnceUponAFrame*)~ImGuiNET.ImGuiOnceUponAFramePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiOnceUponAFramePtr.op_Implicit(ImGuiNET.ImGuiOnceUponAFramePtr)~ImGuiNET.ImGuiOnceUponAFrame*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiOnceUponAFramePtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiOnceUponAFramePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiOnceUponAFramePtr.RefFrame">
            <summary>
            Gets the value of the ref frame
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiOnceUponAFramePtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPayload">
            <summary>
            The im gui payload
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.DataSize">
            <summary>
            The data size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.SourceId">
            <summary>
            The source id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.SourceParentId">
            <summary>
            The source parent id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.DataFrameCount">
            <summary>
            The data frame count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.DataType">
            <summary>
            The data type
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.Preview">
            <summary>
            The preview
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPayload.Delivery">
            <summary>
            The delivery
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPayloadPtr">
            <summary>
            The im gui payload ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.#ctor(ImGuiNET.ImGuiPayload*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPayloadPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPayloadPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.op_Implicit(ImGuiNET.ImGuiPayload*)~ImGuiNET.ImGuiPayloadPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.op_Implicit(ImGuiNET.ImGuiPayloadPtr)~ImGuiNET.ImGuiPayload*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiPayloadPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.Data">
            <summary>
            Gets or sets the value of the data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.DataSize">
            <summary>
            Gets the value of the data size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.SourceId">
            <summary>
            Gets the value of the source id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.SourceParentId">
            <summary>
            Gets the value of the source parent id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.DataFrameCount">
            <summary>
            Gets the value of the data frame count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.DataType">
            <summary>
            Gets the value of the data type
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.Preview">
            <summary>
            Gets the value of the preview
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPayloadPtr.Delivery">
            <summary>
            Gets the value of the delivery
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.IsDataType(System.String)">
            <summary>
            Describes whether this instance is data type
            </summary>
            <param name="type">The type</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.IsDelivery">
            <summary>
            Describes whether this instance is delivery
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPayloadPtr.IsPreview">
            <summary>
            Describes whether this instance is preview
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:ImGuiNET.ImGuiPlatformImeData">
            <summary>
            The im gui platform ime data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformImeData.WantVisible">
            <summary>
            The want visible
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformImeData.InputPos">
            <summary>
            The input pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformImeData.InputLineHeight">
            <summary>
            The input line height
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPlatformImeDataPtr">
            <summary>
            The im gui platform ime data ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformImeDataPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformImeDataPtr.#ctor(ImGuiNET.ImGuiPlatformImeData*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPlatformImeDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformImeDataPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPlatformImeDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformImeDataPtr.op_Implicit(ImGuiNET.ImGuiPlatformImeData*)~ImGuiNET.ImGuiPlatformImeDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformImeDataPtr.op_Implicit(ImGuiNET.ImGuiPlatformImeDataPtr)~ImGuiNET.ImGuiPlatformImeData*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformImeDataPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiPlatformImeDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformImeDataPtr.WantVisible">
            <summary>
            Gets the value of the want visible
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformImeDataPtr.InputPos">
            <summary>
            Gets the value of the input pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformImeDataPtr.InputLineHeight">
            <summary>
            Gets the value of the input line height
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformImeDataPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPlatformIO">
            <summary>
            The im gui platform io
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_CreateWindow">
            <summary>
            The platform createwindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_DestroyWindow">
            <summary>
            The platform destroywindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_ShowWindow">
            <summary>
            The platform showwindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_SetWindowPos">
            <summary>
            The platform setwindowpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_GetWindowPos">
            <summary>
            The platform getwindowpos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_SetWindowSize">
            <summary>
            The platform setwindowsize
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_GetWindowSize">
            <summary>
            The platform getwindowsize
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_SetWindowFocus">
            <summary>
            The platform setwindowfocus
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_GetWindowFocus">
            <summary>
            The platform getwindowfocus
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_GetWindowMinimized">
            <summary>
            The platform getwindowminimized
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_SetWindowTitle">
            <summary>
            The platform setwindowtitle
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_SetWindowAlpha">
            <summary>
            The platform setwindowalpha
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_UpdateWindow">
            <summary>
            The platform updatewindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_RenderWindow">
            <summary>
            The platform renderwindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_SwapBuffers">
            <summary>
            The platform swapbuffers
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_GetWindowDpiScale">
            <summary>
            The platform getwindowdpiscale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_OnChangedViewport">
            <summary>
            The platform onchangedviewport
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Platform_CreateVkSurface">
            <summary>
            The platform createvksurface
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Renderer_CreateWindow">
            <summary>
            The renderer createwindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Renderer_DestroyWindow">
            <summary>
            The renderer destroywindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Renderer_SetWindowSize">
            <summary>
            The renderer setwindowsize
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Renderer_RenderWindow">
            <summary>
            The renderer renderwindow
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Renderer_SwapBuffers">
            <summary>
            The renderer swapbuffers
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Monitors">
            <summary>
            The monitors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformIO.Viewports">
            <summary>
            The viewports
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPlatformIOPtr">
            <summary>
            The im gui platform io ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformIOPtr.#ctor(ImGuiNET.ImGuiPlatformIO*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPlatformIOPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformIOPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPlatformIOPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformIOPtr.op_Implicit(ImGuiNET.ImGuiPlatformIO*)~ImGuiNET.ImGuiPlatformIOPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformIOPtr.op_Implicit(ImGuiNET.ImGuiPlatformIOPtr)~ImGuiNET.ImGuiPlatformIO*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformIOPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiPlatformIOPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_CreateWindow">
            <summary>
            Gets the value of the platform createwindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_DestroyWindow">
            <summary>
            Gets the value of the platform destroywindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_ShowWindow">
            <summary>
            Gets the value of the platform showwindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_SetWindowPos">
            <summary>
            Gets the value of the platform setwindowpos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_GetWindowPos">
            <summary>
            Gets the value of the platform getwindowpos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_SetWindowSize">
            <summary>
            Gets the value of the platform setwindowsize
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_GetWindowSize">
            <summary>
            Gets the value of the platform getwindowsize
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_SetWindowFocus">
            <summary>
            Gets the value of the platform setwindowfocus
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_GetWindowFocus">
            <summary>
            Gets the value of the platform getwindowfocus
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_GetWindowMinimized">
            <summary>
            Gets the value of the platform getwindowminimized
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_SetWindowTitle">
            <summary>
            Gets the value of the platform setwindowtitle
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_SetWindowAlpha">
            <summary>
            Gets the value of the platform setwindowalpha
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_UpdateWindow">
            <summary>
            Gets the value of the platform updatewindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_RenderWindow">
            <summary>
            Gets the value of the platform renderwindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_SwapBuffers">
            <summary>
            Gets the value of the platform swapbuffers
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_GetWindowDpiScale">
            <summary>
            Gets the value of the platform getwindowdpiscale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_OnChangedViewport">
            <summary>
            Gets the value of the platform onchangedviewport
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Platform_CreateVkSurface">
            <summary>
            Gets the value of the platform createvksurface
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Renderer_CreateWindow">
            <summary>
            Gets the value of the renderer createwindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Renderer_DestroyWindow">
            <summary>
            Gets the value of the renderer destroywindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Renderer_SetWindowSize">
            <summary>
            Gets the value of the renderer setwindowsize
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Renderer_RenderWindow">
            <summary>
            Gets the value of the renderer renderwindow
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Renderer_SwapBuffers">
            <summary>
            Gets the value of the renderer swapbuffers
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Monitors">
            <summary>
            Gets the value of the monitors
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformIOPtr.Viewports">
            <summary>
            Gets the value of the viewports
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformIOPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPlatformMonitor">
            <summary>
            The im gui platform monitor
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformMonitor.MainPos">
            <summary>
            The main pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformMonitor.MainSize">
            <summary>
            The main size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformMonitor.WorkPos">
            <summary>
            The work pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformMonitor.WorkSize">
            <summary>
            The work size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPlatformMonitor.DpiScale">
            <summary>
            The dpi scale
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPlatformMonitorPtr">
            <summary>
            The im gui platform monitor ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformMonitorPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformMonitorPtr.#ctor(ImGuiNET.ImGuiPlatformMonitor*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPlatformMonitorPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformMonitorPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiPlatformMonitorPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformMonitorPtr.op_Implicit(ImGuiNET.ImGuiPlatformMonitor*)~ImGuiNET.ImGuiPlatformMonitorPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformMonitorPtr.op_Implicit(ImGuiNET.ImGuiPlatformMonitorPtr)~ImGuiNET.ImGuiPlatformMonitor*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformMonitorPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiPlatformMonitorPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformMonitorPtr.MainPos">
            <summary>
            Gets the value of the main pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformMonitorPtr.MainSize">
            <summary>
            Gets the value of the main size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformMonitorPtr.WorkPos">
            <summary>
            Gets the value of the work pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformMonitorPtr.WorkSize">
            <summary>
            Gets the value of the work size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiPlatformMonitorPtr.DpiScale">
            <summary>
            Gets the value of the dpi scale
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiPlatformMonitorPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiPopupFlags">
            <summary>
            The im gui popup flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.None">
            <summary>
            The none im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.MouseButtonLeft">
            <summary>
            The mouse button left im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.MouseButtonRight">
            <summary>
            The mouse button right im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.MouseButtonMiddle">
            <summary>
            The mouse button middle im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.MouseButtonMask">
            <summary>
            The mouse button mask im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.MouseButtonDefault">
            <summary>
            The mouse button default im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.NoOpenOverExistingPopup">
            <summary>
            The no open over existing popup im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.NoOpenOverItems">
            <summary>
            The no open over items im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.AnyPopupId">
            <summary>
            The any popup id im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.AnyPopupLevel">
            <summary>
            The any popup level im gui popup flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiPopupFlags.AnyPopup">
            <summary>
            The any popup im gui popup flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiSelectableFlags">
            <summary>
            The im gui selectable flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSelectableFlags.None">
            <summary>
            The none im gui selectable flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSelectableFlags.DontClosePopups">
            <summary>
            The dont close popups im gui selectable flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSelectableFlags.SpanAllColumns">
            <summary>
            The span all columns im gui selectable flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSelectableFlags.AllowDoubleClick">
            <summary>
            The allow double click im gui selectable flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSelectableFlags.Disabled">
            <summary>
            The disabled im gui selectable flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSelectableFlags.AllowItemOverlap">
            <summary>
            The allow item overlap im gui selectable flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiSizeCallbackData">
            <summary>
            The im gui size callback data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSizeCallbackData.UserData">
            <summary>
            The user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSizeCallbackData.Pos">
            <summary>
            The pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSizeCallbackData.CurrentSize">
            <summary>
            The current size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSizeCallbackData.DesiredSize">
            <summary>
            The desired size
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiSizeCallbackDataPtr">
            <summary>
            The im gui size callback data ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiSizeCallbackDataPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiSizeCallbackDataPtr.#ctor(ImGuiNET.ImGuiSizeCallbackData*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiSizeCallbackDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiSizeCallbackDataPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiSizeCallbackDataPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiSizeCallbackDataPtr.op_Implicit(ImGuiNET.ImGuiSizeCallbackData*)~ImGuiNET.ImGuiSizeCallbackDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiSizeCallbackDataPtr.op_Implicit(ImGuiNET.ImGuiSizeCallbackDataPtr)~ImGuiNET.ImGuiSizeCallbackData*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiSizeCallbackDataPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiSizeCallbackDataPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiSizeCallbackDataPtr.UserData">
            <summary>
            Gets or sets the value of the user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiSizeCallbackDataPtr.Pos">
            <summary>
            Gets the value of the pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiSizeCallbackDataPtr.CurrentSize">
            <summary>
            Gets the value of the current size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiSizeCallbackDataPtr.DesiredSize">
            <summary>
            Gets the value of the desired size
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiSliderFlags">
            <summary>
            The im gui slider flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSliderFlags.None">
            <summary>
            The none im gui slider flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSliderFlags.AlwaysClamp">
            <summary>
            The always clamp im gui slider flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSliderFlags.Logarithmic">
            <summary>
            The logarithmic im gui slider flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSliderFlags.NoRoundToFormat">
            <summary>
            The no round to format im gui slider flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSliderFlags.NoInput">
            <summary>
            The no input im gui slider flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSliderFlags.InvalidMask">
            <summary>
            The invalid mask im gui slider flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiSortDirection">
            <summary>
            The im gui sort direction enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSortDirection.None">
            <summary>
            The none im gui sort direction
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSortDirection.Ascending">
            <summary>
            The ascending im gui sort direction
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiSortDirection.Descending">
            <summary>
            The descending im gui sort direction
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiStorage">
            <summary>
            The im gui storage
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStorage.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiStoragePtr">
            <summary>
            The im gui storage ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStoragePtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.#ctor(ImGuiNET.ImGuiStorage*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiStoragePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiStoragePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.op_Implicit(ImGuiNET.ImGuiStorage*)~ImGuiNET.ImGuiStoragePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.op_Implicit(ImGuiNET.ImGuiStoragePtr)~ImGuiNET.ImGuiStorage*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiStoragePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiStoragePtr.Data">
            <summary>
            Gets the value of the data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.BuildSortByKey">
            <summary>
            Builds the sort by key
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetBool(System.UInt32)">
            <summary>
            Describes whether this instance get bool
            </summary>
            <param name="key">The key</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetBool(System.UInt32,System.Boolean)">
            <summary>
            Describes whether this instance get bool
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetBoolRef(System.UInt32)">
            <summary>
            Gets the bool ref using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetBoolRef(System.UInt32,System.Boolean)">
            <summary>
            Gets the bool ref using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetFloat(System.UInt32)">
            <summary>
            Gets the float using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetFloat(System.UInt32,System.Single)">
            <summary>
            Gets the float using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetFloatRef(System.UInt32)">
            <summary>
            Gets the float ref using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetFloatRef(System.UInt32,System.Single)">
            <summary>
            Gets the float ref using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetInt(System.UInt32)">
            <summary>
            Gets the int using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetInt(System.UInt32,System.Int32)">
            <summary>
            Gets the int using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetIntRef(System.UInt32)">
            <summary>
            Gets the int ref using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetIntRef(System.UInt32,System.Int32)">
            <summary>
            Gets the int ref using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetVoidPtr(System.UInt32)">
            <summary>
            Gets the void ptr using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetVoidPtrRef(System.UInt32)">
            <summary>
            Gets the void ptr ref using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.GetVoidPtrRef(System.UInt32,System.IntPtr)">
            <summary>
            Gets the void ptr ref using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="default_val">The default val</param>
            <returns>The ret</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.SetAllInt(System.Int32)">
            <summary>
            Sets the all int using the specified val
            </summary>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.SetBool(System.UInt32,System.Boolean)">
            <summary>
            Sets the bool using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.SetFloat(System.UInt32,System.Single)">
            <summary>
            Sets the float using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.SetInt(System.UInt32,System.Int32)">
            <summary>
            Sets the int using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePtr.SetVoidPtr(System.UInt32,System.IntPtr)">
            <summary>
            Sets the void ptr using the specified key
            </summary>
            <param name="key">The key</param>
            <param name="val">The val</param>
        </member>
        <member name="T:ImGuiNET.ImGuiStyle">
            <summary>
            The im gui style
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Alpha">
            <summary>
            The alpha
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.DisabledAlpha">
            <summary>
            The disabled alpha
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.WindowPadding">
            <summary>
            The window padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.WindowRounding">
            <summary>
            The window rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.WindowBorderSize">
            <summary>
            The window border size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.WindowMinSize">
            <summary>
            The window min size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.WindowTitleAlign">
            <summary>
            The window title align
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.WindowMenuButtonPosition">
            <summary>
            The window menu button position
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ChildRounding">
            <summary>
            The child rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ChildBorderSize">
            <summary>
            The child border size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.PopupRounding">
            <summary>
            The popup rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.PopupBorderSize">
            <summary>
            The popup border size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.FramePadding">
            <summary>
            The frame padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.FrameRounding">
            <summary>
            The frame rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.FrameBorderSize">
            <summary>
            The frame border size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ItemSpacing">
            <summary>
            The item spacing
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ItemInnerSpacing">
            <summary>
            The item inner spacing
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.CellPadding">
            <summary>
            The cell padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.TouchExtraPadding">
            <summary>
            The touch extra padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.IndentSpacing">
            <summary>
            The indent spacing
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ColumnsMinSpacing">
            <summary>
            The columns min spacing
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ScrollbarSize">
            <summary>
            The scrollbar size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ScrollbarRounding">
            <summary>
            The scrollbar rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.GrabMinSize">
            <summary>
            The grab min size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.GrabRounding">
            <summary>
            The grab rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.LogSliderDeadzone">
            <summary>
            The log slider deadzone
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.TabRounding">
            <summary>
            The tab rounding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.TabBorderSize">
            <summary>
            The tab border size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.TabMinWidthForCloseButton">
            <summary>
            The tab min width for close button
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ColorButtonPosition">
            <summary>
            The color button position
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.ButtonTextAlign">
            <summary>
            The button text align
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.SelectableTextAlign">
            <summary>
            The selectable text align
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.SeparatorTextBorderSize">
            <summary>
            The separator text border size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.SeparatorTextAlign">
            <summary>
            The separator text align
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.SeparatorTextPadding">
            <summary>
            The separator text padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.DisplayWindowPadding">
            <summary>
            The display window padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.DisplaySafeAreaPadding">
            <summary>
            The display safe area padding
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.MouseCursorScale">
            <summary>
            The mouse cursor scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.AntiAliasedLines">
            <summary>
            The anti aliased lines
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.AntiAliasedLinesUseTex">
            <summary>
            The anti aliased lines use tex
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.AntiAliasedFill">
            <summary>
            The anti aliased fill
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.CurveTessellationTol">
            <summary>
            The curve tessellation tol
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.CircleTessellationMaxError">
            <summary>
            The circle tessellation max error
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_0">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_1">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_2">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_3">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_4">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_5">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_6">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_7">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_8">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_9">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_10">
            <summary>
            The colors 10
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_11">
            <summary>
            The colors 11
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_12">
            <summary>
            The colors 12
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_13">
            <summary>
            The colors 13
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_14">
            <summary>
            The colors 14
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_15">
            <summary>
            The colors 15
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_16">
            <summary>
            The colors 16
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_17">
            <summary>
            The colors 17
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_18">
            <summary>
            The colors 18
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_19">
            <summary>
            The colors 19
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_20">
            <summary>
            The colors 20
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_21">
            <summary>
            The colors 21
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_22">
            <summary>
            The colors 22
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_23">
            <summary>
            The colors 23
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_24">
            <summary>
            The colors 24
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_25">
            <summary>
            The colors 25
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_26">
            <summary>
            The colors 26
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_27">
            <summary>
            The colors 27
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_28">
            <summary>
            The colors 28
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_29">
            <summary>
            The colors 29
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_30">
            <summary>
            The colors 30
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_31">
            <summary>
            The colors 31
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_32">
            <summary>
            The colors 32
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_33">
            <summary>
            The colors 33
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_34">
            <summary>
            The colors 34
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_35">
            <summary>
            The colors 35
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_36">
            <summary>
            The colors 36
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_37">
            <summary>
            The colors 37
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_38">
            <summary>
            The colors 38
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_39">
            <summary>
            The colors 39
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_40">
            <summary>
            The colors 40
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_41">
            <summary>
            The colors 41
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_42">
            <summary>
            The colors 42
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_43">
            <summary>
            The colors 43
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_44">
            <summary>
            The colors 44
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_45">
            <summary>
            The colors 45
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_46">
            <summary>
            The colors 46
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_47">
            <summary>
            The colors 47
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_48">
            <summary>
            The colors 48
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_49">
            <summary>
            The colors 49
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_50">
            <summary>
            The colors 50
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_51">
            <summary>
            The colors 51
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_52">
            <summary>
            The colors 52
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_53">
            <summary>
            The colors 53
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyle.Colors_54">
            <summary>
            The colors 54
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiStylePtr">
            <summary>
            The im gui style ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.#ctor(ImGuiNET.ImGuiStyle*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiStylePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiStylePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.op_Implicit(ImGuiNET.ImGuiStyle*)~ImGuiNET.ImGuiStylePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.op_Implicit(ImGuiNET.ImGuiStylePtr)~ImGuiNET.ImGuiStyle*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiStylePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.Alpha">
            <summary>
            Gets the value of the alpha
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.DisabledAlpha">
            <summary>
            Gets the value of the disabled alpha
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.WindowPadding">
            <summary>
            Gets the value of the window padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.WindowRounding">
            <summary>
            Gets the value of the window rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.WindowBorderSize">
            <summary>
            Gets the value of the window border size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.WindowMinSize">
            <summary>
            Gets the value of the window min size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.WindowTitleAlign">
            <summary>
            Gets the value of the window title align
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.WindowMenuButtonPosition">
            <summary>
            Gets the value of the window menu button position
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ChildRounding">
            <summary>
            Gets the value of the child rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ChildBorderSize">
            <summary>
            Gets the value of the child border size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.PopupRounding">
            <summary>
            Gets the value of the popup rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.PopupBorderSize">
            <summary>
            Gets the value of the popup border size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.FramePadding">
            <summary>
            Gets the value of the frame padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.FrameRounding">
            <summary>
            Gets the value of the frame rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.FrameBorderSize">
            <summary>
            Gets the value of the frame border size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ItemSpacing">
            <summary>
            Gets the value of the item spacing
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ItemInnerSpacing">
            <summary>
            Gets the value of the item inner spacing
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.CellPadding">
            <summary>
            Gets the value of the cell padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.TouchExtraPadding">
            <summary>
            Gets the value of the touch extra padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.IndentSpacing">
            <summary>
            Gets the value of the indent spacing
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ColumnsMinSpacing">
            <summary>
            Gets the value of the columns min spacing
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ScrollbarSize">
            <summary>
            Gets the value of the scrollbar size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ScrollbarRounding">
            <summary>
            Gets the value of the scrollbar rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.GrabMinSize">
            <summary>
            Gets the value of the grab min size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.GrabRounding">
            <summary>
            Gets the value of the grab rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.LogSliderDeadzone">
            <summary>
            Gets the value of the log slider deadzone
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.TabRounding">
            <summary>
            Gets the value of the tab rounding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.TabBorderSize">
            <summary>
            Gets the value of the tab border size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.TabMinWidthForCloseButton">
            <summary>
            Gets the value of the tab min width for close button
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ColorButtonPosition">
            <summary>
            Gets the value of the color button position
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.ButtonTextAlign">
            <summary>
            Gets the value of the button text align
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.SelectableTextAlign">
            <summary>
            Gets the value of the selectable text align
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.SeparatorTextBorderSize">
            <summary>
            Gets the value of the separator text border size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.SeparatorTextAlign">
            <summary>
            Gets the value of the separator text align
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.SeparatorTextPadding">
            <summary>
            Gets the value of the separator text padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.DisplayWindowPadding">
            <summary>
            Gets the value of the display window padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.DisplaySafeAreaPadding">
            <summary>
            Gets the value of the display safe area padding
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.MouseCursorScale">
            <summary>
            Gets the value of the mouse cursor scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.AntiAliasedLines">
            <summary>
            Gets the value of the anti aliased lines
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.AntiAliasedLinesUseTex">
            <summary>
            Gets the value of the anti aliased lines use tex
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.AntiAliasedFill">
            <summary>
            Gets the value of the anti aliased fill
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.CurveTessellationTol">
            <summary>
            Gets the value of the curve tessellation tol
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.CircleTessellationMaxError">
            <summary>
            Gets the value of the circle tessellation max error
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStylePtr.Colors">
            <summary>
            Gets the value of the colors
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStylePtr.ScaleAllSizes(System.Single)">
            <summary>
            Scales the all sizes using the specified scale factor
            </summary>
            <param name="scale_factor">The scale factor</param>
        </member>
        <member name="T:ImGuiNET.ImGuiStyleVar">
            <summary>
            The im gui style var enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.Alpha">
            <summary>
            The alpha im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.DisabledAlpha">
            <summary>
            The disabled alpha im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.WindowPadding">
            <summary>
            The window padding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.WindowRounding">
            <summary>
            The window rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.WindowBorderSize">
            <summary>
            The window border size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.WindowMinSize">
            <summary>
            The window min size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.WindowTitleAlign">
            <summary>
            The window title align im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ChildRounding">
            <summary>
            The child rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ChildBorderSize">
            <summary>
            The child border size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.PopupRounding">
            <summary>
            The popup rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.PopupBorderSize">
            <summary>
            The popup border size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.FramePadding">
            <summary>
            The frame padding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.FrameRounding">
            <summary>
            The frame rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.FrameBorderSize">
            <summary>
            The frame border size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ItemSpacing">
            <summary>
            The item spacing im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ItemInnerSpacing">
            <summary>
            The item inner spacing im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.IndentSpacing">
            <summary>
            The indent spacing im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.CellPadding">
            <summary>
            The cell padding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ScrollbarSize">
            <summary>
            The scrollbar size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ScrollbarRounding">
            <summary>
            The scrollbar rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.GrabMinSize">
            <summary>
            The grab min size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.GrabRounding">
            <summary>
            The grab rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.TabRounding">
            <summary>
            The tab rounding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.ButtonTextAlign">
            <summary>
            The button text align im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.SelectableTextAlign">
            <summary>
            The selectable text align im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.SeparatorTextBorderSize">
            <summary>
            The separator text border size im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.SeparatorTextAlign">
            <summary>
            The separator text align im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.SeparatorTextPadding">
            <summary>
            The separator text padding im gui style var
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStyleVar.COUNT">
            <summary>
            The count im gui style var
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTabBarFlags">
            <summary>
            The im gui tab bar flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.None">
            <summary>
            The none im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.Reorderable">
            <summary>
            The reorderable im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.AutoSelectNewTabs">
            <summary>
            The auto select new tabs im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.TabListPopupButton">
            <summary>
            The tab list popup button im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.NoCloseWithMiddleMouseButton">
            <summary>
            The no close with middle mouse button im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.NoTabListScrollingButtons">
            <summary>
            The no tab list scrolling buttons im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.NoTooltip">
            <summary>
            The no tooltip im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.FittingPolicyResizeDown">
            <summary>
            The fitting policy resize down im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.FittingPolicyScroll">
            <summary>
            The fitting policy scroll im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.FittingPolicyMask">
            <summary>
            The fitting policy mask im gui tab bar flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabBarFlags.FittingPolicyDefault">
            <summary>
            The fitting policy default im gui tab bar flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTabItemFlags">
            <summary>
            The im gui tab item flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.None">
            <summary>
            The none im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.UnsavedDocument">
            <summary>
            The unsaved document im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.SetSelected">
            <summary>
            The set selected im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.NoCloseWithMiddleMouseButton">
            <summary>
            The no close with middle mouse button im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.NoPushId">
            <summary>
            The no push id im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.NoTooltip">
            <summary>
            The no tooltip im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.NoReorder">
            <summary>
            The no reorder im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.Leading">
            <summary>
            The leading im gui tab item flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTabItemFlags.Trailing">
            <summary>
            The trailing im gui tab item flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableBgTarget">
            <summary>
            The im gui table bg target enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableBgTarget.None">
            <summary>
            The none im gui table bg target
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableBgTarget.RowBg0">
            <summary>
            The row bg im gui table bg target
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableBgTarget.RowBg1">
            <summary>
            The row bg im gui table bg target
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableBgTarget.CellBg">
            <summary>
            The cell bg im gui table bg target
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableColumnFlags">
            <summary>
            The im gui table column flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.None">
            <summary>
            The none im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.Disabled">
            <summary>
            The disabled im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.DefaultHide">
            <summary>
            The default hide im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.DefaultSort">
            <summary>
            The default sort im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.WidthStretch">
            <summary>
            The width stretch im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.WidthFixed">
            <summary>
            The width fixed im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoResize">
            <summary>
            The no resize im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoReorder">
            <summary>
            The no reorder im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoHide">
            <summary>
            The no hide im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoClip">
            <summary>
            The no clip im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoSort">
            <summary>
            The no sort im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoSortAscending">
            <summary>
            The no sort ascending im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoSortDescending">
            <summary>
            The no sort descending im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoHeaderLabel">
            <summary>
            The no header label im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoHeaderWidth">
            <summary>
            The no header width im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.PreferSortAscending">
            <summary>
            The prefer sort ascending im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.PreferSortDescending">
            <summary>
            The prefer sort descending im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IndentEnable">
            <summary>
            The indent enable im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IndentDisable">
            <summary>
            The indent disable im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IsEnabled">
            <summary>
            The is enabled im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IsVisible">
            <summary>
            The is visible im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IsSorted">
            <summary>
            The is sorted im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IsHovered">
            <summary>
            The is hovered im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.WidthMask">
            <summary>
            The width mask im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.IndentMask">
            <summary>
            The indent mask im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.StatusMask">
            <summary>
            The status mask im gui table column flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnFlags.NoDirectResize">
            <summary>
            The no direct resize im gui table column flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableColumnSortSpecs">
            <summary>
            The im gui table column sort specs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnSortSpecs.ColumnUserID">
            <summary>
            The column user id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnSortSpecs.ColumnIndex">
            <summary>
            The column index
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnSortSpecs.SortOrder">
            <summary>
            The sort order
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableColumnSortSpecs.SortDirection">
            <summary>
            The sort direction
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableColumnSortSpecsPtr">
            <summary>
            The im gui table column sort specs ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableColumnSortSpecsPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTableColumnSortSpecsPtr.#ctor(ImGuiNET.ImGuiTableColumnSortSpecs*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTableColumnSortSpecsPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTableColumnSortSpecsPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTableColumnSortSpecsPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTableColumnSortSpecsPtr.op_Implicit(ImGuiNET.ImGuiTableColumnSortSpecs*)~ImGuiNET.ImGuiTableColumnSortSpecsPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTableColumnSortSpecsPtr.op_Implicit(ImGuiNET.ImGuiTableColumnSortSpecsPtr)~ImGuiNET.ImGuiTableColumnSortSpecs*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTableColumnSortSpecsPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiTableColumnSortSpecsPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiTableColumnSortSpecsPtr.ColumnUserID">
            <summary>
            Gets the value of the column user id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableColumnSortSpecsPtr.ColumnIndex">
            <summary>
            Gets the value of the column index
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableColumnSortSpecsPtr.SortOrder">
            <summary>
            Gets the value of the sort order
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableColumnSortSpecsPtr.SortDirection">
            <summary>
            Gets the value of the sort direction
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTableColumnSortSpecsPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableFlags">
            <summary>
            The im gui table flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.None">
            <summary>
            The none im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.Resizable">
            <summary>
            The resizable im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.Reorderable">
            <summary>
            The reorderable im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.Hideable">
            <summary>
            The hideable im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.Sortable">
            <summary>
            The sortable im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoSavedSettings">
            <summary>
            The no saved settings im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.ContextMenuInBody">
            <summary>
            The context menu in body im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.RowBg">
            <summary>
            The row bg im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersInnerH">
            <summary>
            The borders inner im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersOuterH">
            <summary>
            The borders outer im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersInnerV">
            <summary>
            The borders inner im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersOuterV">
            <summary>
            The borders outer im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersH">
            <summary>
            The borders im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersV">
            <summary>
            The borders im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersInner">
            <summary>
            The borders inner im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.BordersOuter">
            <summary>
            The borders outer im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.Borders">
            <summary>
            The borders im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoBordersInBody">
            <summary>
            The no borders in body im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoBordersInBodyUntilResize">
            <summary>
            The no borders in body until resize im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SizingFixedFit">
            <summary>
            The sizing fixed fit im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SizingFixedSame">
            <summary>
            The sizing fixed same im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SizingStretchProp">
            <summary>
            The sizing stretch prop im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SizingStretchSame">
            <summary>
            The sizing stretch same im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoHostExtendX">
            <summary>
            The no host extend im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoHostExtendY">
            <summary>
            The no host extend im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoKeepColumnsVisible">
            <summary>
            The no keep columns visible im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.PreciseWidths">
            <summary>
            The precise widths im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoClip">
            <summary>
            The no clip im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.PadOuterX">
            <summary>
            The pad outer im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoPadOuterX">
            <summary>
            The no pad outer im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.NoPadInnerX">
            <summary>
            The no pad inner im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.ScrollX">
            <summary>
            The scroll im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.ScrollY">
            <summary>
            The scroll im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SortMulti">
            <summary>
            The sort multi im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SortTristate">
            <summary>
            The sort tristate im gui table flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableFlags.SizingMask">
            <summary>
            The sizing mask im gui table flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableRowFlags">
            <summary>
            The im gui table row flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableRowFlags.None">
            <summary>
            The none im gui table row flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableRowFlags.Headers">
            <summary>
            The headers im gui table row flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableSortSpecs">
            <summary>
            The im gui table sort specs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableSortSpecs.Specs">
            <summary>
            The specs
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableSortSpecs.SpecsCount">
            <summary>
            The specs count
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTableSortSpecs.SpecsDirty">
            <summary>
            The specs dirty
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTableSortSpecsPtr">
            <summary>
            The im gui table sort specs ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableSortSpecsPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTableSortSpecsPtr.#ctor(ImGuiNET.ImGuiTableSortSpecs*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTableSortSpecsPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTableSortSpecsPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTableSortSpecsPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTableSortSpecsPtr.op_Implicit(ImGuiNET.ImGuiTableSortSpecs*)~ImGuiNET.ImGuiTableSortSpecsPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTableSortSpecsPtr.op_Implicit(ImGuiNET.ImGuiTableSortSpecsPtr)~ImGuiNET.ImGuiTableSortSpecs*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTableSortSpecsPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiTableSortSpecsPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiTableSortSpecsPtr.Specs">
            <summary>
            Gets the value of the specs
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableSortSpecsPtr.SpecsCount">
            <summary>
            Gets the value of the specs count
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTableSortSpecsPtr.SpecsDirty">
            <summary>
            Gets the value of the specs dirty
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTableSortSpecsPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTextBuffer">
            <summary>
            The im gui text buffer
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTextBuffer.Buf">
            <summary>
            The buf
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTextBufferPtr">
            <summary>
            The im gui text buffer ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTextBufferPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.#ctor(ImGuiNET.ImGuiTextBuffer*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTextBufferPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTextBufferPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.op_Implicit(ImGuiNET.ImGuiTextBuffer*)~ImGuiNET.ImGuiTextBufferPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.op_Implicit(ImGuiNET.ImGuiTextBufferPtr)~ImGuiNET.ImGuiTextBuffer*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiTextBufferPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiTextBufferPtr.Buf">
            <summary>
            Gets the value of the buf
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.append(System.String)">
            <summary>
            Appends the str
            </summary>
            <param name="str">The str</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.appendf(System.String)">
            <summary>
            Appendfs the fmt
            </summary>
            <param name="fmt">The fmt</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.begin">
            <summary>
            Begins this instance
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.c_str">
            <summary>
            Cs the str
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.empty">
            <summary>
            Describes whether this instance empty
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.end">
            <summary>
            Ends this instance
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.reserve(System.Int32)">
            <summary>
            Reserves the capacity
            </summary>
            <param name="capacity">The capacity</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextBufferPtr.size">
            <summary>
            Sizes this instance
            </summary>
            <returns>The ret</returns>
        </member>
        <member name="T:ImGuiNET.ImGuiTextFilter">
            <summary>
            The im gui text filter
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTextFilter.InputBuf">
            <summary>
            The input buf
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTextFilter.Filters">
            <summary>
            The filters
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTextFilter.CountGrep">
            <summary>
            The count grep
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTextFilterPtr">
            <summary>
            The im gui text filter ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTextFilterPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.#ctor(ImGuiNET.ImGuiTextFilter*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTextFilterPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTextFilterPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.op_Implicit(ImGuiNET.ImGuiTextFilter*)~ImGuiNET.ImGuiTextFilterPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.op_Implicit(ImGuiNET.ImGuiTextFilterPtr)~ImGuiNET.ImGuiTextFilter*">
            <summary>
            /
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiTextFilterPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiTextFilterPtr.InputBuf">
            <summary>
            Gets the value of the input buf
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTextFilterPtr.Filters">
            <summary>
            Gets the value of the filters
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTextFilterPtr.CountGrep">
            <summary>
            Gets the value of the count grep
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.Build">
            <summary>
            Builds this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.Draw">
            <summary>
            Describes whether this instance draw
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.Draw(System.String)">
            <summary>
            Describes whether this instance draw
            </summary>
            <param name="label">The label</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.Draw(System.String,System.Single)">
            <summary>
            Describes whether this instance draw
            </summary>
            <param name="label">The label</param>
            <param name="width">The width</param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.IsActive">
            <summary>
            Describes whether this instance is active
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextFilterPtr.PassFilter(System.String)">
            <summary>
            Describes whether this instance pass filter
            </summary>
            <param name="text">The text</param>
            <returns>The bool</returns>
        </member>
        <member name="T:ImGuiNET.ImGuiTextRange">
            <summary>
            The im gui text range
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTextRange.b">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTextRange.e">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiTextRangePtr">
            <summary>
            The im gui text range ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTextRangePtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.#ctor(ImGuiNET.ImGuiTextRange*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTextRangePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiTextRangePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.op_Implicit(ImGuiNET.ImGuiTextRange*)~ImGuiNET.ImGuiTextRangePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.op_Implicit(ImGuiNET.ImGuiTextRangePtr)~ImGuiNET.ImGuiTextRange*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiTextRangePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiTextRangePtr.b">
            <summary>
            Gets or sets the value of the b
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiTextRangePtr.e">
            <summary>
            Gets or sets the value of the e
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.empty">
            <summary>
            Describes whether this instance empty
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiTextRangePtr.split(System.Byte,ImGuiNET.ImVector@)">
            <summary>
            
            </summary>
            <param name="separator"></param>
            <param name="out"></param>
        </member>
        <member name="T:ImGuiNET.ImGuiTreeNodeFlags">
            <summary>
            The im gui tree node flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.None">
            <summary>
            The none im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.Selected">
            <summary>
            The selected im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.Framed">
            <summary>
            The framed im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.AllowItemOverlap">
            <summary>
            The allow item overlap im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.NoTreePushOnOpen">
            <summary>
            The no tree push on open im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.NoAutoOpenOnLog">
            <summary>
            The no auto open on log im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.DefaultOpen">
            <summary>
            The default open im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.OpenOnDoubleClick">
            <summary>
            The open on double click im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.OpenOnArrow">
            <summary>
            The open on arrow im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.Leaf">
            <summary>
            The leaf im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.Bullet">
            <summary>
            The bullet im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.FramePadding">
            <summary>
            The frame padding im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.SpanAvailWidth">
            <summary>
            The span avail width im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.SpanFullWidth">
            <summary>
            The span full width im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.NavLeftJumpsBackHere">
            <summary>
            The nav left jumps back here im gui tree node flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiTreeNodeFlags.CollapsingHeader">
            <summary>
            The collapsing header im gui tree node flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiViewport">
            <summary>
            The im gui viewport
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.ID">
            <summary>
            The id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.Flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.Pos">
            <summary>
            The pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.Size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.WorkPos">
            <summary>
            The work pos
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.WorkSize">
            <summary>
            The work size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.DpiScale">
            <summary>
            The dpi scale
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.ParentViewportId">
            <summary>
            The parent viewport id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.DrawData">
            <summary>
            The draw data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.RendererUserData">
            <summary>
            The renderer user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformUserData">
            <summary>
            The platform user data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformHandle">
            <summary>
            The platform handle
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformHandleRaw">
            <summary>
            The platform handle raw
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformWindowCreated">
            <summary>
            The platform window created
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformRequestMove">
            <summary>
            The platform request move
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformRequestResize">
            <summary>
            The platform request resize
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewport.PlatformRequestClose">
            <summary>
            The platform request close
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiViewportPtr">
            <summary>
            The im gui viewport ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.#ctor(ImGuiNET.ImGuiViewport*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiViewportPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiViewportPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.op_Implicit(ImGuiNET.ImGuiViewport*)~ImGuiNET.ImGuiViewportPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.op_Implicit(ImGuiNET.ImGuiViewportPtr)~ImGuiNET.ImGuiViewport*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiViewportPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.ID">
            <summary>
            Gets the value of the id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.Flags">
            <summary>
            Gets the value of the flags
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.Pos">
            <summary>
            Gets the value of the pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.Size">
            <summary>
            Gets the value of the size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.WorkPos">
            <summary>
            Gets the value of the work pos
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.WorkSize">
            <summary>
            Gets the value of the work size
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.DpiScale">
            <summary>
            Gets the value of the dpi scale
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.ParentViewportId">
            <summary>
            Gets the value of the parent viewport id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.DrawData">
            <summary>
            Gets the value of the draw data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.RendererUserData">
            <summary>
            Gets or sets the value of the renderer user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformUserData">
            <summary>
            Gets or sets the value of the platform user data
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformHandle">
            <summary>
            Gets or sets the value of the platform handle
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformHandleRaw">
            <summary>
            Gets or sets the value of the platform handle raw
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformWindowCreated">
            <summary>
            Gets the value of the platform window created
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformRequestMove">
            <summary>
            Gets the value of the platform request move
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformRequestResize">
            <summary>
            Gets the value of the platform request resize
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiViewportPtr.PlatformRequestClose">
            <summary>
            Gets the value of the platform request close
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.GetCenter">
            <summary>
            Gets the center
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="M:ImGuiNET.ImGuiViewportPtr.GetWorkCenter">
            <summary>
            Gets the work center
            </summary>
            <returns>The retval</returns>
        </member>
        <member name="T:ImGuiNET.ImGuiViewportFlags">
            <summary>
            The im gui viewport flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.None">
            <summary>
            The none im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.IsPlatformWindow">
            <summary>
            The is platform window im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.IsPlatformMonitor">
            <summary>
            The is platform monitor im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.OwnedByApp">
            <summary>
            The owned by app im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoDecoration">
            <summary>
            The no decoration im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoTaskBarIcon">
            <summary>
            The no task bar icon im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoFocusOnAppearing">
            <summary>
            The no focus on appearing im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoFocusOnClick">
            <summary>
            The no focus on click im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoInputs">
            <summary>
            The no inputs im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoRendererClear">
            <summary>
            The no renderer clear im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.NoAutoMerge">
            <summary>
            The no auto merge im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.TopMost">
            <summary>
            The top most im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.CanHostOtherWindows">
            <summary>
            The can host other windows im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.IsMinimized">
            <summary>
            The is minimized im gui viewport flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiViewportFlags.IsFocused">
            <summary>
            The is focused im gui viewport flags
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiWindowClass">
            <summary>
            The im gui window
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.ClassId">
            <summary>
            The class id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.ParentViewportId">
            <summary>
            The parent viewport id
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.ViewportFlagsOverrideSet">
            <summary>
            The viewport flags override set
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.ViewportFlagsOverrideClear">
            <summary>
            The viewport flags override clear
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.TabItemFlagsOverrideSet">
            <summary>
            The tab item flags override set
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.DockNodeFlagsOverrideSet">
            <summary>
            The dock node flags override set
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.DockingAlwaysTabBar">
            <summary>
            The docking always tab bar
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowClass.DockingAllowUnclassed">
            <summary>
            The docking allow unclassed
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiWindowClassPtr">
            <summary>
            The im gui window class ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiWindowClassPtr.#ctor(ImGuiNET.ImGuiWindowClass*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiWindowClassPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiWindowClassPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiWindowClassPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiWindowClassPtr.op_Implicit(ImGuiNET.ImGuiWindowClass*)~ImGuiNET.ImGuiWindowClassPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiWindowClassPtr.op_Implicit(ImGuiNET.ImGuiWindowClassPtr)~ImGuiNET.ImGuiWindowClass*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiWindowClassPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiWindowClassPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.ClassId">
            <summary>
            Gets the value of the class id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.ParentViewportId">
            <summary>
            Gets the value of the parent viewport id
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.ViewportFlagsOverrideSet">
            <summary>
            Gets the value of the viewport flags override set
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.ViewportFlagsOverrideClear">
            <summary>
            Gets the value of the viewport flags override clear
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.TabItemFlagsOverrideSet">
            <summary>
            Gets the value of the tab item flags override set
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.DockNodeFlagsOverrideSet">
            <summary>
            Gets the value of the dock node flags override set
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.DockingAlwaysTabBar">
            <summary>
            Gets the value of the docking always tab bar
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiWindowClassPtr.DockingAllowUnclassed">
            <summary>
            Gets the value of the docking allow unclassed
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiWindowClassPtr.Destroy">
            <summary>
            Destroys this instance
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiWindowFlags">
            <summary>
            The im gui window flags enum
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.None">
            <summary>
            The none im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoTitleBar">
            <summary>
            The no title bar im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoResize">
            <summary>
            The no resize im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoMove">
            <summary>
            The no move im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoScrollbar">
            <summary>
            The no scrollbar im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoScrollWithMouse">
            <summary>
            The no scroll with mouse im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoCollapse">
            <summary>
            The no collapse im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.AlwaysAutoResize">
            <summary>
            The always auto resize im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoBackground">
            <summary>
            The no background im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoSavedSettings">
            <summary>
            The no saved settings im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoMouseInputs">
            <summary>
            The no mouse inputs im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.MenuBar">
            <summary>
            The menu bar im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.HorizontalScrollbar">
            <summary>
            The horizontal scrollbar im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoFocusOnAppearing">
            <summary>
            The no focus on appearing im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoBringToFrontOnFocus">
            <summary>
            The no bring to front on focus im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.AlwaysVerticalScrollbar">
            <summary>
            The always vertical scrollbar im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.AlwaysHorizontalScrollbar">
            <summary>
            The always horizontal scrollbar im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.AlwaysUseWindowPadding">
            <summary>
            The always use window padding im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoNavInputs">
            <summary>
            The no nav inputs im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoNavFocus">
            <summary>
            The no nav focus im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.UnsavedDocument">
            <summary>
            The unsaved document im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoDocking">
            <summary>
            The no docking im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoNav">
            <summary>
            The no nav im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoDecoration">
            <summary>
            The no decoration im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NoInputs">
            <summary>
            The no inputs im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.NavFlattened">
            <summary>
            The nav flattened im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.ChildWindow">
            <summary>
            The child window im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.Tooltip">
            <summary>
            The tooltip im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.Popup">
            <summary>
            The popup im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.Modal">
            <summary>
            The modal im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.ChildMenu">
            <summary>
            The child menu im gui window flags
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiWindowFlags.DockNodeHost">
            <summary>
            The dock node host im gui window flags
            </summary>
        </member>
        <member name="T:ImGuiNET.StbTexteditRow">
            <summary>
            The stb textedit row
            </summary>
        </member>
        <member name="F:ImGuiNET.StbTexteditRow.x0">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.StbTexteditRow.x1">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.StbTexteditRow.baseline_y_delta">
            <summary>
            The baseline delta
            </summary>
        </member>
        <member name="F:ImGuiNET.StbTexteditRow.ymin">
            <summary>
            The ymin
            </summary>
        </member>
        <member name="F:ImGuiNET.StbTexteditRow.ymax">
            <summary>
            The ymax
            </summary>
        </member>
        <member name="F:ImGuiNET.StbTexteditRow.num_chars">
            <summary>
            The num chars
            </summary>
        </member>
        <member name="T:ImGuiNET.StbTexteditRowPtr">
            <summary>
            The stb textedit row ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.StbTexteditRowPtr.#ctor(ImGuiNET.StbTexteditRow*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.StbTexteditRowPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.StbTexteditRowPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.StbTexteditRowPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.StbTexteditRowPtr.op_Implicit(ImGuiNET.StbTexteditRow*)~ImGuiNET.StbTexteditRowPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.StbTexteditRowPtr.op_Implicit(ImGuiNET.StbTexteditRowPtr)~ImGuiNET.StbTexteditRow*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.StbTexteditRowPtr.op_Implicit(System.IntPtr)~ImGuiNET.StbTexteditRowPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.x0">
            <summary>
            Gets the value of the x 0
            </summary>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.x1">
            <summary>
            Gets the value of the x 1
            </summary>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.baseline_y_delta">
            <summary>
            Gets the value of the baseline y delta
            </summary>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.ymin">
            <summary>
            Gets the value of the ymin
            </summary>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.ymax">
            <summary>
            Gets the value of the ymax
            </summary>
        </member>
        <member name="P:ImGuiNET.StbTexteditRowPtr.num_chars">
            <summary>
            Gets the value of the num chars
            </summary>
        </member>
        <member name="T:ImGuiNET.StbUndoRecord">
            <summary>
            The stb undo record
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoRecord.where">
            <summary>
            The where
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoRecord.insert_length">
            <summary>
            The insert length
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoRecord.delete_length">
            <summary>
            The delete length
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoRecord.char_storage">
            <summary>
            The char storage
            </summary>
        </member>
        <member name="T:ImGuiNET.StbUndoRecordPtr">
            <summary>
            The stb undo record ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoRecordPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.StbUndoRecordPtr.#ctor(ImGuiNET.StbUndoRecord*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.StbUndoRecordPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.StbUndoRecordPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.StbUndoRecordPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.StbUndoRecordPtr.op_Implicit(ImGuiNET.StbUndoRecord*)~ImGuiNET.StbUndoRecordPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.StbUndoRecordPtr.op_Implicit(ImGuiNET.StbUndoRecordPtr)~ImGuiNET.StbUndoRecord*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.StbUndoRecordPtr.op_Implicit(System.IntPtr)~ImGuiNET.StbUndoRecordPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.StbUndoRecordPtr.where">
            <summary>
            Gets the value of the where
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoRecordPtr.insert_length">
            <summary>
            Gets the value of the insert length
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoRecordPtr.delete_length">
            <summary>
            Gets the value of the delete length
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoRecordPtr.char_storage">
            <summary>
            Gets the value of the char storage
            </summary>
        </member>
        <member name="T:ImGuiNET.StbUndoState">
            <summary>
            The stb undo state
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_0">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_1">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_2">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_3">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_4">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_5">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_6">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_7">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_8">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_9">
            <summary>
            The undo rec
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_10">
            <summary>
            The undo rec 10
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_11">
            <summary>
            The undo rec 11
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_12">
            <summary>
            The undo rec 12
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_13">
            <summary>
            The undo rec 13
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_14">
            <summary>
            The undo rec 14
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_15">
            <summary>
            The undo rec 15
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_16">
            <summary>
            The undo rec 16
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_17">
            <summary>
            The undo rec 17
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_18">
            <summary>
            The undo rec 18
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_19">
            <summary>
            The undo rec 19
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_20">
            <summary>
            The undo rec 20
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_21">
            <summary>
            The undo rec 21
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_22">
            <summary>
            The undo rec 22
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_23">
            <summary>
            The undo rec 23
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_24">
            <summary>
            The undo rec 24
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_25">
            <summary>
            The undo rec 25
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_26">
            <summary>
            The undo rec 26
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_27">
            <summary>
            The undo rec 27
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_28">
            <summary>
            The undo rec 28
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_29">
            <summary>
            The undo rec 29
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_30">
            <summary>
            The undo rec 30
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_31">
            <summary>
            The undo rec 31
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_32">
            <summary>
            The undo rec 32
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_33">
            <summary>
            The undo rec 33
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_34">
            <summary>
            The undo rec 34
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_35">
            <summary>
            The undo rec 35
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_36">
            <summary>
            The undo rec 36
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_37">
            <summary>
            The undo rec 37
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_38">
            <summary>
            The undo rec 38
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_39">
            <summary>
            The undo rec 39
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_40">
            <summary>
            The undo rec 40
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_41">
            <summary>
            The undo rec 41
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_42">
            <summary>
            The undo rec 42
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_43">
            <summary>
            The undo rec 43
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_44">
            <summary>
            The undo rec 44
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_45">
            <summary>
            The undo rec 45
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_46">
            <summary>
            The undo rec 46
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_47">
            <summary>
            The undo rec 47
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_48">
            <summary>
            The undo rec 48
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_49">
            <summary>
            The undo rec 49
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_50">
            <summary>
            The undo rec 50
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_51">
            <summary>
            The undo rec 51
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_52">
            <summary>
            The undo rec 52
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_53">
            <summary>
            The undo rec 53
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_54">
            <summary>
            The undo rec 54
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_55">
            <summary>
            The undo rec 55
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_56">
            <summary>
            The undo rec 56
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_57">
            <summary>
            The undo rec 57
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_58">
            <summary>
            The undo rec 58
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_59">
            <summary>
            The undo rec 59
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_60">
            <summary>
            The undo rec 60
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_61">
            <summary>
            The undo rec 61
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_62">
            <summary>
            The undo rec 62
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_63">
            <summary>
            The undo rec 63
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_64">
            <summary>
            The undo rec 64
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_65">
            <summary>
            The undo rec 65
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_66">
            <summary>
            The undo rec 66
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_67">
            <summary>
            The undo rec 67
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_68">
            <summary>
            The undo rec 68
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_69">
            <summary>
            The undo rec 69
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_70">
            <summary>
            The undo rec 70
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_71">
            <summary>
            The undo rec 71
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_72">
            <summary>
            The undo rec 72
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_73">
            <summary>
            The undo rec 73
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_74">
            <summary>
            The undo rec 74
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_75">
            <summary>
            The undo rec 75
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_76">
            <summary>
            The undo rec 76
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_77">
            <summary>
            The undo rec 77
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_78">
            <summary>
            The undo rec 78
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_79">
            <summary>
            The undo rec 79
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_80">
            <summary>
            The undo rec 80
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_81">
            <summary>
            The undo rec 81
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_82">
            <summary>
            The undo rec 82
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_83">
            <summary>
            The undo rec 83
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_84">
            <summary>
            The undo rec 84
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_85">
            <summary>
            The undo rec 85
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_86">
            <summary>
            The undo rec 86
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_87">
            <summary>
            The undo rec 87
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_88">
            <summary>
            The undo rec 88
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_89">
            <summary>
            The undo rec 89
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_90">
            <summary>
            The undo rec 90
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_91">
            <summary>
            The undo rec 91
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_92">
            <summary>
            The undo rec 92
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_93">
            <summary>
            The undo rec 93
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_94">
            <summary>
            The undo rec 94
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_95">
            <summary>
            The undo rec 95
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_96">
            <summary>
            The undo rec 96
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_97">
            <summary>
            The undo rec 97
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_rec_98">
            <summary>
            The undo rec 98
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_char">
            <summary>
            The undo char
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_point">
            <summary>
            The undo point
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.redo_point">
            <summary>
            The redo point
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.undo_char_point">
            <summary>
            The undo char point
            </summary>
        </member>
        <member name="F:ImGuiNET.StbUndoState.redo_char_point">
            <summary>
            The redo char point
            </summary>
        </member>
        <member name="T:ImGuiNET.StbUndoStatePtr">
            <summary>
            The stb undo state ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.StbUndoStatePtr.#ctor(ImGuiNET.StbUndoState*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.StbUndoStatePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.StbUndoStatePtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.StbUndoStatePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.StbUndoStatePtr.op_Implicit(ImGuiNET.StbUndoState*)~ImGuiNET.StbUndoStatePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.StbUndoStatePtr.op_Implicit(ImGuiNET.StbUndoStatePtr)~ImGuiNET.StbUndoState*">
            <summary>
            /
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.StbUndoStatePtr.op_Implicit(System.IntPtr)~ImGuiNET.StbUndoStatePtr">
            <summary>
            /
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.undo_rec">
            <summary>
            Gets the value of the undo rec
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.undo_char">
            <summary>
            Gets the value of the undo char
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.undo_point">
            <summary>
            Gets the value of the undo point
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.redo_point">
            <summary>
            Gets the value of the redo point
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.undo_char_point">
            <summary>
            Gets the value of the undo char point
            </summary>
        </member>
        <member name="P:ImGuiNET.StbUndoStatePtr.redo_char_point">
            <summary>
            Gets the value of the redo char point
            </summary>
        </member>
        <member name="T:ImGuiNET.STB_TexteditState">
            <summary>
            The stb texteditstate
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.cursor">
            <summary>
            The cursor
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.select_start">
            <summary>
            The select start
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.select_end">
            <summary>
            The select end
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.insert_mode">
            <summary>
            The insert mode
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.row_count_per_page">
            <summary>
            The row count per page
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.cursor_at_end_of_line">
            <summary>
            The cursor at end of line
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.initialized">
            <summary>
            The initialized
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.has_preferred_x">
            <summary>
            The has preferred
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.single_line">
            <summary>
            The single line
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.preferred_x">
            <summary>
            The preferred
            </summary>
        </member>
        <member name="F:ImGuiNET.STB_TexteditState.undostate">
            <summary>
            The undostate
            </summary>
        </member>
        <member name="T:ImGuiNET.STB_TexteditStatePtr">
            <summary>
            The stb texteditstateptr
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.STB_TexteditStatePtr.#ctor(ImGuiNET.STB_TexteditState*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.STB_TexteditStatePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.STB_TexteditStatePtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.STB_TexteditStatePtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.STB_TexteditStatePtr.op_Implicit(ImGuiNET.STB_TexteditState*)~ImGuiNET.STB_TexteditStatePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.STB_TexteditStatePtr.op_Implicit(ImGuiNET.STB_TexteditStatePtr)~ImGuiNET.STB_TexteditState*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.STB_TexteditStatePtr.op_Implicit(System.IntPtr)~ImGuiNET.STB_TexteditStatePtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.cursor">
            <summary>
            Gets the value of the cursor
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.select_start">
            <summary>
            Gets the value of the select start
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.select_end">
            <summary>
            Gets the value of the select end
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.insert_mode">
            <summary>
            Gets the value of the insert mode
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.row_count_per_page">
            <summary>
            Gets the value of the row count per page
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.cursor_at_end_of_line">
            <summary>
            Gets the value of the cursor at end of line
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.initialized">
            <summary>
            Gets the value of the initialized
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.has_preferred_x">
            <summary>
            Gets the value of the has preferred x
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.single_line">
            <summary>
            Gets the value of the single line
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.padding1">
            <summary>
            Gets the value of the padding 1
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.padding2">
            <summary>
            Gets the value of the padding 2
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.padding3">
            <summary>
            Gets the value of the padding 3
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.preferred_x">
            <summary>
            Gets the value of the preferred x
            </summary>
        </member>
        <member name="P:ImGuiNET.STB_TexteditStatePtr.undostate">
            <summary>
            Gets the value of the undostate
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiSizeCallback">
            <summary>
            The im gui size callback
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiInputTextCallback">
            <summary>
            The im gui input text callback
            </summary>
        </member>
        <member name="T:ImGuiNET.ImVector">
            <summary>
            The im vector
            </summary>
        </member>
        <member name="F:ImGuiNET.ImVector.Size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImVector.Capacity">
            <summary>
            The capacity
            </summary>
        </member>
        <member name="F:ImGuiNET.ImVector.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImVector.#ctor(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImVector"/> class
            </summary>
            <param name="size">The size</param>
            <param name="capacity">The capacity</param>
            <param name="data">The data</param>
        </member>
        <member name="M:ImGuiNET.ImVector.Ref``1(System.Int32)">
            <summary>
            Refs the index
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="index">The index</param>
            <returns>The ref</returns>
        </member>
        <member name="M:ImGuiNET.ImVector.Address``1(System.Int32)">
            <summary>
            Addresses the index
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="T:ImGuiNET.ImVector`1">
            <summary>
            The im vector
            </summary>
        </member>
        <member name="F:ImGuiNET.ImVector`1.Size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImVector`1.Capacity">
            <summary>
            The capacity
            </summary>
        </member>
        <member name="F:ImGuiNET.ImVector`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:ImGuiNET.ImVector`1.#ctor(ImGuiNET.ImVector)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImVector"/> class
            </summary>
            <param name="vector">The vector</param>
        </member>
        <member name="M:ImGuiNET.ImVector`1.#ctor(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImVector"/> class
            </summary>
            <param name="size">The size</param>
            <param name="capacity">The capacity</param>
            <param name="data">The data</param>
        </member>
        <member name="P:ImGuiNET.ImVector`1.Item(System.Int32)">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:ImGuiNET.ImPtrVector`1">
            <summary>
            The im ptr vector
            </summary>
        </member>
        <member name="F:ImGuiNET.ImPtrVector`1.Size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:ImGuiNET.ImPtrVector`1.Capacity">
            <summary>
            The capacity
            </summary>
        </member>
        <member name="F:ImGuiNET.ImPtrVector`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:ImGuiNET.ImPtrVector`1._stride">
            <summary>
            The stride
            </summary>
        </member>
        <member name="M:ImGuiNET.ImPtrVector`1.#ctor(ImGuiNET.ImVector,System.Int32)">
            <summary>
            Initializes a new instance of the  class
            </summary>
            <param name="vector">The vector</param>
            <param name="stride">The stride</param>
        </member>
        <member name="M:ImGuiNET.ImPtrVector`1.#ctor(System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the class
            </summary>
            <param name="size">The size</param>
            <param name="capacity">The capacity</param>
            <param name="data">The data</param>
            <param name="stride">The stride</param>
        </member>
        <member name="P:ImGuiNET.ImPtrVector`1.Item(System.Int32)">
            <summary>
            The ret
            </summary>
        </member>
        <member name="T:ImGuiNET.NullTerminatedString">
            <summary>
            The null terminated string
            </summary>
        </member>
        <member name="F:ImGuiNET.NullTerminatedString.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:ImGuiNET.NullTerminatedString.#ctor(System.Byte*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.NullTerminatedString"/> class
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:ImGuiNET.NullTerminatedString.ToString">
            <summary>
            Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.NullTerminatedString.op_Implicit(ImGuiNET.NullTerminatedString)~System.String">
            <summary>
            
            </summary>
            <param name="nts"></param>
            <returns></returns>
        </member>
        <member name="T:ImGuiNET.ImGuiStoragePair">
            <summary>
            The im gui storage pair
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStoragePair.Key">
            <summary>
            The key
            </summary>
        </member>
        <member name="F:ImGuiNET.ImGuiStoragePair.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="T:ImGuiNET.ImGuiStoragePairPtr">
            <summary>
            The im gui storage pair ptr
            </summary>
        </member>
        <member name="P:ImGuiNET.ImGuiStoragePairPtr.NativePtr">
            <summary>
            Gets the value of the native ptr
            </summary>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePairPtr.#ctor(ImGuiNET.ImGuiStoragePair*)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiStoragePairPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePairPtr.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiNET.ImGuiStoragePairPtr"/> class
            </summary>
            <param name="nativePtr">The native ptr</param>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePairPtr.op_Implicit(ImGuiNET.ImGuiStoragePair*)~ImGuiNET.ImGuiStoragePairPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePairPtr.op_Implicit(ImGuiNET.ImGuiStoragePairPtr)~ImGuiNET.ImGuiStoragePair*">
            <summary>
            
            </summary>
            <param name="wrappedPtr"></param>
            <returns></returns>
        </member>
        <member name="M:ImGuiNET.ImGuiStoragePairPtr.op_Implicit(System.IntPtr)~ImGuiNET.ImGuiStoragePairPtr">
            <summary>
            
            </summary>
            <param name="nativePtr"></param>
            <returns></returns>
        </member>
        <member name="T:ImGuiNET.UnionValue">
            <summary>
            The union value
            </summary>
        </member>
        <member name="F:ImGuiNET.UnionValue.ValueI32">
            <summary>
            The value 32
            </summary>
        </member>
        <member name="F:ImGuiNET.UnionValue.ValueF32">
            <summary>
            The value 32
            </summary>
        </member>
        <member name="F:ImGuiNET.UnionValue.ValuePtr">
            <summary>
            The value ptr
            </summary>
        </member>
        <member name="T:ImGuiNET.RangeAccessor`1">
            <summary>
            The range accessor
            </summary>
        </member>
        <member name="F:ImGuiNET.RangeAccessor`1.s_sizeOfT">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:ImGuiNET.RangeAccessor`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:ImGuiNET.RangeAccessor`1.Count">
            <summary>
            The count
            </summary>
        </member>
        <member name="M:ImGuiNET.RangeAccessor`1.#ctor(System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the class
            </summary>
            <param name="data">The data</param>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.RangeAccessor`1.#ctor(System.Void*,System.Int32)">
            <summary>
            Initializes a new instance of the class
            </summary>
            <param name="data">The data</param>
            <param name="count">The count</param>
        </member>
        <member name="P:ImGuiNET.RangeAccessor`1.Item(System.Int32)">
            <summary>
            The index
            </summary>
        </member>
        <member name="T:ImGuiNET.RangePtrAccessor`1">
            <summary>
            The range ptr accessor
            </summary>
        </member>
        <member name="F:ImGuiNET.RangePtrAccessor`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:ImGuiNET.RangePtrAccessor`1.Count">
            <summary>
            The count
            </summary>
        </member>
        <member name="M:ImGuiNET.RangePtrAccessor`1.#ctor(System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the  class
            </summary>
            <param name="data">The data</param>
            <param name="count">The count</param>
        </member>
        <member name="M:ImGuiNET.RangePtrAccessor`1.#ctor(System.Void*,System.Int32)">
            <summary>
            Initializes a new instance of the  class
            </summary>
            <param name="data">The data</param>
            <param name="count">The count</param>
        </member>
        <member name="P:ImGuiNET.RangePtrAccessor`1.Item(System.Int32)">
            <summary>
            The index
            </summary>
        </member>
        <member name="T:ImGuiNET.RangeAccessorExtensions">
            <summary>
            The range accessor extensions class
            </summary>
        </member>
        <member name="M:ImGuiNET.RangeAccessorExtensions.GetStringASCII(ImGuiNET.RangeAccessor{System.Byte})">
            <summary>
            Gets the string ascii using the specified string accessor
            </summary>
            <param name="stringAccessor">The string accessor</param>
            <returns>The string</returns>
        </member>
        <member name="T:ImGuiNET.Util">
            <summary>
            The util class
            </summary>
        </member>
        <member name="F:ImGuiNET.Util.StackAllocationSizeLimit">
            <summary>
            The stack allocation size limit
            </summary>
        </member>
        <member name="M:ImGuiNET.Util.StringFromPtr(System.Byte*)">
            <summary>
            Strings the from ptr using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
            <returns>The string</returns>
        </member>
        <member name="M:ImGuiNET.Util.AreStringsEqual(System.Byte*,System.Int32,System.Byte*)">
            <summary>
            Describes whether are strings equal
            </summary>
            <param name="a">The </param>
            <param name="aLength">The length</param>
            <param name="b">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:ImGuiNET.Util.Allocate(System.Int32)">
            <summary>
            Allocates the byte count
            </summary>
            <param name="byteCount">The byte count</param>
            <returns>The byte</returns>
        </member>
        <member name="M:ImGuiNET.Util.Free(System.Byte*)">
            <summary>
            Frees the ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="M:ImGuiNET.Util.CalcSizeInUtf8(System.String,System.Int32,System.Int32)">
            <summary>
            Calcs the size in utf 8 using the specified s
            </summary>
            <param name="s">The </param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.Util.GetUtf8(System.String,System.Byte*,System.Int32)">
            <summary>
            Gets the utf 8 using the specified s
            </summary>
            <param name="s">The </param>
            <param name="utf8Bytes">The utf bytes</param>
            <param name="utf8ByteCount">The utf byte count</param>
            <returns>The int</returns>
        </member>
        <member name="M:ImGuiNET.Util.GetUtf8(System.String,System.Int32,System.Int32,System.Byte*,System.Int32)">
            <summary>
            Gets the utf 8 using the specified s
            </summary>
            <param name="s">The </param>
            <param name="start">The start</param>
            <param name="length">The length</param>
            <param name="utf8Bytes">The utf bytes</param>
            <param name="utf8ByteCount">The utf byte count</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns>The int</returns>
        </member>
        <member name="T:ImGuiGeneral.ImGuiGL">
            <summary>
            The im gui gl class
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGL.CreateWindowAndGLContext(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the window and gl context using the specified title
            </summary>
            <param name="title">The title</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="fullscreen">The fullscreen</param>
            <param name="highDpi">The high dpi</param>
            <returns>The int ptr int ptr</returns>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGL.CreateGLContext(System.IntPtr)">
            <summary>
            Creates the gl context using the specified window
            </summary>
            <param name="window">The window</param>
            <exception cref="T:System.Exception">CouldNotCreateContext</exception>
            <returns>The gl context</returns>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGL.LoadTexture(System.IntPtr,System.Int32,System.Int32,OpenGL.GL.PixelFormat,OpenGL.GL.PixelInternalFormat)">
            <summary>
            Loads the texture using the specified pixel data
            </summary>
            <param name="pixelData">The pixel data</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="format">The format</param>
            <param name="internalFormat">The internal format</param>
            <returns>The texture id</returns>
        </member>
        <member name="T:ImGuiGeneral.ImGuiGLRenderer">
            <summary>
            The im gui gl renderer class
            </summary>
            <seealso cref="T:System.IDisposable"/>
            <summary>
            The im gui gl renderer class
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._glContext">
            <summary>
            The gl context
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._shader">
            <summary>
            The shader
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._vboHandle">
            <summary>
            The font texture id
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._elementsHandle">
            <summary>
            The font texture id
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._vertexArrayObject">
            <summary>
            The font texture id
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._fontTextureId">
            <summary>
            The font texture id
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.#ctor(System.IntPtr,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ImGuiGeneral.ImGuiGLRenderer"/> class
            </summary>
            <param name="window">The window</param>
            <param name="glContext">The gl context</param>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.RebuildFontAtlas">
            <summary>
            Rebuilds the font atlas
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.Render">
            <summary>
            Renders this instance
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.ClearColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Clears the color using the specified r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.SetupRenderState(ImGuiNET.ImDrawDataPtr,System.Int32,System.Int32)">
            <summary>
            Setup the render state using the specified draw data
            </summary>
            <param name="drawData">The draw data</param>
            <param name="fbWidth">The fb width</param>
            <param name="fbHeight">The fb height</param>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.RenderDrawData">
            <summary>
            Renders the draw data
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.Dispose">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer.VertexShader">
            <summary>
            The vertex shader
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer.FragmentShader">
            <summary>
            The fragment shader
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:ImGuiGeneral.ImGuiGLRenderer._mousePressed">
            <summary>
            The mouse pressed
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.InitKeyMap">
            <summary>
            Inits the key map
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.NewFrame">
            <summary>
            News the frame
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.ProcessEvent(SDL2.SDL.SDL_Event)">
            <summary>
            Processes the event using the specified evt
            </summary>
            <param name="evt">The evt</param>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.UpdateMousePosAndButtons">
            <summary>
            Updates the mouse pos and buttons
            </summary>
        </member>
        <member name="M:ImGuiGeneral.ImGuiGLRenderer.PrepareGLContext">
            <summary>
            Prepares the gl context
            </summary>
        </member>
        <member name="T:OpenGL.GLShader">
            <summary>
            The gl shader class
            </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="P:OpenGL.GLShader.ShaderID">
            <summary>
            Gets or sets the value of the shader id
            </summary>
        </member>
        <member name="P:OpenGL.GLShader.ShaderType">
            <summary>
            Gets or sets the value of the shader type
            </summary>
        </member>
        <member name="P:OpenGL.GLShader.ShaderLog">
            <summary>
            Gets the value of the shader log
            </summary>
        </member>
        <member name="M:OpenGL.GLShader.Finalize">
            <summary>
            /
            </summary>
        </member>
        <member name="M:OpenGL.GLShader.#ctor(System.String,OpenGL.GL.ShaderType)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGL.GLShader"/> class
            </summary>
            <param name="source">The source</param>
            <param name="type">The type</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:OpenGL.GLShader.Dispose">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="M:OpenGL.GLShader.Dispose(System.Boolean)">
            <summary>
            Disposes the disposing
            </summary>
            <param name="disposing">The disposing</param>
        </member>
        <member name="T:OpenGL.GLShaderProgram">
            <summary>
            The gl shader program class
            </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="F:OpenGL.GLShaderProgram.ProgramID">
            <summary>
            Specifies the OpenGL shader program ID.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgram.VertexShader">
            <summary>
            Specifies the vertex shader used in this program.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgram.FragmentShader">
            <summary>
            Specifies the fragment shader used in this program.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgram.DisposeChildren">
            <summary>
            Specifies whether this program will dispose of the child
            vertex/fragment programs when the IDisposable method is called.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgram.shaderParams">
            <summary>
            The shader params
            </summary>
        </member>
        <member name="P:OpenGL.GLShaderProgram.Item(System.String)">
            <summary>
            Queries the shader parameter hashtable to find a matching attribute/uniform.
            </summary>
            <param name="name">Specifies the case-sensitive name of the shader attribute/uniform.</param>
            <returns>The requested attribute/uniform, or null on a failure.</returns>
        </member>
        <member name="P:OpenGL.GLShaderProgram.ProgramLog">
            <summary>
            Gets the value of the program log
            </summary>
        </member>
        <member name="M:OpenGL.GLShaderProgram.#ctor(OpenGL.GLShader,OpenGL.GLShader)">
            <summary>
            Links a vertex and fragment shader together to create a shader program.
            </summary>
            <param name="vertexShader">Specifies the vertex shader.</param>
            <param name="fragmentShader">Specifies the fragment shader.</param>
        </member>
        <member name="M:OpenGL.GLShaderProgram.#ctor(System.String,System.String)">
            <summary>
            Creates two shaders and then links them together to create a shader program.
            </summary>
            <param name="vertexShaderSource">Specifies the source code of the vertex shader.</param>
            <param name="fragmentShaderSource">Specifies the source code of the fragment shader.</param>
        </member>
        <member name="M:OpenGL.GLShaderProgram.GetParams">
            <summary>
            Parses all of the parameters (attributes/uniforms) from the two attached shaders
            and then loads their location by passing this shader program into the parameter object.
            </summary>
        </member>
        <member name="M:OpenGL.GLShaderProgram.TypeFromAttributeType(OpenGL.GL.ActiveAttribType)">
            <summary>
            Types the from attribute type using the specified type
            </summary>
            <param name="type">The type</param>
            <exception cref="T:System.Exception"></exception>
            <returns>The type</returns>
        </member>
        <member name="M:OpenGL.GLShaderProgram.TypeFromUniformType(OpenGL.GL.ActiveUniformType)">
            <summary>
            Types the from uniform type using the specified type
            </summary>
            <param name="type">The type</param>
            <exception cref="T:System.Exception"></exception>
            <returns>The type</returns>
        </member>
        <member name="M:OpenGL.GLShaderProgram.Use">
            <summary>
            Uses this instance
            </summary>
        </member>
        <member name="M:OpenGL.GLShaderProgram.GetUniformLocation(System.String)">
            <summary>
            Gets the uniform location using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The int</returns>
        </member>
        <member name="M:OpenGL.GLShaderProgram.GetAttributeLocation(System.String)">
            <summary>
            Gets the attribute location using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The int</returns>
        </member>
        <member name="M:OpenGL.GLShaderProgram.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenGL.GLShaderProgram.Dispose">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="M:OpenGL.GLShaderProgram.Dispose(System.Boolean)">
            <summary>
            Disposes the disposing
            </summary>
            <param name="disposing">The disposing</param>
        </member>
        <member name="T:OpenGL.ParamType">
            <summary>
            The param type enum
            </summary>
        </member>
        <member name="F:OpenGL.ParamType.Uniform">
            <summary>
            The uniform param type
            </summary>
        </member>
        <member name="F:OpenGL.ParamType.Attribute">
            <summary>
            The attribute param type
            </summary>
        </member>
        <member name="T:OpenGL.GLShaderProgramParam">
            <summary>
            The gl shader program param class
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgramParam.Type">
            <summary>
            Specifies the C# equivalent of the GLSL data type.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgramParam.Location">
            <summary>
            Specifies the location of the parameter in the OpenGL program.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgramParam.Program">
            <summary>
            Specifies the OpenGL program ID.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgramParam.ParamType">
            <summary>
            Specifies the parameter type (either attribute or uniform).
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgramParam.Name">
            <summary>
            Specifies the case-sensitive name of the parameter.
            </summary>
        </member>
        <member name="F:OpenGL.GLShaderProgramParam.ProgramId">
            <summary>
            The program id
            </summary>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.#ctor(System.Type,OpenGL.ParamType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGL.GLShaderProgramParam"/> class
            </summary>
            <param name="type">The type</param>
            <param name="paramType">The param type</param>
            <param name="name">The name</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.#ctor(System.Type,OpenGL.ParamType,System.String,System.UInt32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGL.GLShaderProgramParam"/> class
            </summary>
            <param name="type">The type</param>
            <param name="paramType">The param type</param>
            <param name="name">The name</param>
            <param name="program">The program</param>
            <param name="location">The location</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.GetLocation(OpenGL.GLShaderProgram)">
            <summary>
            Gets the location of the parameter in a compiled OpenGL program.
            </summary>
            <param name="Program">Specifies the shader program that contains this parameter.</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Boolean)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Int32)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Single)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Numerics.Vector2)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Numerics.Vector3)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Numerics.Vector4)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Numerics.Matrix4x4)">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.SetValue(System.Single[])">
            <summary>
            Sets the value using the specified param
            </summary>
            <param name="param">The param</param>
            <exception cref="T:System.ArgumentException">param was an unexpected length. </exception>
        </member>
        <member name="M:OpenGL.GLShaderProgramParam.EnsureType``1">
            <summary>
            Ensures the type
            </summary>
            <typeparam name="T">The </typeparam>
        </member>
        <member name="T:OpenGL.GL">
            <summary>
            The gl class
            </summary>
            <summary>
            The gl class
            </summary>
            <summary>
            the methods here are just convenience wrappers for calling the raw gl* method
            </summary>
        </member>
        <member name="M:OpenGL.GL._``1">
            <summary>
            S
            </summary>
            <typeparam name="T">The </typeparam>
            <exception cref="T:System.Exception">nogo: {method} from {typeof(T).Name}</exception>
            <returns>The</returns>
        </member>
        <member name="M:OpenGL.GL._Del``1">
            <summary>
            Alternate delegate fetcher for when our delegate Type ends in "Del". These happen when the method needs a wrapper
            in GL.Utils.
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetString">
            <summary>
            The get string
            </summary>
        </member>
        <member name="F:OpenGL.GL._GetString">
            <summary>
            The get string
            </summary>
        </member>
        <member name="M:OpenGL.GL.glGetString(OpenGL.GL.StringName)">
            <summary>
            Gls the get string using the specified pname
            </summary>
            <param name="pname">The pname</param>
            <returns>The string</returns>
        </member>
        <member name="T:OpenGL.GL.GenBuffers">
            <summary>
            The gen buffers
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGenBuffers">
            <summary>
            The gen buffers
            </summary>
        </member>
        <member name="T:OpenGL.GL.DeleteBuffers">
            <summary>
            The delete buffers
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDeleteBuffers">
            <summary>
            The delete buffers
            </summary>
        </member>
        <member name="T:OpenGL.GL.Viewport">
            <summary>
            The viewport
            </summary>
        </member>
        <member name="F:OpenGL.GL.glViewport">
            <summary>
            The viewport
            </summary>
        </member>
        <member name="T:OpenGL.GL.ClearColor">
            <summary>
            The clear color
            </summary>
        </member>
        <member name="F:OpenGL.GL.glClearColor">
            <summary>
            The clear color
            </summary>
        </member>
        <member name="T:OpenGL.GL.Clear">
            <summary>
            The clear
            </summary>
        </member>
        <member name="F:OpenGL.GL.glClear">
            <summary>
            The clear
            </summary>
        </member>
        <member name="T:OpenGL.GL.Enable">
            <summary>
            The enable
            </summary>
        </member>
        <member name="F:OpenGL.GL.glEnable">
            <summary>
            The enable
            </summary>
        </member>
        <member name="T:OpenGL.GL.Disable">
            <summary>
            The disable
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDisable">
            <summary>
            The disable
            </summary>
        </member>
        <member name="T:OpenGL.GL.BlendEquation">
            <summary>
            The blend equation
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBlendEquation">
            <summary>
            The blend equation
            </summary>
        </member>
        <member name="T:OpenGL.GL.BlendFunc">
            <summary>
            The blend func
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBlendFunc">
            <summary>
            The blend func
            </summary>
        </member>
        <member name="T:OpenGL.GL.UseProgram">
            <summary>
            The use program
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUseProgram">
            <summary>
            The use program
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetShaderiv">
            <summary>
            The get shaderiv
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetShaderiv">
            <summary>
            The get shaderiv
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetShaderInfoLogDel">
            <summary>
            The get shader info log del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetShaderInfoLog">
            <summary>
            The get shader info log del
            </summary>
        </member>
        <member name="T:OpenGL.GL.CreateShader">
            <summary>
            The create shader
            </summary>
        </member>
        <member name="F:OpenGL.GL.glCreateShader">
            <summary>
            The create shader
            </summary>
        </member>
        <member name="T:OpenGL.GL.ShaderSourceDel">
            <summary>
            The shader source del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glShaderSource">
            <summary>
            The shader source del
            </summary>
        </member>
        <member name="T:OpenGL.GL.CompileShader">
            <summary>
            The compile shader
            </summary>
        </member>
        <member name="F:OpenGL.GL.glCompileShader">
            <summary>
            The compile shader
            </summary>
        </member>
        <member name="T:OpenGL.GL.DeleteShader">
            <summary>
            The delete shader
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDeleteShader">
            <summary>
            The delete shader
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetProgramiv">
            <summary>
            The get programiv
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetProgramiv">
            <summary>
            The get programiv
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetProgramInfoLogDel">
            <summary>
            The get program info log del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetProgramInfoLog">
            <summary>
            The get program info log del
            </summary>
        </member>
        <member name="T:OpenGL.GL.CreateProgram">
            <summary>
            The create program
            </summary>
        </member>
        <member name="F:OpenGL.GL.glCreateProgram">
            <summary>
            The create program
            </summary>
        </member>
        <member name="T:OpenGL.GL.AttachShader">
            <summary>
            The attach shader
            </summary>
        </member>
        <member name="F:OpenGL.GL.glAttachShader">
            <summary>
            The attach shader
            </summary>
        </member>
        <member name="T:OpenGL.GL.LinkProgram">
            <summary>
            The link program
            </summary>
        </member>
        <member name="F:OpenGL.GL.glLinkProgram">
            <summary>
            The link program
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetUniformLocation">
            <summary>
            The get uniform location
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetUniformLocation">
            <summary>
            The get uniform location
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetAttribLocation">
            <summary>
            The get attrib location
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetAttribLocation">
            <summary>
            The get attrib location
            </summary>
        </member>
        <member name="T:OpenGL.GL.DetachShader">
            <summary>
            The detach shader
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDetachShader">
            <summary>
            The detach shader
            </summary>
        </member>
        <member name="T:OpenGL.GL.DeleteProgram">
            <summary>
            The delete program
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDeleteProgram">
            <summary>
            The delete program
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetActiveAttrib">
            <summary>
            The get active attrib
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetActiveAttrib">
            <summary>
            The get active attrib
            </summary>
        </member>
        <member name="T:OpenGL.GL.GetActiveUniform">
            <summary>
            The get active uniform
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGetActiveUniform">
            <summary>
            The get active uniform
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform1f">
            <summary>
            The uniform 1f
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform1f">
            <summary>
            The uniform 1f
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform2f">
            <summary>
            The uniform 2f
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform2f">
            <summary>
            The uniform 2f
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform3f">
            <summary>
            The uniform 3f
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform3f">
            <summary>
            The uniform 3f
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform4f">
            <summary>
            The uniform 4f
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform4f">
            <summary>
            The uniform 4f
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform1i">
            <summary>
            The uniform 1i
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform1i">
            <summary>
            The uniform 1i
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform3fv">
            <summary>
            The uniform 3fv
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform3fv">
            <summary>
            The uniform 3fv
            </summary>
        </member>
        <member name="T:OpenGL.GL.Uniform4fv">
            <summary>
            The uniform 4fv
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniform4fv">
            <summary>
            The uniform 4fv
            </summary>
        </member>
        <member name="T:OpenGL.GL.UniformMatrix3fvDel">
            <summary>
            The uniform matrix 3fv del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniformMatrix3fv">
            <summary>
            The uniform matrix 3fv del
            </summary>
        </member>
        <member name="T:OpenGL.GL.UniformMatrix4fvDel">
            <summary>
            The uniform matrix 4fv del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glUniformMatrix4fv">
            <summary>
            The uniform matrix 4fv del
            </summary>
        </member>
        <member name="T:OpenGL.GL.BindSampler">
            <summary>
            The bind sampler
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBindSampler">
            <summary>
            The bind sampler
            </summary>
        </member>
        <member name="T:OpenGL.GL.BindVertexArray">
            <summary>
            The bind vertex array
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBindVertexArray">
            <summary>
            The bind vertex array
            </summary>
        </member>
        <member name="T:OpenGL.GL.BindBuffer">
            <summary>
            The bind buffer
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBindBuffer">
            <summary>
            The bind buffer
            </summary>
        </member>
        <member name="T:OpenGL.GL.EnableVertexAttribArrayDel">
            <summary>
            The enable vertex attrib array del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glEnableVertexAttribArray">
            <summary>
            The enable vertex attrib array del
            </summary>
        </member>
        <member name="T:OpenGL.GL.DisableVertexAttribArray">
            <summary>
            The disable vertex attrib array
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDisableVertexAttribArray">
            <summary>
            The disable vertex attrib array
            </summary>
        </member>
        <member name="T:OpenGL.GL.VertexAttribPointerDel">
            <summary>
            The vertex attrib pointer del
            </summary>
        </member>
        <member name="F:OpenGL.GL.glVertexAttribPointer">
            <summary>
            The vertex attrib pointer del
            </summary>
        </member>
        <member name="T:OpenGL.GL.BindTexture">
            <summary>
            The bind texture
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBindTexture">
            <summary>
            The bind texture
            </summary>
        </member>
        <member name="T:OpenGL.GL.BufferData">
            <summary>
            The buffer data
            </summary>
        </member>
        <member name="F:OpenGL.GL.glBufferData">
            <summary>
            The buffer data
            </summary>
        </member>
        <member name="T:OpenGL.GL.Scissor">
            <summary>
            The scissor
            </summary>
        </member>
        <member name="F:OpenGL.GL.glScissor">
            <summary>
            The scissor
            </summary>
        </member>
        <member name="T:OpenGL.GL.DrawElementsBaseVertex">
            <summary>
            The draw elements base vertex
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDrawElementsBaseVertex">
            <summary>
            The draw elements base vertex
            </summary>
        </member>
        <member name="T:OpenGL.GL.DeleteVertexArrays">
            <summary>
            The delete vertex arrays
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDeleteVertexArrays">
            <summary>
            The delete vertex arrays
            </summary>
        </member>
        <member name="T:OpenGL.GL.GenVertexArrays">
            <summary>
            The gen vertex arrays
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGenVertexArrays">
            <summary>
            The gen vertex arrays
            </summary>
        </member>
        <member name="T:OpenGL.GL.GenTextures">
            <summary>
            The gen textures
            </summary>
        </member>
        <member name="F:OpenGL.GL.glGenTextures">
            <summary>
            The gen textures
            </summary>
        </member>
        <member name="T:OpenGL.GL.PixelStorei">
            <summary>
            The pixel storei
            </summary>
        </member>
        <member name="F:OpenGL.GL.glPixelStorei">
            <summary>
            The pixel storei
            </summary>
        </member>
        <member name="T:OpenGL.GL.TexImage2D">
            <summary>
            The tex image
            </summary>
        </member>
        <member name="F:OpenGL.GL.glTexImage2D">
            <summary>
            The tex image
            </summary>
        </member>
        <member name="T:OpenGL.GL.TexParameteri">
            <summary>
            The tex parameteri
            </summary>
        </member>
        <member name="F:OpenGL.GL.glTexParameteri">
            <summary>
            The tex parameteri
            </summary>
        </member>
        <member name="T:OpenGL.GL.DeleteTextures">
            <summary>
            The delete textures
            </summary>
        </member>
        <member name="F:OpenGL.GL.glDeleteTextures">
            <summary>
            The delete textures
            </summary>
        </member>
        <member name="T:OpenGL.GL.ClearBufferMask">
            <summary>
            The clear buffer mask enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.ClearBufferMask.DepthBufferBit">
            <summary>
            The depth buffer bit clear buffer mask
            </summary>
        </member>
        <member name="F:OpenGL.GL.ClearBufferMask.AccumBufferBit">
            <summary>
            The accum buffer bit clear buffer mask
            </summary>
        </member>
        <member name="F:OpenGL.GL.ClearBufferMask.StencilBufferBit">
            <summary>
            The stencil buffer bit clear buffer mask
            </summary>
        </member>
        <member name="F:OpenGL.GL.ClearBufferMask.ColorBufferBit">
            <summary>
            The color buffer bit clear buffer mask
            </summary>
        </member>
        <member name="T:OpenGL.GL.EnableCap">
            <summary>
            The enable cap enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.LineSmooth">
            <summary>
            The line smooth enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PolygonSmooth">
            <summary>
            The polygon smooth enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.CullFace">
            <summary>
            The cull face enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.DepthTest">
            <summary>
            The depth test enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.StencilTest">
            <summary>
            The stencil test enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Dither">
            <summary>
            The dither enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Blend">
            <summary>
            The blend enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.IndexLogicOp">
            <summary>
            The index logic op enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ColorLogicOp">
            <summary>
            The color logic op enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ScissorTest">
            <summary>
            The scissor test enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.AutoNormal">
            <summary>
            The auto normal enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1Color4">
            <summary>
            The map color enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1Index">
            <summary>
            The map index enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1Normal">
            <summary>
            The map normal enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1TextureCoord1">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1TextureCoord2">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1TextureCoord3">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1TextureCoord4">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1Vertex3">
            <summary>
            The map vertex enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map1Vertex4">
            <summary>
            The map vertex enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2Color4">
            <summary>
            The map color enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2Index">
            <summary>
            The map index enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2Normal">
            <summary>
            The map normal enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2TextureCoord1">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2TextureCoord2">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2TextureCoord3">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2TextureCoord4">
            <summary>
            The map texture coord enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2Vertex3">
            <summary>
            The map vertex enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Map2Vertex4">
            <summary>
            The map vertex enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Texture1D">
            <summary>
            The texture enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Texture2D">
            <summary>
            The texture enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PolygonOffsetPoint">
            <summary>
            The polygon offset point enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PolygonOffsetLine">
            <summary>
            The polygon offset line enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ClipPlane0">
            <summary>
            The clip plane enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ClipPlane1">
            <summary>
            The clip plane enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ClipPlane2">
            <summary>
            The clip plane enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ClipPlane3">
            <summary>
            The clip plane enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ClipPlane4">
            <summary>
            The clip plane enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ClipPlane5">
            <summary>
            The clip plane enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Convolution1D">
            <summary>
            The convolution enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Convolution1DExt">
            <summary>
            The convolution ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Convolution2D">
            <summary>
            The convolution enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Convolution2DExt">
            <summary>
            The convolution ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Separable2D">
            <summary>
            The separable enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Separable2DExt">
            <summary>
            The separable ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Histogram">
            <summary>
            The histogram enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.HistogramExt">
            <summary>
            The histogram ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.MinmaxExt">
            <summary>
            The minmax ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PolygonOffsetFill">
            <summary>
            The polygon offset fill enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.RescaleNormalExt">
            <summary>
            The rescale normal ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Texture3DExt">
            <summary>
            The texture ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.VertexArray">
            <summary>
            The vertex array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.NormalArray">
            <summary>
            The normal array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ColorArray">
            <summary>
            The color array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.IndexArray">
            <summary>
            The index array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.TextureCoordArray">
            <summary>
            The texture coord array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.EdgeFlagArray">
            <summary>
            The edge flag array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.InterlaceSgix">
            <summary>
            The interlace sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Multisample">
            <summary>
            The multisample enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleAlphaToCoverage">
            <summary>
            The sample alpha to coverage enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleAlphaToMaskSgis">
            <summary>
            The sample alpha to mask sgis enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleAlphaToOne">
            <summary>
            The sample alpha to one enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleAlphaToOneSgis">
            <summary>
            The sample alpha to one sgis enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleCoverage">
            <summary>
            The sample coverage enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleMaskSgis">
            <summary>
            The sample mask sgis enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.TextureColorTableSgi">
            <summary>
            The texture color table sgi enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ColorTable">
            <summary>
            The color table enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ColorTableSgi">
            <summary>
            The color table sgi enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PostConvolutionColorTable">
            <summary>
            The post convolution color table enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PostConvolutionColorTableSgi">
            <summary>
            The post convolution color table sgi enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PostColorMatrixColorTable">
            <summary>
            The post color matrix color table enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PostColorMatrixColorTableSgi">
            <summary>
            The post color matrix color table sgi enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.Texture4DSgis">
            <summary>
            The texture sgis enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PixelTexGenSgix">
            <summary>
            The pixel tex gen sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SpriteSgix">
            <summary>
            The sprite sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ReferencePlaneSgix">
            <summary>
            The reference plane sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.IrInstrument1Sgix">
            <summary>
            The ir instrument sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.CalligraphicFragmentSgix">
            <summary>
            The calligraphic fragment sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FramezoomSgix">
            <summary>
            The framezoom sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FogOffsetSgix">
            <summary>
            The fog offset sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SharedTexturePaletteExt">
            <summary>
            The shared texture palette ext enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.AsyncHistogramSgix">
            <summary>
            The async histogram sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PixelTextureSgis">
            <summary>
            The pixel texture sgis enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.AsyncTexImageSgix">
            <summary>
            The async tex image sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.AsyncDrawPixelsSgix">
            <summary>
            The async draw pixels sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.AsyncReadPixelsSgix">
            <summary>
            The async read pixels sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLightingSgix">
            <summary>
            The fragment lighting sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentColorMaterialSgix">
            <summary>
            The fragment color material sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight0Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight1Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight2Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight3Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight4Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight5Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight6Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FragmentLight7Sgix">
            <summary>
            The fragment light sgix enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ColorSum">
            <summary>
            The color sum enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SecondaryColorArray">
            <summary>
            The secondary color array enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.TextureCubeMap">
            <summary>
            The texture cube map enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.ProgramPointSize">
            <summary>
            The program point size enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.VertexProgramPointSize">
            <summary>
            The vertex program point size enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.DepthClamp">
            <summary>
            The depth clamp enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.TextureCubeMapSeamless">
            <summary>
            The texture cube map seamless enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PointSprite">
            <summary>
            The point sprite enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.RasterizerDiscard">
            <summary>
            The rasterizer discard enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.FramebufferSrgb">
            <summary>
            The framebuffer srgb enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.SampleMask">
            <summary>
            The sample mask enable cap
            </summary>
        </member>
        <member name="F:OpenGL.GL.EnableCap.PrimitiveRestart">
            <summary>
            The primitive restart enable cap
            </summary>
        </member>
        <member name="T:OpenGL.GL.BlendEquationMode">
            <summary>
            The blend equation mode enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendEquationMode.FuncAdd">
            <summary>
            The func add blend equation mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendEquationMode.Min">
            <summary>
            The min blend equation mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendEquationMode.Max">
            <summary>
            The max blend equation mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendEquationMode.FuncSubtract">
            <summary>
            The func subtract blend equation mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendEquationMode.FuncReverseSubtract">
            <summary>
            The func reverse subtract blend equation mode
            </summary>
        </member>
        <member name="T:OpenGL.GL.BlendingFactorDest">
            <summary>
            The blending factor dest enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.Zero">
            <summary>
            The zero blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.SrcColor">
            <summary>
            The src color blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusSrcColor">
            <summary>
            The one minus src color blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.SrcAlpha">
            <summary>
            The src alpha blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusSrcAlpha">
            <summary>
            The one minus src alpha blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.DstAlpha">
            <summary>
            The dst alpha blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusDstAlpha">
            <summary>
            The one minus dst alpha blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.DstColor">
            <summary>
            The dst color blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusDstColor">
            <summary>
            The one minus dst color blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.ConstantColor">
            <summary>
            The constant color blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.ConstantColorExt">
            <summary>
            The constant color ext blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusConstantColor">
            <summary>
            The one minus constant color blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusConstantColorExt">
            <summary>
            The one minus constant color ext blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.ConstantAlpha">
            <summary>
            The constant alpha blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.ConstantAlphaExt">
            <summary>
            The constant alpha ext blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusConstantAlpha">
            <summary>
            The one minus constant alpha blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.OneMinusConstantAlphaExt">
            <summary>
            The one minus constant alpha ext blending factor dest
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorDest.One">
            <summary>
            The one blending factor dest
            </summary>
        </member>
        <member name="T:OpenGL.GL.BlendingFactorSrc">
            <summary>
            The blending factor src enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.Zero">
            <summary>
            The zero blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.SrcAlpha">
            <summary>
            The src alpha blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusSrcAlpha">
            <summary>
            The one minus src alpha blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.DstAlpha">
            <summary>
            The dst alpha blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusDstAlpha">
            <summary>
            The one minus dst alpha blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.DstColor">
            <summary>
            The dst color blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusDstColor">
            <summary>
            The one minus dst color blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.SrcAlphaSaturate">
            <summary>
            The src alpha saturate blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.ConstantColor">
            <summary>
            The constant color blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.ConstantColorExt">
            <summary>
            The constant color ext blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusConstantColor">
            <summary>
            The one minus constant color blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusConstantColorExt">
            <summary>
            The one minus constant color ext blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.ConstantAlpha">
            <summary>
            The constant alpha blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.ConstantAlphaExt">
            <summary>
            The constant alpha ext blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusConstantAlpha">
            <summary>
            The one minus constant alpha blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.OneMinusConstantAlphaExt">
            <summary>
            The one minus constant alpha ext blending factor src
            </summary>
        </member>
        <member name="F:OpenGL.GL.BlendingFactorSrc.One">
            <summary>
            The one blending factor src
            </summary>
        </member>
        <member name="T:OpenGL.GL.StringName">
            <summary>
            The string name enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.StringName.Vendor">
            <summary>
            The vendor string name
            </summary>
        </member>
        <member name="F:OpenGL.GL.StringName.Renderer">
            <summary>
            The renderer string name
            </summary>
        </member>
        <member name="F:OpenGL.GL.StringName.Version">
            <summary>
            The version string name
            </summary>
        </member>
        <member name="F:OpenGL.GL.StringName.Extensions">
            <summary>
            The extensions string name
            </summary>
        </member>
        <member name="F:OpenGL.GL.StringName.ShadingLanguageVersion">
            <summary>
            The shading language version string name
            </summary>
        </member>
        <member name="T:OpenGL.GL.ShaderParameter">
            <summary>
            The shader parameter enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderParameter.ShaderType">
            <summary>
            The shader type shader parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderParameter.DeleteStatus">
            <summary>
            The delete status shader parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderParameter.CompileStatus">
            <summary>
            The compile status shader parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderParameter.InfoLogLength">
            <summary>
            The info log length shader parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderParameter.ShaderSourceLength">
            <summary>
            The shader source length shader parameter
            </summary>
        </member>
        <member name="T:OpenGL.GL.ShaderType">
            <summary>
            The shader type enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderType.FragmentShader">
            <summary>
            The fragment shader shader type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderType.VertexShader">
            <summary>
            The vertex shader shader type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderType.GeometryShader">
            <summary>
            The geometry shader shader type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderType.TessControlShader">
            <summary>
            The tess control shader shader type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderType.TessEvaluationShader">
            <summary>
            The tess evaluation shader shader type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ShaderType.ComputeShader">
            <summary>
            The compute shader shader type
            </summary>
        </member>
        <member name="T:OpenGL.GL.ProgramParameter">
            <summary>
            The program parameter enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ActiveUniformBlockMaxNameLength">
            <summary>
            The active uniform block max name length program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ActiveUniformBlocks">
            <summary>
            The active uniform blocks program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.DeleteStatus">
            <summary>
            The delete status program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.LinkStatus">
            <summary>
            The link status program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ValidateStatus">
            <summary>
            The validate status program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.InfoLogLength">
            <summary>
            The info log length program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.AttachedShaders">
            <summary>
            The attached shaders program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ActiveUniforms">
            <summary>
            The active uniforms program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ActiveUniformMaxLength">
            <summary>
            The active uniform max length program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ActiveAttributes">
            <summary>
            The active attributes program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.ActiveAttributeMaxLength">
            <summary>
            The active attribute max length program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.TransformFeedbackVaryingMaxLength">
            <summary>
            The transform feedback varying max length program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.TransformFeedbackBufferMode">
            <summary>
            The transform feedback buffer mode program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.TransformFeedbackVaryings">
            <summary>
            The transform feedback varyings program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.GeometryVerticesOut">
            <summary>
            The geometry vertices out program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.GeometryInputType">
            <summary>
            The geometry input type program parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.ProgramParameter.GeometryOutputType">
            <summary>
            The geometry output type program parameter
            </summary>
        </member>
        <member name="T:OpenGL.GL.ActiveAttribType">
            <summary>
            The active attrib type enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.Float">
            <summary>
            The float active attrib type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.FloatVec2">
            <summary>
            The float vec active attrib type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.FloatVec3">
            <summary>
            The float vec active attrib type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.FloatVec4">
            <summary>
            The float vec active attrib type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.FloatMat2">
            <summary>
            The float mat active attrib type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.FloatMat3">
            <summary>
            The float mat active attrib type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveAttribType.FloatMat4">
            <summary>
            The float mat active attrib type
            </summary>
        </member>
        <member name="T:OpenGL.GL.ActiveUniformType">
            <summary>
            The active uniform type enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Int">
            <summary>
            The int active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Float">
            <summary>
            The float active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatVec2">
            <summary>
            The float vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatVec3">
            <summary>
            The float vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatVec4">
            <summary>
            The float vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntVec2">
            <summary>
            The int vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntVec3">
            <summary>
            The int vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntVec4">
            <summary>
            The int vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Bool">
            <summary>
            The bool active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.BoolVec2">
            <summary>
            The bool vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.BoolVec3">
            <summary>
            The bool vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.BoolVec4">
            <summary>
            The bool vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat2">
            <summary>
            The float mat active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat3">
            <summary>
            The float mat active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat4">
            <summary>
            The float mat active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler1D">
            <summary>
            The sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2D">
            <summary>
            The sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler3D">
            <summary>
            The sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.SamplerCube">
            <summary>
            The sampler cube active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler1DShadow">
            <summary>
            The sampler shadow active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DShadow">
            <summary>
            The sampler shadow active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DRect">
            <summary>
            The sampler rect active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DRectShadow">
            <summary>
            The sampler rect shadow active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat2x3">
            <summary>
            The float mat 2x active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat2x4">
            <summary>
            The float mat 2x active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat3x2">
            <summary>
            The float mat 3x active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat3x4">
            <summary>
            The float mat 3x active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat4x2">
            <summary>
            The float mat 4x active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.FloatMat4x3">
            <summary>
            The float mat 4x active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler1DArray">
            <summary>
            The sampler array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DArray">
            <summary>
            The sampler array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.SamplerBuffer">
            <summary>
            The sampler buffer active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler1DArrayShadow">
            <summary>
            The sampler array shadow active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DArrayShadow">
            <summary>
            The sampler array shadow active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.SamplerCubeShadow">
            <summary>
            The sampler cube shadow active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntVec2">
            <summary>
            The unsigned int vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntVec3">
            <summary>
            The unsigned int vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntVec4">
            <summary>
            The unsigned int vec active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler1D">
            <summary>
            The int sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler2D">
            <summary>
            The int sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler3D">
            <summary>
            The int sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSamplerCube">
            <summary>
            The int sampler cube active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler2DRect">
            <summary>
            The int sampler rect active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler1DArray">
            <summary>
            The int sampler array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler2DArray">
            <summary>
            The int sampler array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSamplerBuffer">
            <summary>
            The int sampler buffer active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler1D">
            <summary>
            The unsigned int sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler2D">
            <summary>
            The unsigned int sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler3D">
            <summary>
            The unsigned int sampler active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSamplerCube">
            <summary>
            The unsigned int sampler cube active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler2DRect">
            <summary>
            The unsigned int sampler rect active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler1DArray">
            <summary>
            The unsigned int sampler array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler2DArray">
            <summary>
            The unsigned int sampler array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSamplerBuffer">
            <summary>
            The unsigned int sampler buffer active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DMultisample">
            <summary>
            The sampler multisample active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler2DMultisample">
            <summary>
            The int sampler multisample active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler2DMultisample">
            <summary>
            The unsigned int sampler multisample active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.Sampler2DMultisampleArray">
            <summary>
            The sampler multisample array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.IntSampler2DMultisampleArray">
            <summary>
            The int sampler multisample array active uniform type
            </summary>
        </member>
        <member name="F:OpenGL.GL.ActiveUniformType.UnsignedIntSampler2DMultisampleArray">
            <summary>
            The unsigned int sampler multisample array active uniform type
            </summary>
        </member>
        <member name="T:OpenGL.GL.BufferTarget">
            <summary>
            The buffer target enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.ArrayBuffer">
            <summary>
            The array buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.ElementArrayBuffer">
            <summary>
            The element array buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.PixelPackBuffer">
            <summary>
            The pixel pack buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.PixelUnpackBuffer">
            <summary>
            The pixel unpack buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.UniformBuffer">
            <summary>
            The uniform buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.TextureBuffer">
            <summary>
            The texture buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.TransformFeedbackBuffer">
            <summary>
            The transform feedback buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.CopyReadBuffer">
            <summary>
            The copy read buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.CopyWriteBuffer">
            <summary>
            The copy write buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.DrawIndirectBuffer">
            <summary>
            The draw indirect buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.AtomicCounterBuffer">
            <summary>
            The atomic counter buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.DispatchIndirectBuffer">
            <summary>
            The dispatch indirect buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.QueryBuffer">
            <summary>
            The query buffer buffer target
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferTarget.ShaderStorageBuffer">
            <summary>
            The shader storage buffer buffer target
            </summary>
        </member>
        <member name="T:OpenGL.GL.TextureTarget">
            <summary>
            The texture target enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture1D">
            <summary>
            The texture texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture2D">
            <summary>
            The texture texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture3D">
            <summary>
            The texture texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture1DArray">
            <summary>
            The texture array texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture2DArray">
            <summary>
            The texture array texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureRectangle">
            <summary>
            The texture rectangle texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMap">
            <summary>
            The texture cube map texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapPositiveX">
            <summary>
            The texture cube map positive texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapNegativeX">
            <summary>
            The texture cube map negative texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapPositiveY">
            <summary>
            The texture cube map positive texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapNegativeY">
            <summary>
            The texture cube map negative texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapPositiveZ">
            <summary>
            The texture cube map positive texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapNegativeZ">
            <summary>
            The texture cube map negative texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.TextureCubeMapArray">
            <summary>
            The texture cube map array texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture2DMultisample">
            <summary>
            The texture multisample texture target
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureTarget.Texture2DMultisampleArray">
            <summary>
            The texture multisample array texture target
            </summary>
        </member>
        <member name="T:OpenGL.GL.BeginMode">
            <summary>
            The begin mode enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.Points">
            <summary>
            The points begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.Lines">
            <summary>
            The lines begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.LineLoop">
            <summary>
            The line loop begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.LineStrip">
            <summary>
            The line strip begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.Triangles">
            <summary>
            The triangles begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.TriangleStrip">
            <summary>
            The triangle strip begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.TriangleFan">
            <summary>
            The triangle fan begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.LinesAdjacency">
            <summary>
            The lines adjacency begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.LineStripAdjacency">
            <summary>
            The line strip adjacency begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.TrianglesAdjacency">
            <summary>
            The triangles adjacency begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.TriangleStripAdjacency">
            <summary>
            The triangle strip adjacency begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.Patches">
            <summary>
            The patches begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.Quads">
            <summary>
            The quads begin mode
            </summary>
        </member>
        <member name="F:OpenGL.GL.BeginMode.QuadStrip">
            <summary>
            The quad strip begin mode
            </summary>
        </member>
        <member name="T:OpenGL.GL.DrawElementsType">
            <summary>
            The draw elements type enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.DrawElementsType.UnsignedByte">
            <summary>
            The unsigned byte draw elements type
            </summary>
        </member>
        <member name="F:OpenGL.GL.DrawElementsType.UnsignedShort">
            <summary>
            The unsigned short draw elements type
            </summary>
        </member>
        <member name="F:OpenGL.GL.DrawElementsType.UnsignedInt">
            <summary>
            The unsigned int draw elements type
            </summary>
        </member>
        <member name="T:OpenGL.GL.VertexAttribPointerType">
            <summary>
            The vertex attrib pointer type enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.Byte">
            <summary>
            The byte vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.UnsignedByte">
            <summary>
            The unsigned byte vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.Short">
            <summary>
            The short vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.UnsignedShort">
            <summary>
            The unsigned short vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.Int">
            <summary>
            The int vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.UnsignedInt">
            <summary>
            The unsigned int vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.Float">
            <summary>
            The float vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.Double">
            <summary>
            The double vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.HalfFloat">
            <summary>
            The half float vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.UnsignedUInt2101010Reversed">
            <summary>
            The unsigned int 2101010 reversed vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.UnsignedInt2101010Reversed">
            <summary>
            The unsigned int 2101010 reversed vertex attrib pointer type
            </summary>
        </member>
        <member name="F:OpenGL.GL.VertexAttribPointerType.UnsignedUInt101111Reversed">
            <summary>
            The unsigned int 101111 reversed vertex attrib pointer type
            </summary>
        </member>
        <member name="T:OpenGL.GL.BufferUsageHint">
            <summary>
            The buffer usage hint enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.StreamDraw">
            <summary>
            The stream draw buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.StreamRead">
            <summary>
            The stream read buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.StreamCopy">
            <summary>
            The stream copy buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.StaticDraw">
            <summary>
            The static draw buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.StaticRead">
            <summary>
            The static read buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.StaticCopy">
            <summary>
            The static copy buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.DynamicDraw">
            <summary>
            The dynamic draw buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.DynamicRead">
            <summary>
            The dynamic read buffer usage hint
            </summary>
        </member>
        <member name="F:OpenGL.GL.BufferUsageHint.DynamicCopy">
            <summary>
            The dynamic copy buffer usage hint
            </summary>
        </member>
        <member name="T:OpenGL.GL.PixelFormat">
            <summary>
            The pixel format enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.ColorIndex">
            <summary>
            The color index pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.StencilIndex">
            <summary>
            The stencil index pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.DepthComponent">
            <summary>
            The depth component pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Red">
            <summary>
            The red pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Green">
            <summary>
            The green pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Blue">
            <summary>
            The blue pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Alpha">
            <summary>
            The alpha pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Rgb">
            <summary>
            The rgb pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Rgba">
            <summary>
            The rgba pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Luminance">
            <summary>
            The luminance pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.LuminanceAlpha">
            <summary>
            The luminance alpha pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.AbgrExt">
            <summary>
            The abgr ext pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.CmykExt">
            <summary>
            The cmyk ext pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.CmykaExt">
            <summary>
            The cmyka ext pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Bgr">
            <summary>
            The bgr pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Bgra">
            <summary>
            The bgra pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Ycrcb422Sgix">
            <summary>
            The ycrcb 422 sgix pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Ycrcb444Sgix">
            <summary>
            The ycrcb 444 sgix pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.Rg">
            <summary>
            The rg pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.RgInteger">
            <summary>
            The rg integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.DepthStencil">
            <summary>
            The depth stencil pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.RedInteger">
            <summary>
            The red integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.GreenInteger">
            <summary>
            The green integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.BlueInteger">
            <summary>
            The blue integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.AlphaInteger">
            <summary>
            The alpha integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.RgbInteger">
            <summary>
            The rgb integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.RgbaInteger">
            <summary>
            The rgba integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.BgrInteger">
            <summary>
            The bgr integer pixel format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelFormat.BgraInteger">
            <summary>
            The bgra integer pixel format
            </summary>
        </member>
        <member name="T:OpenGL.GL.PixelInternalFormat">
            <summary>
            The pixel internal format enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent">
            <summary>
            The depth component pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Alpha">
            <summary>
            The alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb">
            <summary>
            The rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba">
            <summary>
            The rgba pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance">
            <summary>
            The luminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.LuminanceAlpha">
            <summary>
            The luminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R3G3B2">
            <summary>
            The  pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Alpha4">
            <summary>
            The alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Alpha8">
            <summary>
            The alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Alpha12">
            <summary>
            The alpha 12 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Alpha16">
            <summary>
            The alpha 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance4">
            <summary>
            The luminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance8">
            <summary>
            The luminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance12">
            <summary>
            The luminance 12 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance16">
            <summary>
            The luminance 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance4Alpha4">
            <summary>
            The luminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance6Alpha2">
            <summary>
            The luminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance8Alpha8">
            <summary>
            The luminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance12Alpha4">
            <summary>
            The luminance 12 alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance12Alpha12">
            <summary>
            The luminance 12 alpha 12 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Luminance16Alpha16">
            <summary>
            The luminance 16 alpha 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Intensity">
            <summary>
            The intensity pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Intensity4">
            <summary>
            The intensity pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Intensity8">
            <summary>
            The intensity pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Intensity12">
            <summary>
            The intensity 12 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Intensity16">
            <summary>
            The intensity 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb2Ext">
            <summary>
            The rgb ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb4">
            <summary>
            The rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb5">
            <summary>
            The rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb8">
            <summary>
            The rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb10">
            <summary>
            The rgb 10 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb12">
            <summary>
            The rgb 12 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb16">
            <summary>
            The rgb 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba2">
            <summary>
            The rgba pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba4">
            <summary>
            The rgba pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb5A1">
            <summary>
            The rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba8">
            <summary>
            The rgba pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb10A2">
            <summary>
            The rgb 10 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba12">
            <summary>
            The rgba 12 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba16">
            <summary>
            The rgba 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualAlpha4Sgis">
            <summary>
            The dual alpha sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualAlpha8Sgis">
            <summary>
            The dual alpha sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualAlpha12Sgis">
            <summary>
            The dual alpha 12 sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualAlpha16Sgis">
            <summary>
            The dual alpha 16 sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualLuminance4Sgis">
            <summary>
            The dual luminance sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualLuminance8Sgis">
            <summary>
            The dual luminance sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualLuminance12Sgis">
            <summary>
            The dual luminance 12 sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualLuminance16Sgis">
            <summary>
            The dual luminance 16 sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualIntensity4Sgis">
            <summary>
            The dual intensity sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualIntensity8Sgis">
            <summary>
            The dual intensity sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualIntensity12Sgis">
            <summary>
            The dual intensity 12 sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualIntensity16Sgis">
            <summary>
            The dual intensity 16 sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualLuminanceAlpha4Sgis">
            <summary>
            The dual luminance alpha sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DualLuminanceAlpha8Sgis">
            <summary>
            The dual luminance alpha sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.QuadAlpha4Sgis">
            <summary>
            The quad alpha sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.QuadAlpha8Sgis">
            <summary>
            The quad alpha sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.QuadLuminance4Sgis">
            <summary>
            The quad luminance sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.QuadLuminance8Sgis">
            <summary>
            The quad luminance sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.QuadIntensity4Sgis">
            <summary>
            The quad intensity sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.QuadIntensity8Sgis">
            <summary>
            The quad intensity sgis pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent16">
            <summary>
            The depth component 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent16Sgix">
            <summary>
            The depth component 16 sgix pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent24">
            <summary>
            The depth component 24 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent24Sgix">
            <summary>
            The depth component 24 sgix pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent32">
            <summary>
            The depth component 32 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent32Sgix">
            <summary>
            The depth component 32 sgix pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRed">
            <summary>
            The compressed red pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRg">
            <summary>
            The compressed rg pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R8">
            <summary>
            The  pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R16">
            <summary>
            The 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg8">
            <summary>
            The rg pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg16">
            <summary>
            The rg 16 pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R16f">
            <summary>
            The 16f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R32f">
            <summary>
            The 32f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg16f">
            <summary>
            The rg 16f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg32f">
            <summary>
            The rg 32f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R8i">
            <summary>
            The 8i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R8ui">
            <summary>
            The 8ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R16i">
            <summary>
            The 16i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R16ui">
            <summary>
            The 16ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R32i">
            <summary>
            The 32i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R32ui">
            <summary>
            The 32ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg8i">
            <summary>
            The rg 8i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg8ui">
            <summary>
            The rg 8ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg16i">
            <summary>
            The rg 16i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg16ui">
            <summary>
            The rg 16ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg32i">
            <summary>
            The rg 32i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rg32ui">
            <summary>
            The rg 32ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgbS3tcDxt1Ext">
            <summary>
            The compressed rgb 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgbaS3tcDxt1Ext">
            <summary>
            The compressed rgba 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgbaS3tcDxt3Ext">
            <summary>
            The compressed rgba 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgbaS3tcDxt5Ext">
            <summary>
            The compressed rgba 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedAlpha">
            <summary>
            The compressed alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedLuminance">
            <summary>
            The compressed luminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedLuminanceAlpha">
            <summary>
            The compressed luminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedIntensity">
            <summary>
            The compressed intensity pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgb">
            <summary>
            The compressed rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgba">
            <summary>
            The compressed rgba pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthStencil">
            <summary>
            The depth stencil pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba32f">
            <summary>
            The rgba 32f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb32f">
            <summary>
            The rgb 32f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba16f">
            <summary>
            The rgba 16f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb16f">
            <summary>
            The rgb 16f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Depth24Stencil8">
            <summary>
            The depth 24 stencil pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.R11fG11fB10f">
            <summary>
            The 11f 11f 10f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb9E5">
            <summary>
            The rgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Srgb">
            <summary>
            The srgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Srgb8">
            <summary>
            The srgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.SrgbAlpha">
            <summary>
            The srgb alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Srgb8Alpha8">
            <summary>
            The srgb alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.SluminanceAlpha">
            <summary>
            The sluminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Sluminance8Alpha8">
            <summary>
            The sluminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Sluminance">
            <summary>
            The sluminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Sluminance8">
            <summary>
            The sluminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSrgb">
            <summary>
            The compressed srgb pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSrgbAlpha">
            <summary>
            The compressed srgb alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSluminance">
            <summary>
            The compressed sluminance pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSluminanceAlpha">
            <summary>
            The compressed sluminance alpha pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSrgbS3tcDxt1Ext">
            <summary>
            The compressed srgb 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSrgbAlphaS3tcDxt1Ext">
            <summary>
            The compressed srgb alpha 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSrgbAlphaS3tcDxt3Ext">
            <summary>
            The compressed srgb alpha 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSrgbAlphaS3tcDxt5Ext">
            <summary>
            The compressed srgb alpha 3tc dxt ext pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.DepthComponent32f">
            <summary>
            The depth component 32f pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Depth32fStencil8">
            <summary>
            The depth 32f stencil pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba32ui">
            <summary>
            The rgba 32ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb32ui">
            <summary>
            The rgb 32ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba16ui">
            <summary>
            The rgba 16ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb16ui">
            <summary>
            The rgb 16ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba8ui">
            <summary>
            The rgba 8ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb8ui">
            <summary>
            The rgb 8ui pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba32i">
            <summary>
            The rgba 32i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb32i">
            <summary>
            The rgb 32i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba16i">
            <summary>
            The rgba 16i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb16i">
            <summary>
            The rgb 16i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgba8i">
            <summary>
            The rgba 8i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Rgb8i">
            <summary>
            The rgb 8i pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Float32UnsignedInt248Rev">
            <summary>
            The float 32 unsigned int 248 rev pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRedRgtc1">
            <summary>
            The compressed red rgtc pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSignedRedRgtc1">
            <summary>
            The compressed signed red rgtc pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedRgRgtc2">
            <summary>
            The compressed rg rgtc pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.CompressedSignedRgRgtc2">
            <summary>
            The compressed signed rg rgtc pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.One">
            <summary>
            The one pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Two">
            <summary>
            The two pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Three">
            <summary>
            The three pixel internal format
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelInternalFormat.Four">
            <summary>
            The four pixel internal format
            </summary>
        </member>
        <member name="T:OpenGL.GL.PixelStoreParameter">
            <summary>
            The pixel store parameter enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSwapBytes">
            <summary>
            The unpack swap bytes pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackLsbFirst">
            <summary>
            The unpack lsb first pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackRowLength">
            <summary>
            The unpack row length pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSkipRows">
            <summary>
            The unpack skip rows pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSkipPixels">
            <summary>
            The unpack skip pixels pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackAlignment">
            <summary>
            The unpack alignment pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSwapBytes">
            <summary>
            The pack swap bytes pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackLsbFirst">
            <summary>
            The pack lsb first pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackRowLength">
            <summary>
            The pack row length pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSkipRows">
            <summary>
            The pack skip rows pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSkipPixels">
            <summary>
            The pack skip pixels pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackAlignment">
            <summary>
            The pack alignment pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSkipImages">
            <summary>
            The pack skip images pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSkipImagesExt">
            <summary>
            The pack skip images ext pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackImageHeight">
            <summary>
            The pack image height pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackImageHeightExt">
            <summary>
            The pack image height ext pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSkipImages">
            <summary>
            The unpack skip images pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSkipImagesExt">
            <summary>
            The unpack skip images ext pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackImageHeight">
            <summary>
            The unpack image height pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackImageHeightExt">
            <summary>
            The unpack image height ext pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSkipVolumesSgis">
            <summary>
            The pack skip volumes sgis pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackImageDepthSgis">
            <summary>
            The pack image depth sgis pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSkipVolumesSgis">
            <summary>
            The unpack skip volumes sgis pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackImageDepthSgis">
            <summary>
            The unpack image depth sgis pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PixelTileWidthSgix">
            <summary>
            The pixel tile width sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PixelTileHeightSgix">
            <summary>
            The pixel tile height sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PixelTileGridWidthSgix">
            <summary>
            The pixel tile grid width sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PixelTileGridHeightSgix">
            <summary>
            The pixel tile grid height sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PixelTileGridDepthSgix">
            <summary>
            The pixel tile grid depth sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PixelTileCacheSizeSgix">
            <summary>
            The pixel tile cache size sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackResampleSgix">
            <summary>
            The pack resample sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackResampleSgix">
            <summary>
            The unpack resample sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.PackSubsampleRateSgix">
            <summary>
            The pack subsample rate sgix pixel store parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelStoreParameter.UnpackSubsampleRateSgix">
            <summary>
            The unpack subsample rate sgix pixel store parameter
            </summary>
        </member>
        <member name="T:OpenGL.GL.TextureParameterName">
            <summary>
            The texture parameter name enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureBaseLevel">
            <summary>
            The texture base level texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureBorderColor">
            <summary>
            The texture border color texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureCompareMode">
            <summary>
            The texture compare mode texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureCompareFunc">
            <summary>
            The texture compare func texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureLodBias">
            <summary>
            The texture lod bias texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureMagFilter">
            <summary>
            The texture mag filter texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureMaxLevel">
            <summary>
            The texture max level texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureMaxLod">
            <summary>
            The texture max lod texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureMinFilter">
            <summary>
            The texture min filter texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureMinLod">
            <summary>
            The texture min lod texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureSwizzleR">
            <summary>
            The texture swizzle texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureSwizzleG">
            <summary>
            The texture swizzle texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureSwizzleB">
            <summary>
            The texture swizzle texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureSwizzleA">
            <summary>
            The texture swizzle texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureSwizzleRGBA">
            <summary>
            The texture swizzle rgba texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureWrapS">
            <summary>
            The texture wrap texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureWrapT">
            <summary>
            The texture wrap texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.TextureWrapR">
            <summary>
            The texture wrap texture parameter name
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameterName.MaxAnisotropyExt">
            <summary>
            The max anisotropy ext texture parameter name
            </summary>
        </member>
        <member name="T:OpenGL.GL.TextureParameter">
            <summary>
            The texture parameter enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Nearest">
            <summary>
            The nearest texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Linear">
            <summary>
            The linear texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.NearestMipMapNearest">
            <summary>
            The nearest mip map nearest texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.LinearMipMapNearest">
            <summary>
            The linear mip map nearest texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.NearestMipMapLinear">
            <summary>
            The nearest mip map linear texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.LinearMipMapLinear">
            <summary>
            The linear mip map linear texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.ClampToEdge">
            <summary>
            The clamp to edge texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.ClampToBorder">
            <summary>
            The clamp to border texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.MirrorClampToEdge">
            <summary>
            The mirror clamp to edge texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.MirroredRepeat">
            <summary>
            The mirrored repeat texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Repeat">
            <summary>
            The repeat texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Red">
            <summary>
            The red texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Green">
            <summary>
            The green texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Blue">
            <summary>
            The blue texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Alpha">
            <summary>
            The alpha texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.Zero">
            <summary>
            The zero texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.One">
            <summary>
            The one texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.CompareRefToTexture">
            <summary>
            The compare ref to texture texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.None">
            <summary>
            The none texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.StencilIndex">
            <summary>
            The stencil index texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.DepthComponent">
            <summary>
            The depth component texture parameter
            </summary>
        </member>
        <member name="F:OpenGL.GL.TextureParameter.MaxAnisotropyExt">
            <summary>
            The max anisotropy ext texture parameter
            </summary>
        </member>
        <member name="T:OpenGL.GL.PixelType">
            <summary>
            The pixel type enum
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.Byte">
            <summary>
            The byte pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedByte">
            <summary>
            The unsigned byte pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.Short">
            <summary>
            The short pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort">
            <summary>
            The unsigned short pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.Int">
            <summary>
            The int pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt">
            <summary>
            The unsigned int pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.Float">
            <summary>
            The float pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.HalfFloat">
            <summary>
            The half float pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.Bitmap">
            <summary>
            The bitmap pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedByte332">
            <summary>
            The unsigned byte 332 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedByte332Ext">
            <summary>
            The unsigned byte 332 ext pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort4444">
            <summary>
            The unsigned short 4444 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort4444Ext">
            <summary>
            The unsigned short 4444 ext pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort5551">
            <summary>
            The unsigned short 5551 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort5551Ext">
            <summary>
            The unsigned short 5551 ext pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt8888">
            <summary>
            The unsigned int 8888 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt8888Ext">
            <summary>
            The unsigned int 8888 ext pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt1010102">
            <summary>
            The unsigned int 1010102 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt1010102Ext">
            <summary>
            The unsigned int 1010102 ext pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedByte233Reversed">
            <summary>
            The unsigned byte 233 reversed pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort565">
            <summary>
            The unsigned short 565 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort565Reversed">
            <summary>
            The unsigned short 565 reversed pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort4444Reversed">
            <summary>
            The unsigned short 4444 reversed pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedShort1555Reversed">
            <summary>
            The unsigned short 1555 reversed pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt8888Reversed">
            <summary>
            The unsigned int 8888 reversed pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt2101010Reversed">
            <summary>
            The unsigned int 2101010 reversed pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt248">
            <summary>
            The unsigned int 248 pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt10F11F11FRev">
            <summary>
            The unsigned int 10 11 11 rev pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.UnsignedInt5999Rev">
            <summary>
            The unsigned int 5999 rev pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.PixelType.Float32UnsignedInt248Rev">
            <summary>
            The float 32 unsigned int 248 rev pixel type
            </summary>
        </member>
        <member name="F:OpenGL.GL.uint1">
            <summary>
            The uint
            </summary>
        </member>
        <member name="F:OpenGL.GL.int1">
            <summary>
            The int
            </summary>
        </member>
        <member name="F:OpenGL.GL.matrix4Float">
            <summary>
            The matrix float
            </summary>
        </member>
        <member name="M:OpenGL.GL.GenBuffer">
            <summary>
            Gens the buffer
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:OpenGL.GL.DeleteBuffer(System.UInt32)">
            <summary>
            Deletes the buffer using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
        </member>
        <member name="M:OpenGL.GL.GetShaderInfoLog(System.UInt32)">
            <summary>
            Gets the shader info log using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <returns>The string</returns>
        </member>
        <member name="M:OpenGL.GL.ShaderSource(System.UInt32,System.String)">
            <summary>
            Shaders the source using the specified shader
            </summary>
            <param name="shader">The shader</param>
            <param name="source">The source</param>
        </member>
        <member name="M:OpenGL.GL.GetShaderCompileStatus(System.UInt32)">
            <summary>
            Describes whether get shader compile status
            </summary>
            <param name="shader">The shader</param>
            <returns>The bool</returns>
        </member>
        <member name="M:OpenGL.GL.GetProgramInfoLog(System.UInt32)">
            <summary>
            Gets the program info log using the specified program
            </summary>
            <param name="program">The program</param>
            <returns>The string</returns>
        </member>
        <member name="M:OpenGL.GL.GetProgramLinkStatus(System.UInt32)">
            <summary>
            Describes whether get program link status
            </summary>
            <param name="program">The program</param>
            <returns>The bool</returns>
        </member>
        <member name="M:OpenGL.GL.UniformMatrix4fv(System.Int32,System.Numerics.Matrix4x4)">
            <summary>
            Uniforms the matrix 4fv using the specified location
            </summary>
            <param name="location">The location</param>
            <param name="param">The param</param>
        </member>
        <member name="M:OpenGL.GL.VertexAttribPointer(System.Int32,System.Int32,OpenGL.GL.VertexAttribPointerType,System.Boolean,System.Int32,System.IntPtr)">
            <summary>
            Vertexes the attrib pointer using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="size">The size</param>
            <param name="type">The type</param>
            <param name="normalized">The normalized</param>
            <param name="stride">The stride</param>
            <param name="pointer">The pointer</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenGL.GL.EnableVertexAttribArray(System.Int32)">
            <summary>
            Enables the vertex attrib array using the specified index
            </summary>
            <param name="index">The index</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:OpenGL.GL.GenVertexArray">
            <summary>
            Gens the vertex array
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:OpenGL.GL.DeleteVertexArray(System.UInt32)">
            <summary>
            Deletes the vertex array using the specified vao
            </summary>
            <param name="vao">The vao</param>
        </member>
        <member name="M:OpenGL.GL.GenTexture">
            <summary>
            Gens the texture
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:OpenGL.GL.DeleteTexture(System.UInt32)">
            <summary>
            Deletes the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="T:OpenGL.Vector3Ext">
            <summary>
            The vector ext class
            </summary>
        </member>
        <member name="M:OpenGL.Vector3Ext.TakeMin(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Store the minimum values of x, y, and z between the two vectors.
            </summary>
            <param name="tv">The Vector3 to perform the TakeMin on.</param>
            <param name="v">Vector to check against.</param>
        </member>
        <member name="M:OpenGL.Vector3Ext.TakeMax(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Store the maximum values of x, y, and z between the two vectors.
            </summary>
            <param name="tv">The Vector3 to perform the TakeMax on.</param>
            <param name="v">Vector to check against.</param>
        </member>
        <member name="M:OpenGL.Vector3Ext.Normalize(System.Numerics.Vector3)">
            <summary>
            Normalizes the Vector3 structure to have a peak value of one.
            </summary>
            <param name="v">The Vector3 to perform the Normalize on.</param>
            <returns>if (Length = 0) return Zero; else return Vector3(x,y,z)/Length.</returns>
        </member>
        <member name="M:OpenGL.Vector3Ext.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Performs the Vector3 scalar dot product.
            </summary>
            <param name="tv">The Vector3 to perform the dot product on.</param>
            <param name="v">Second dot product term.</param>
            <returns>Vector3.Dot(this, v).</returns>
        </member>
        <member name="M:OpenGL.Vector3Ext.Get(System.Numerics.Vector3,System.Int32)">
            <summary>
            Provide an accessor for each of the elements of the Vector structure.
            </summary>
            <param name="v">The Vector3 to access.</param>
            <param name="index">The element to access (0 = X, 1 = Y, 2 = Z).</param>
            <returns>The element of the Vector3 as indexed by i.</returns>
        </member>
        <member name="T:OpenGL.Vector4Ext">
            <summary>
            The vector ext class
            </summary>
        </member>
        <member name="M:OpenGL.Vector4Ext.Get(System.Numerics.Vector4,System.Int32)">
            <summary>
            Gets the v
            </summary>
            <param name="v">The </param>
            <param name="index">The index</param>
            <returns>The float</returns>
        </member>
        <member name="T:SDL2.SDL">
            <summary>
            The sdl class
            </summary>
        </member>
        <member name="F:SDL2.SDL.nativeLibName">
            <summary>
            The native lib name
            </summary>
        </member>
        <member name="M:SDL2.SDL.Utf8Size(System.String)">
            <summary>
            Utfs the 8 size using the specified str
            </summary>
            <param name="str">The str</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.Utf8Encode(System.String,System.Byte*,System.Int32)">
            <summary>
            Utfs the 8 encode using the specified str
            </summary>
            <param name="str">The str</param>
            <param name="buffer">The buffer</param>
            <param name="bufferSize">The buffer size</param>
            <returns>The buffer</returns>
        </member>
        <member name="M:SDL2.SDL.Utf8EncodeHeap(System.String)">
            <summary>
            Utfs the 8 encode heap using the specified str
            </summary>
            <param name="str">The str</param>
            <returns>The buffer</returns>
        </member>
        <member name="M:SDL2.SDL.UTF8_ToManaged(System.IntPtr,System.Boolean)">
            <summary>
            Utfs the 8 to managed using the specified s
            </summary>
            <param name="s">The </param>
            <param name="freePtr">The free ptr</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FOURCC(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the fourcc using the specified a
            </summary>
            <param name="A">The </param>
            <param name="B">The </param>
            <param name="C">The </param>
            <param name="D">The </param>
            <returns>The uint</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_bool">
            <summary>
            The sdl bool enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_bool.SDL_FALSE">
            <summary>
            The sdl false sdl bool
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_bool.SDL_TRUE">
            <summary>
            The sdl true sdl bool
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_malloc(System.IntPtr)">
            <summary>
            Sdls the malloc using the specified size
            </summary>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_free(System.IntPtr)">
            <summary>
            Sdls the free using the specified memblock
            </summary>
            <param name="memblock">The memblock</param>
        </member>
        <member name="M:SDL2.SDL.SDL_memcpy(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the memcpy using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="F:SDL2.SDL.RW_SEEK_SET">
            <summary>
            The rw seek set
            </summary>
        </member>
        <member name="F:SDL2.SDL.RW_SEEK_CUR">
            <summary>
            The rw seek cur
            </summary>
        </member>
        <member name="F:SDL2.SDL.RW_SEEK_END">
            <summary>
            The rw seek end
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWOPS_UNKNOWN">
            <summary>
            The sdl rwops unknown
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWOPS_WINFILE">
            <summary>
            The sdl rwops winfile
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWOPS_STDFILE">
            <summary>
            The sdl rwops stdfile
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWOPS_JNIFILE">
            <summary>
            The sdl rwops jnifile
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWOPS_MEMORY">
            <summary>
            The sdl rwops memory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWOPS_MEMORY_RO">
            <summary>
            The sdl rwops memory ro
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDLRWopsSizeCallback">
            <summary>
            The sdlr wops size callback
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDLRWopsSeekCallback">
            <summary>
            The sdlr wops seek callback
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDLRWopsReadCallback">
            <summary>
            The sdlr wops read callback
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDLRWopsWriteCallback">
            <summary>
            The sdlr wops write callback
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDLRWopsCloseCallback">
            <summary>
            The sdlr wops close callback
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_RWops">
            <summary>
            The sdl rwops
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWops.size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWops.seek">
            <summary>
            The seek
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWops.read">
            <summary>
            The read
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWops.write">
            <summary>
            The write
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWops.close">
            <summary>
            The close
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RWops.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_RWFromFile(System.Byte*,System.Byte*)">
            <summary>
            Internals the sdl rw from file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="mode">The mode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWFromFile(System.String,System.String)">
            <summary>
            Sdls the rw from file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="mode">The mode</param>
            <returns>The rw ops</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AllocRW">
            <summary>
            Sdls the alloc rw
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FreeRW(System.IntPtr)">
            <summary>
            Sdls the free rw using the specified area
            </summary>
            <param name="area">The area</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RWFromFP(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the rw from fp using the specified fp
            </summary>
            <param name="fp">The fp</param>
            <param name="autoclose">The autoclose</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWFromMem(System.IntPtr,System.Int32)">
            <summary>
            Sdls the rw from mem using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWFromConstMem(System.IntPtr,System.Int32)">
            <summary>
            Sdls the rw from const mem using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWsize(System.IntPtr)">
            <summary>
            Sdls the r wsize using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWseek(System.IntPtr,System.Int64,System.Int32)">
            <summary>
            Sdls the r wseek using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="offset">The offset</param>
            <param name="whence">The whence</param>
            <returns>The long</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWtell(System.IntPtr)">
            <summary>
            Sdls the r wtell using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWread(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the r wread using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="ptr">The ptr</param>
            <param name="size">The size</param>
            <param name="maxnum">The maxnum</param>
            <returns>The long</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWwrite(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the r wwrite using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="ptr">The ptr</param>
            <param name="size">The size</param>
            <param name="maxnum">The maxnum</param>
            <returns>The long</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadU8(System.IntPtr)">
            <summary>
            Sdls the read u 8 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadLE16(System.IntPtr)">
            <summary>
            Sdls the read le 16 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 16</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadBE16(System.IntPtr)">
            <summary>
            Sdls the read be 16 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 16</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadLE32(System.IntPtr)">
            <summary>
            Sdls the read le 32 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadBE32(System.IntPtr)">
            <summary>
            Sdls the read be 32 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadLE64(System.IntPtr)">
            <summary>
            Sdls the read le 64 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 64</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ReadBE64(System.IntPtr)">
            <summary>
            Sdls the read be 64 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 64</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteU8(System.IntPtr,System.Byte)">
            <summary>
            Sdls the write u 8 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteLE16(System.IntPtr,System.UInt16)">
            <summary>
            Sdls the write le 16 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteBE16(System.IntPtr,System.UInt16)">
            <summary>
            Sdls the write be 16 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteLE32(System.IntPtr,System.UInt32)">
            <summary>
            Sdls the write le 32 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteBE32(System.IntPtr,System.UInt32)">
            <summary>
            Sdls the write be 32 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteLE64(System.IntPtr,System.UInt64)">
            <summary>
            Sdls the write le 64 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WriteBE64(System.IntPtr,System.UInt64)">
            <summary>
            Sdls the write be 64 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RWclose(System.IntPtr)">
            <summary>
            Sdls the r wclose using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LoadFile(System.Byte*,System.IntPtr@)">
            <summary>
            Internals the sdl load file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="datasize">The datasize</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LoadFile(System.String,System.IntPtr@)">
            <summary>
            Sdls the load file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="datasize">The datasize</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetMainReady">
            <summary>
            Sdls the set main ready
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_main_func">
            <summary>
            The sdl main func
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_WinRTRunApp(SDL2.SDL.SDL_main_func,System.IntPtr)">
            <summary>
            Sdls the win rt run app using the specified main function
            </summary>
            <param name="mainFunction">The main function</param>
            <param name="reserved">The reserved</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UIKitRunApp(System.Int32,System.IntPtr,SDL2.SDL.SDL_main_func)">
            <summary>
            Sdls the ui kit run app using the specified argc
            </summary>
            <param name="argc">The argc</param>
            <param name="argv">The argv</param>
            <param name="mainFunction">The main function</param>
            <returns>The int</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_TIMER">
            <summary>
            The sdl init timer
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_AUDIO">
            <summary>
            The sdl init audio
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_VIDEO">
            <summary>
            The sdl init video
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_JOYSTICK">
            <summary>
            The sdl init joystick
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_HAPTIC">
            <summary>
            The sdl init haptic
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_GAMECONTROLLER">
            <summary>
            The sdl init gamecontroller
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_EVENTS">
            <summary>
            The sdl init events
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_SENSOR">
            <summary>
            The sdl init sensor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_NOPARACHUTE">
            <summary>
            The sdl init noparachute
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_INIT_EVERYTHING">
            <summary>
            The sdl init sensor
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_Init(System.UInt32)">
            <summary>
            Sdls the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_InitSubSystem(System.UInt32)">
            <summary>
            Sdls the init sub system using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Quit">
            <summary>
            Sdls the quit
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_QuitSubSystem(System.UInt32)">
            <summary>
            Sdls the quit sub system using the specified flags
            </summary>
            <param name="flags">The flags</param>
        </member>
        <member name="M:SDL2.SDL.SDL_WasInit(System.UInt32)">
            <summary>
            Sdls the was init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetPlatform">
            <summary>
            Internals the sdl get platform
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPlatform">
            <summary>
            Sdls the get platform
            </summary>
            <returns>The string</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_FRAMEBUFFER_ACCELERATION">
            <summary>
            The sdl hint framebuffer acceleration
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_DRIVER">
            <summary>
            The sdl hint render driver
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_OPENGL_SHADERS">
            <summary>
            The sdl hint render opengl shaders
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_DIRECT3D_THREADSAFE">
            <summary>
            The sdl hint render direct3d threadsafe
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_VSYNC">
            <summary>
            The sdl hint render vsync
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_X11_XVIDMODE">
            <summary>
            The sdl hint video x11 xvidmode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_X11_XINERAMA">
            <summary>
            The sdl hint video x11 xinerama
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_X11_XRANDR">
            <summary>
            The sdl hint video x11 xrandr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_GRAB_KEYBOARD">
            <summary>
            The sdl hint grab keyboard
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS">
            <summary>
            The sdl hint video minimize on focus loss
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_IDLE_TIMER_DISABLED">
            <summary>
            The sdl hint idle timer disabled
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ORIENTATIONS">
            <summary>
            The sdl hint orientations
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_XINPUT_ENABLED">
            <summary>
            The sdl hint xinput enabled
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_GAMECONTROLLERCONFIG">
            <summary>
            The sdl hint gamecontrollerconfig
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS">
            <summary>
            The sdl hint joystick allow background events
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ALLOW_TOPMOST">
            <summary>
            The sdl hint allow topmost
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_TIMER_RESOLUTION">
            <summary>
            The sdl hint timer resolution
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_SCALE_QUALITY">
            <summary>
            The sdl hint render scale quality
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_HIGHDPI_DISABLED">
            <summary>
            The sdl hint video highdpi disabled
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_CTRL_CLICK_EMULATE_RIGHT_CLICK">
            <summary>
            The sdl hint ctrl click emulate right click
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_WIN_D3DCOMPILER">
            <summary>
            The sdl hint video win d3dcompiler
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_RELATIVE_MODE_WARP">
            <summary>
            The sdl hint mouse relative mode warp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT">
            <summary>
            The sdl hint video window share pixel format
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_ALLOW_SCREENSAVER">
            <summary>
            The sdl hint video allow screensaver
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ACCELEROMETER_AS_JOYSTICK">
            <summary>
            The sdl hint accelerometer as joystick
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES">
            <summary>
            The sdl hint video mac fullscreen spaces
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINRT_PRIVACY_POLICY_URL">
            <summary>
            The sdl hint winrt privacy policy url
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINRT_PRIVACY_POLICY_LABEL">
            <summary>
            The sdl hint winrt privacy policy label
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINRT_HANDLE_BACK_BUTTON">
            <summary>
            The sdl hint winrt handle back button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_NO_SIGNAL_HANDLERS">
            <summary>
            The sdl hint no signal handlers
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_IME_INTERNAL_EDITING">
            <summary>
            The sdl hint ime internal editing
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH">
            <summary>
            The sdl hint android separate mouse and touch
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT">
            <summary>
            The sdl hint emscripten keyboard element
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_THREAD_STACK_SIZE">
            <summary>
            The sdl hint thread stack size
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN">
            <summary>
            The sdl hint window frame usable while cursor hidden
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP">
            <summary>
            The sdl hint windows enable messageloop
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4">
            <summary>
            The sdl hint windows no close on alt f4
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING">
            <summary>
            The sdl hint xinput use old joystick mapping
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MAC_BACKGROUND_APP">
            <summary>
            The sdl hint mac background app
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_X11_NET_WM_PING">
            <summary>
            The sdl hint video x11 net wm ping
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION">
            <summary>
            The sdl hint android apk expansion main file version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION">
            <summary>
            The sdl hint android apk expansion patch file version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH">
            <summary>
            The sdl hint mouse focus clickthrough
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_BMP_SAVE_LEGACY_FORMAT">
            <summary>
            The sdl hint bmp save legacy format
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING">
            <summary>
            The sdl hint windows disable thread naming
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION">
            <summary>
            The sdl hint apple tv remote allow rotation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUDIO_RESAMPLING_MODE">
            <summary>
            The sdl hint audio resampling mode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_LOGICAL_SIZE_MODE">
            <summary>
            The sdl hint render logical size mode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_NORMAL_SPEED_SCALE">
            <summary>
            The sdl hint mouse normal speed scale
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE">
            <summary>
            The sdl hint mouse relative speed scale
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_TOUCH_MOUSE_EVENTS">
            <summary>
            The sdl hint touch mouse events
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_INTRESOURCE_ICON">
            <summary>
            The sdl hint windows intresource icon
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL">
            <summary>
            The sdl hint windows intresource icon small
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_IOS_HIDE_HOME_INDICATOR">
            <summary>
            The sdl hint ios hide home indicator
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_TV_REMOTE_AS_JOYSTICK">
            <summary>
            The sdl hint tv remote as joystick
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR">
            <summary>
            The sdl video x11 net wm bypass compositor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_DOUBLE_CLICK_TIME">
            <summary>
            The sdl hint mouse double click time
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS">
            <summary>
            The sdl hint mouse double click radius
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI">
            <summary>
            The sdl hint joystick hidapi
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_PS4">
            <summary>
            The sdl hint joystick hidapi ps4
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE">
            <summary>
            The sdl hint joystick hidapi ps4 rumble
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_STEAM">
            <summary>
            The sdl hint joystick hidapi steam
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_SWITCH">
            <summary>
            The sdl hint joystick hidapi switch
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_XBOX">
            <summary>
            The sdl hint joystick hidapi xbox
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ENABLE_STEAM_CONTROLLERS">
            <summary>
            The sdl hint enable steam controllers
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ANDROID_TRAP_BACK_BUTTON">
            <summary>
            The sdl hint android trap back button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_TOUCH_EVENTS">
            <summary>
            The sdl hint mouse touch events
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_GAMECONTROLLERCONFIG_FILE">
            <summary>
            The sdl hint gamecontrollerconfig file
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ANDROID_BLOCK_ON_PAUSE">
            <summary>
            The sdl hint android block on pause
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_RENDER_BATCHING">
            <summary>
            The sdl hint render batching
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_EVENT_LOGGING">
            <summary>
            The sdl hint event logging
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WAVE_RIFF_CHUNK_SIZE">
            <summary>
            The sdl hint wave riff chunk size
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WAVE_TRUNCATION">
            <summary>
            The sdl hint wave truncation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WAVE_FACT_CHUNK">
            <summary>
            The sdl hint wave fact chunk
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDO_X11_WINDOW_VISUALID">
            <summary>
            The sdl hint vido x11 window visualid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS">
            <summary>
            The sdl hint gamecontroller use button labels
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_EXTERNAL_CONTEXT">
            <summary>
            The sdl hint video external context
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE">
            <summary>
            The sdl hint joystick hidapi gamecube
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_DISPLAY_USABLE_BOUNDS">
            <summary>
            The sdl hint display usable bounds
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_X11_FORCE_EGL">
            <summary>
            The sdl hint video x11 force egl
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_GAMECONTROLLERTYPE">
            <summary>
            The sdl hint gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_CORRELATE_XINPUT">
            <summary>
            The sdl hint joystick hidapi correlate xinput
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_RAWINPUT">
            <summary>
            The sdl hint joystick rawinput
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUDIO_DEVICE_APP_NAME">
            <summary>
            The sdl hint audio device app name
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUDIO_DEVICE_STREAM_NAME">
            <summary>
            The sdl hint audio device stream name
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_PREFERRED_LOCALES">
            <summary>
            The sdl hint preferred locales
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_THREAD_PRIORITY_POLICY">
            <summary>
            The sdl hint thread priority policy
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_EMSCRIPTEN_ASYNCIFY">
            <summary>
            The sdl hint emscripten asyncify
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_LINUX_JOYSTICK_DEADZONES">
            <summary>
            The sdl hint linux joystick deadzones
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO">
            <summary>
            The sdl hint android block on pause pauseaudio
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_PS5">
            <summary>
            The sdl hint joystick hidapi ps5
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL">
            <summary>
            The sdl hint thread force realtime time critical
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_THREAD">
            <summary>
            The sdl hint joystick thread
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUTO_UPDATE_JOYSTICKS">
            <summary>
            The sdl hint auto update joysticks
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUTO_UPDATE_SENSORS">
            <summary>
            The sdl hint auto update sensors
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_MOUSE_RELATIVE_SCALING">
            <summary>
            The sdl hint mouse relative scaling
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE">
            <summary>
            The sdl hint joystick hidapi ps5 rumble
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS">
            <summary>
            The sdl hint windows force mutex critical sections
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL">
            <summary>
            The sdl hint windows force semaphore kernel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED">
            <summary>
            The sdl hint joystick hidapi ps5 player led
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOWS_USE_D3D9EX">
            <summary>
            The sdl hint windows use d3d9ex
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS">
            <summary>
            The sdl hint joystick hidapi joy cons
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_STADIA">
            <summary>
            The sdl hint joystick hidapi stadia
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED">
            <summary>
            The sdl hint joystick hidapi switch home led
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED">
            <summary>
            The sdl hint allow alt tab while grabbed
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER">
            <summary>
            The sdl hint kmsdrm require drm master
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUDIO_DEVICE_STREAM_ROLE">
            <summary>
            The sdl hint audio device stream role
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT">
            <summary>
            The sdl hint x11 force override redirect
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_HIDAPI_LUNA">
            <summary>
            The sdl hint joystick hidapi luna
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT">
            <summary>
            The sdl hint joystick rawinput correlate xinput
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_AUDIO_INCLUDE_MONITORS">
            <summary>
            The sdl hint audio include monitors
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR">
            <summary>
            The sdl hint video wayland allow libdecor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_VIDEO_EGL_ALLOW_TRANSPARENCY">
            <summary>
            The sdl hint video egl allow transparency
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_APP_NAME">
            <summary>
            The sdl hint app name
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME">
            <summary>
            The sdl hint screensaver inhibit activity name
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_IME_SHOW_UI">
            <summary>
            The sdl hint ime show ui
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_WINDOW_NO_ACTIVATION_WHEN_SHOWN">
            <summary>
            The sdl hint window no activation when shown
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_POLL_SENTINEL">
            <summary>
            The sdl hint poll sentinel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_JOYSTICK_DEVICE">
            <summary>
            The sdl hint joystick device
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HINT_LINUX_JOYSTICK_CLASSIC">
            <summary>
            The sdl hint linux joystick classic
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HintPriority">
            <summary>
            The sdl hintpriority enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HintPriority.SDL_HINT_DEFAULT">
            <summary>
            The sdl hint default sdl hintpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HintPriority.SDL_HINT_NORMAL">
            <summary>
            The sdl hint normal sdl hintpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HintPriority.SDL_HINT_OVERRIDE">
            <summary>
            The sdl hint override sdl hintpriority
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_ClearHints">
            <summary>
            Sdls the clear hints
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetHint(System.Byte*)">
            <summary>
            Internals the sdl get hint using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetHint(System.String)">
            <summary>
            Sdls the get hint using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SetHint(System.Byte*,System.Byte*)">
            <summary>
            Internals the sdl set hint using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetHint(System.String,System.String)">
            <summary>
            Sdls the set hint using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SetHintWithPriority(System.Byte*,System.Byte*,SDL2.SDL.SDL_HintPriority)">
            <summary>
            Internals the sdl set hint with priority using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="priority">The priority</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetHintWithPriority(System.String,System.String,SDL2.SDL.SDL_HintPriority)">
            <summary>
            Sdls the set hint with priority using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="priority">The priority</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetHintBoolean(System.Byte*,SDL2.SDL.SDL_bool)">
            <summary>
            Internals the sdl get hint boolean using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="default_value">The default value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetHintBoolean(System.String,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the get hint boolean using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="default_value">The default value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ClearError">
            <summary>
            Sdls the clear error
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetError">
            <summary>
            Internals the sdl get error
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetError">
            <summary>
            Sdls the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SetError(System.Byte*)">
            <summary>
            Internals the sdl set error using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetError(System.String)">
            <summary>
            Sdls the set error using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetErrorMsg(System.IntPtr,System.Int32)">
            <summary>
            Sdls the get error msg using the specified errstr
            </summary>
            <param name="errstr">The errstr</param>
            <param name="maxlength">The maxlength</param>
            <returns>The int ptr</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_LogCategory">
            <summary>
            The sdl logcategory enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_APPLICATION">
            <summary>
            The sdl log category application sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_ERROR">
            <summary>
            The sdl log category error sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_ASSERT">
            <summary>
            The sdl log category assert sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_SYSTEM">
            <summary>
            The sdl log category system sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_AUDIO">
            <summary>
            The sdl log category audio sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_VIDEO">
            <summary>
            The sdl log category video sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RENDER">
            <summary>
            The sdl log category render sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_INPUT">
            <summary>
            The sdl log category input sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_TEST">
            <summary>
            The sdl log category test sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED1">
            <summary>
            The sdl log category reserved1 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED2">
            <summary>
            The sdl log category reserved2 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED3">
            <summary>
            The sdl log category reserved3 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED4">
            <summary>
            The sdl log category reserved4 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED5">
            <summary>
            The sdl log category reserved5 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED6">
            <summary>
            The sdl log category reserved6 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED7">
            <summary>
            The sdl log category reserved7 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED8">
            <summary>
            The sdl log category reserved8 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED9">
            <summary>
            The sdl log category reserved9 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_RESERVED10">
            <summary>
            The sdl log category reserved10 sdl logcategory
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogCategory.SDL_LOG_CATEGORY_CUSTOM">
            <summary>
            The sdl log category custom sdl logcategory
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_LogPriority">
            <summary>
            The sdl logpriority enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_LOG_PRIORITY_VERBOSE">
            <summary>
            The sdl log priority verbose sdl logpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_LOG_PRIORITY_DEBUG">
            <summary>
            The sdl log priority debug sdl logpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_LOG_PRIORITY_INFO">
            <summary>
            The sdl log priority info sdl logpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_LOG_PRIORITY_WARN">
            <summary>
            The sdl log priority warn sdl logpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_LOG_PRIORITY_ERROR">
            <summary>
            The sdl log priority error sdl logpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_LOG_PRIORITY_CRITICAL">
            <summary>
            The sdl log priority critical sdl logpriority
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_LogPriority.SDL_NUM_LOG_PRIORITIES">
            <summary>
            The sdl num log priorities sdl logpriority
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_LogOutputFunction">
            <summary>
            The sdl logoutputfunction
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_Log(System.Byte*)">
            <summary>
            Internals the sdl log using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_Log(System.String)">
            <summary>
            Sdls the log using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogVerbose(System.Int32,System.Byte*)">
            <summary>
            Internals the sdl log verbose using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogVerbose(System.Int32,System.String)">
            <summary>
            Sdls the log verbose using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogDebug(System.Int32,System.Byte*)">
            <summary>
            Internals the sdl log debug using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogDebug(System.Int32,System.String)">
            <summary>
            Sdls the log debug using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogInfo(System.Int32,System.Byte*)">
            <summary>
            Internals the sdl log info using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogInfo(System.Int32,System.String)">
            <summary>
            Sdls the log info using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogWarn(System.Int32,System.Byte*)">
            <summary>
            Internals the sdl log warn using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogWarn(System.Int32,System.String)">
            <summary>
            Sdls the log warn using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogError(System.Int32,System.Byte*)">
            <summary>
            Internals the sdl log error using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogError(System.Int32,System.String)">
            <summary>
            Sdls the log error using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogCritical(System.Int32,System.Byte*)">
            <summary>
            Internals the sdl log critical using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogCritical(System.Int32,System.String)">
            <summary>
            Sdls the log critical using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogMessage(System.Int32,SDL2.SDL.SDL_LogPriority,System.Byte*)">
            <summary>
            Internals the sdl log message using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogMessage(System.Int32,SDL2.SDL.SDL_LogPriority,System.String)">
            <summary>
            Sdls the log message using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LogMessageV(System.Int32,SDL2.SDL.SDL_LogPriority,System.Byte*)">
            <summary>
            Internals the sdl log message v using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogMessageV(System.Int32,SDL2.SDL.SDL_LogPriority,System.String)">
            <summary>
            Sdls the log message v using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogGetPriority(System.Int32)">
            <summary>
            Sdls the log get priority using the specified category
            </summary>
            <param name="category">The category</param>
            <returns>The sdl log priority</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LogSetPriority(System.Int32,SDL2.SDL.SDL_LogPriority)">
            <summary>
            Sdls the log set priority using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogSetAllPriority(SDL2.SDL.SDL_LogPriority)">
            <summary>
            Sdls the log set all priority using the specified priority
            </summary>
            <param name="priority">The priority</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogResetPriorities">
            <summary>
            Sdls the log reset priorities
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_LogGetOutputFunction(System.IntPtr@,System.IntPtr@)">
            <summary>
            Sdls the log get output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogGetOutputFunction(SDL2.SDL.SDL_LogOutputFunction@,System.IntPtr@)">
            <summary>
            Sdls the log get output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:SDL2.SDL.SDL_LogSetOutputFunction(SDL2.SDL.SDL_LogOutputFunction,System.IntPtr)">
            <summary>
            Sdls the log set output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxFlags">
            <summary>
            The sdl messageboxflags enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxFlags.SDL_MESSAGEBOX_ERROR">
            <summary>
            The sdl messagebox error sdl messageboxflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxFlags.SDL_MESSAGEBOX_WARNING">
            <summary>
            The sdl messagebox warning sdl messageboxflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxFlags.SDL_MESSAGEBOX_INFORMATION">
            <summary>
            The sdl messagebox information sdl messageboxflags
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxButtonFlags">
            <summary>
            The sdl messageboxbuttonflags enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxButtonFlags.SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT">
            <summary>
            The sdl messagebox button returnkey default sdl messageboxbuttonflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxButtonFlags.SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT">
            <summary>
            The sdl messagebox button escapekey default sdl messageboxbuttonflags
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_SDL_MessageBoxButtonData">
            <summary>
            The internal sdl messageboxbuttondata
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxButtonData.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxButtonData.buttonid">
            <summary>
            The buttonid
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxButtonData.text">
            <summary>
            The text
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxButtonData">
            <summary>
            The sdl messageboxbuttondata
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxButtonData.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxButtonData.buttonid">
            <summary>
            The buttonid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxButtonData.text">
            <summary>
            The text
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxColor">
            <summary>
            The sdl messageboxcolor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColor.r">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColor.g">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColor.b">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxColorType">
            <summary>
            The sdl messageboxcolortype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorType.SDL_MESSAGEBOX_COLOR_BACKGROUND">
            <summary>
            The sdl messagebox color background sdl messageboxcolortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorType.SDL_MESSAGEBOX_COLOR_TEXT">
            <summary>
            The sdl messagebox color text sdl messageboxcolortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorType.SDL_MESSAGEBOX_COLOR_BUTTON_BORDER">
            <summary>
            The sdl messagebox color button border sdl messageboxcolortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorType.SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND">
            <summary>
            The sdl messagebox color button background sdl messageboxcolortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorType.SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED">
            <summary>
            The sdl messagebox color button selected sdl messageboxcolortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorType.SDL_MESSAGEBOX_COLOR_MAX">
            <summary>
            The sdl messagebox color max sdl messageboxcolortype
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxColorScheme">
            <summary>
            The sdl messageboxcolorscheme
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxColorScheme.colors">
            <summary>
            The colors
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_SDL_MessageBoxData">
            <summary>
            The internal sdl messageboxdata
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.message">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.numbuttons">
            <summary>
            The numbuttons
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.buttons">
            <summary>
            The buttons
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_MessageBoxData.colorScheme">
            <summary>
            The color scheme
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MessageBoxData">
            <summary>
            The sdl messageboxdata
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.message">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.numbuttons">
            <summary>
            The numbuttons
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.buttons">
            <summary>
            The buttons
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MessageBoxData.colorScheme">
            <summary>
            The color scheme
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_ShowMessageBox(SDL2.SDL.INTERNAL_SDL_MessageBoxData@,System.Int32@)">
            <summary>
            Internals the sdl show message box using the specified messageboxdata
            </summary>
            <param name="messageboxdata">The messageboxdata</param>
            <param name="buttonid">The buttonid</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_AllocUTF8(System.String)">
            <summary>
            Internals the alloc utf 8 using the specified str
            </summary>
            <param name="str">The str</param>
            <returns>The mem</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ShowMessageBox(SDL2.SDL.SDL_MessageBoxData@,System.Int32@)">
            <summary>
            Sdls the show message box using the specified messageboxdata
            </summary>
            <param name="messageboxdata">The messageboxdata</param>
            <param name="buttonid">The buttonid</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_ShowSimpleMessageBox(SDL2.SDL.SDL_MessageBoxFlags,System.Byte*,System.Byte*,System.IntPtr)">
            <summary>
            Internals the sdl show simple message box using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="title">The title</param>
            <param name="message">The message</param>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ShowSimpleMessageBox(SDL2.SDL.SDL_MessageBoxFlags,System.String,System.String,System.IntPtr)">
            <summary>
            Sdls the show simple message box using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="title">The title</param>
            <param name="message">The message</param>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_MAJOR_VERSION">
            <summary>
            The sdl major version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MINOR_VERSION">
            <summary>
            The sdl minor version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PATCHLEVEL">
            <summary>
            The sdl patchlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_COMPILEDVERSION">
            <summary>
            The sdl patchlevel
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_version">
            <summary>
            The sdl version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_version.major">
            <summary>
            The major
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_version.minor">
            <summary>
            The minor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_version.patch">
            <summary>
            The patch
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_VERSION(SDL2.SDL.SDL_version@)">
            <summary>
            Sdls the version using the specified x
            </summary>
            <param name="x">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_VERSIONNUM(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sdls the versionnum using the specified x
            </summary>
            <param name="X">The </param>
            <param name="Y">The </param>
            <param name="Z">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_VERSION_ATLEAST(System.Int32,System.Int32,System.Int32)">
            <summary>
            Describes whether sdl version atleast
            </summary>
            <param name="X">The </param>
            <param name="Y">The </param>
            <param name="Z">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetVersion(SDL2.SDL.SDL_version@)">
            <summary>
            Sdls the get version using the specified ver
            </summary>
            <param name="ver">The ver</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetRevision">
            <summary>
            Internals the sdl get revision
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRevision">
            <summary>
            Sdls the get revision
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRevisionNumber">
            <summary>
            Sdls the get revision number
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_GLattr">
            <summary>
            The sdl glattr enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_RED_SIZE">
            <summary>
            The sdl gl red size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_GREEN_SIZE">
            <summary>
            The sdl gl green size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_BLUE_SIZE">
            <summary>
            The sdl gl blue size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_ALPHA_SIZE">
            <summary>
            The sdl gl alpha size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_BUFFER_SIZE">
            <summary>
            The sdl gl buffer size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_DOUBLEBUFFER">
            <summary>
            The sdl gl doublebuffer sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_DEPTH_SIZE">
            <summary>
            The sdl gl depth size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_STENCIL_SIZE">
            <summary>
            The sdl gl stencil size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_ACCUM_RED_SIZE">
            <summary>
            The sdl gl accum red size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_ACCUM_GREEN_SIZE">
            <summary>
            The sdl gl accum green size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_ACCUM_BLUE_SIZE">
            <summary>
            The sdl gl accum blue size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_ACCUM_ALPHA_SIZE">
            <summary>
            The sdl gl accum alpha size sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_STEREO">
            <summary>
            The sdl gl stereo sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_MULTISAMPLEBUFFERS">
            <summary>
            The sdl gl multisamplebuffers sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_MULTISAMPLESAMPLES">
            <summary>
            The sdl gl multisamplesamples sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_ACCELERATED_VISUAL">
            <summary>
            The sdl gl accelerated visual sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_RETAINED_BACKING">
            <summary>
            The sdl gl retained backing sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_MAJOR_VERSION">
            <summary>
            The sdl gl context major version sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_MINOR_VERSION">
            <summary>
            The sdl gl context minor version sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_EGL">
            <summary>
            The sdl gl context egl sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_FLAGS">
            <summary>
            The sdl gl context flags sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_PROFILE_MASK">
            <summary>
            The sdl gl context profile mask sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_SHARE_WITH_CURRENT_CONTEXT">
            <summary>
            The sdl gl share with current context sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_FRAMEBUFFER_SRGB_CAPABLE">
            <summary>
            The sdl gl framebuffer srgb capable sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_RELEASE_BEHAVIOR">
            <summary>
            The sdl gl context release behavior sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_RESET_NOTIFICATION">
            <summary>
            The sdl gl context reset notification sdl glattr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLattr.SDL_GL_CONTEXT_NO_ERROR">
            <summary>
            The sdl gl context no error sdl glattr
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GLprofile">
            <summary>
            The sdl glprofile enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLprofile.SDL_GL_CONTEXT_PROFILE_CORE">
            <summary>
            The sdl gl context profile core sdl glprofile
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLprofile.SDL_GL_CONTEXT_PROFILE_COMPATIBILITY">
            <summary>
            The sdl gl context profile compatibility sdl glprofile
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLprofile.SDL_GL_CONTEXT_PROFILE_ES">
            <summary>
            The sdl gl context profile es sdl glprofile
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GLcontext">
            <summary>
            The sdl glcontext enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLcontext.SDL_GL_CONTEXT_DEBUG_FLAG">
            <summary>
            The sdl gl context debug flag sdl glcontext
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLcontext.SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG">
            <summary>
            The sdl gl context forward compatible flag sdl glcontext
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLcontext.SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG">
            <summary>
            The sdl gl context robust access flag sdl glcontext
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GLcontext.SDL_GL_CONTEXT_RESET_ISOLATION_FLAG">
            <summary>
            The sdl gl context reset isolation flag sdl glcontext
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_WindowEventID">
            <summary>
            The sdl windoweventid enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_NONE">
            <summary>
            The sdl windowevent none sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_SHOWN">
            <summary>
            The sdl windowevent shown sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_HIDDEN">
            <summary>
            The sdl windowevent hidden sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_EXPOSED">
            <summary>
            The sdl windowevent exposed sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_MOVED">
            <summary>
            The sdl windowevent moved sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_RESIZED">
            <summary>
            The sdl windowevent resized sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_SIZE_CHANGED">
            <summary>
            The sdl windowevent size changed sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_MINIMIZED">
            <summary>
            The sdl windowevent minimized sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_MAXIMIZED">
            <summary>
            The sdl windowevent maximized sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_RESTORED">
            <summary>
            The sdl windowevent restored sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_ENTER">
            <summary>
            The sdl windowevent enter sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_LEAVE">
            <summary>
            The sdl windowevent leave sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_FOCUS_GAINED">
            <summary>
            The sdl windowevent focus gained sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_FOCUS_LOST">
            <summary>
            The sdl windowevent focus lost sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_CLOSE">
            <summary>
            The sdl windowevent close sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_TAKE_FOCUS">
            <summary>
            The sdl windowevent take focus sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_HIT_TEST">
            <summary>
            The sdl windowevent hit test sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_ICCPROF_CHANGED">
            <summary>
            The sdl windowevent iccprof changed sdl windoweventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEventID.SDL_WINDOWEVENT_DISPLAY_CHANGED">
            <summary>
            The sdl windowevent display changed sdl windoweventid
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_DisplayEventID">
            <summary>
            The sdl displayeventid enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEventID.SDL_DISPLAYEVENT_NONE">
            <summary>
            The sdl displayevent none sdl displayeventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEventID.SDL_DISPLAYEVENT_ORIENTATION">
            <summary>
            The sdl displayevent orientation sdl displayeventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEventID.SDL_DISPLAYEVENT_CONNECTED">
            <summary>
            The sdl displayevent connected sdl displayeventid
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEventID.SDL_DISPLAYEVENT_DISCONNECTED">
            <summary>
            The sdl displayevent disconnected sdl displayeventid
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_DisplayOrientation">
            <summary>
            The sdl displayorientation enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayOrientation.SDL_ORIENTATION_UNKNOWN">
            <summary>
            The sdl orientation unknown sdl displayorientation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayOrientation.SDL_ORIENTATION_LANDSCAPE">
            <summary>
            The sdl orientation landscape sdl displayorientation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayOrientation.SDL_ORIENTATION_LANDSCAPE_FLIPPED">
            <summary>
            The sdl orientation landscape flipped sdl displayorientation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayOrientation.SDL_ORIENTATION_PORTRAIT">
            <summary>
            The sdl orientation portrait sdl displayorientation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayOrientation.SDL_ORIENTATION_PORTRAIT_FLIPPED">
            <summary>
            The sdl orientation portrait flipped sdl displayorientation
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_FlashOperation">
            <summary>
            The sdl flashoperation enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FlashOperation.SDL_FLASH_CANCEL">
            <summary>
            The sdl flash cancel sdl flashoperation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FlashOperation.SDL_FLASH_BRIEFLY">
            <summary>
            The sdl flash briefly sdl flashoperation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FlashOperation.SDL_FLASH_UNTIL_FOCUSED">
            <summary>
            The sdl flash until focused sdl flashoperation
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_WindowFlags">
            <summary>
            The sdl windowflags enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_FULLSCREEN">
            <summary>
            The sdl window fullscreen sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_OPENGL">
            <summary>
            The sdl window opengl sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_SHOWN">
            <summary>
            The sdl window shown sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_HIDDEN">
            <summary>
            The sdl window hidden sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_BORDERLESS">
            <summary>
            The sdl window borderless sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_RESIZABLE">
            <summary>
            The sdl window resizable sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_MINIMIZED">
            <summary>
            The sdl window minimized sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_MAXIMIZED">
            <summary>
            The sdl window maximized sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_MOUSE_GRABBED">
            <summary>
            The sdl window mouse grabbed sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_INPUT_FOCUS">
            <summary>
            The sdl window input focus sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_MOUSE_FOCUS">
            <summary>
            The sdl window mouse focus sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_FULLSCREEN_DESKTOP">
            <summary>
            The sdl window fullscreen desktop sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_FOREIGN">
            <summary>
            The sdl window foreign sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_ALLOW_HIGHDPI">
            <summary>
            The sdl window allow highdpi sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_MOUSE_CAPTURE">
            <summary>
            The sdl window mouse capture sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_ALWAYS_ON_TOP">
            <summary>
            The sdl window always on top sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_SKIP_TASKBAR">
            <summary>
            The sdl window skip taskbar sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_UTILITY">
            <summary>
            The sdl window utility sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_TOOLTIP">
            <summary>
            The sdl window tooltip sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_POPUP_MENU">
            <summary>
            The sdl window popup menu sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_KEYBOARD_GRABBED">
            <summary>
            The sdl window keyboard grabbed sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_VULKAN">
            <summary>
            The sdl window vulkan sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_METAL">
            <summary>
            The sdl window metal sdl windowflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowFlags.SDL_WINDOW_INPUT_GRABBED">
            <summary>
            The sdl window input grabbed sdl windowflags
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HitTestResult">
            <summary>
            The sdl hittestresult enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_NORMAL">
            <summary>
            The sdl hittest normal sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_DRAGGABLE">
            <summary>
            The sdl hittest draggable sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_TOPLEFT">
            <summary>
            The sdl hittest resize topleft sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_TOP">
            <summary>
            The sdl hittest resize top sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_TOPRIGHT">
            <summary>
            The sdl hittest resize topright sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_RIGHT">
            <summary>
            The sdl hittest resize right sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_BOTTOMRIGHT">
            <summary>
            The sdl hittest resize bottomright sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_BOTTOM">
            <summary>
            The sdl hittest resize bottom sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_BOTTOMLEFT">
            <summary>
            The sdl hittest resize bottomleft sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HitTestResult.SDL_HITTEST_RESIZE_LEFT">
            <summary>
            The sdl hittest resize left sdl hittestresult
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WINDOWPOS_UNDEFINED_MASK">
            <summary>
            The sdl windowpos undefined mask
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WINDOWPOS_CENTERED_MASK">
            <summary>
            The sdl windowpos centered mask
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WINDOWPOS_UNDEFINED">
            <summary>
            The sdl windowpos undefined
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WINDOWPOS_CENTERED">
            <summary>
            The sdl windowpos centered
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_WINDOWPOS_UNDEFINED_DISPLAY(System.Int32)">
            <summary>
            Sdls the windowpos undefined display using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WINDOWPOS_ISUNDEFINED(System.Int32)">
            <summary>
            Describes whether sdl windowpos isundefined
            </summary>
            <param name="X">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WINDOWPOS_CENTERED_DISPLAY(System.Int32)">
            <summary>
            Sdls the windowpos centered display using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WINDOWPOS_ISCENTERED(System.Int32)">
            <summary>
            Describes whether sdl windowpos iscentered
            </summary>
            <param name="X">The </param>
            <returns>The bool</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_DisplayMode">
            <summary>
            The sdl displaymode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayMode.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayMode.w">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayMode.h">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayMode.refresh_rate">
            <summary>
            The refresh rate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayMode.driverdata">
            <summary>
            The driverdata
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HitTest">
            <summary>
            The sdl hittest
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_CreateWindow(System.Byte*,System.Int32,System.Int32,System.Int32,System.Int32,SDL2.SDL.SDL_WindowFlags)">
            <summary>
            Internals the sdl create window using the specified title
            </summary>
            <param name="title">The title</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateWindow(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SDL2.SDL.SDL_WindowFlags)">
            <summary>
            Sdls the create window using the specified title
            </summary>
            <param name="title">The title</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateWindowAndRenderer(System.Int32,System.Int32,SDL2.SDL.SDL_WindowFlags,System.IntPtr@,System.IntPtr@)">
            <summary>
            Sdls the create window and renderer using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="window_flags">The window flags</param>
            <param name="window">The window</param>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateWindowFrom(System.IntPtr)">
            <summary>
            Sdls the create window from using the specified data
            </summary>
            <param name="data">The data</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_DestroyWindow(System.IntPtr)">
            <summary>
            Sdls the destroy window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_DisableScreenSaver">
            <summary>
            Sdls the disable screen saver
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_EnableScreenSaver">
            <summary>
            Sdls the enable screen saver
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetClosestDisplayMode(System.Int32,SDL2.SDL.SDL_DisplayMode@,SDL2.SDL.SDL_DisplayMode@)">
            <summary>
            Sdls the get closest display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <param name="closest">The closest</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetCurrentDisplayMode(System.Int32,SDL2.SDL.SDL_DisplayMode@)">
            <summary>
            Sdls the get current display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetCurrentVideoDriver">
            <summary>
            Internals the sdl get current video driver
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetCurrentVideoDriver">
            <summary>
            Sdls the get current video driver
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDesktopDisplayMode(System.Int32,SDL2.SDL.SDL_DisplayMode@)">
            <summary>
            Sdls the get desktop display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetDisplayName(System.Int32)">
            <summary>
            Internals the sdl get display name using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDisplayName(System.Int32)">
            <summary>
            Sdls the get display name using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDisplayBounds(System.Int32,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the get display bounds using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDisplayDPI(System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            Sdls the get display dpi using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="ddpi">The ddpi</param>
            <param name="hdpi">The hdpi</param>
            <param name="vdpi">The vdpi</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDisplayOrientation(System.Int32)">
            <summary>
            Sdls the get display orientation using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <returns>The sdl display orientation</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDisplayMode(System.Int32,System.Int32,SDL2.SDL.SDL_DisplayMode@)">
            <summary>
            Sdls the get display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="modeIndex">The mode index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetDisplayUsableBounds(System.Int32,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the get display usable bounds using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumDisplayModes(System.Int32)">
            <summary>
            Sdls the get num display modes using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumVideoDisplays">
            <summary>
            Sdls the get num video displays
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumVideoDrivers">
            <summary>
            Sdls the get num video drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetVideoDriver(System.Int32)">
            <summary>
            Internals the sdl get video driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetVideoDriver(System.Int32)">
            <summary>
            Sdls the get video driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowBrightness(System.IntPtr)">
            <summary>
            Sdls the get window brightness using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The float</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowOpacity(System.IntPtr,System.Single)">
            <summary>
            Sdls the set window opacity using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="opacity">The opacity</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowOpacity(System.IntPtr,System.Single@)">
            <summary>
            Sdls the get window opacity using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="out_opacity">The out opacity</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowModalFor(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set window modal for using the specified modal window
            </summary>
            <param name="modal_window">The modal window</param>
            <param name="parent_window">The parent window</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowInputFocus(System.IntPtr)">
            <summary>
            Sdls the set window input focus using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetWindowData(System.IntPtr,System.Byte*)">
            <summary>
            Internals the sdl get window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowData(System.IntPtr,System.String)">
            <summary>
            Sdls the get window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowDisplayIndex(System.IntPtr)">
            <summary>
            Sdls the get window display index using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowDisplayMode(System.IntPtr,SDL2.SDL.SDL_DisplayMode@)">
            <summary>
            Sdls the get window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowICCProfile(System.IntPtr,System.IntPtr@)">
            <summary>
            Sdls the get window icc profile using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowFlags(System.IntPtr)">
            <summary>
            Sdls the get window flags using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowFromID(System.UInt32)">
            <summary>
            Sdls the get window from id using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])">
            <summary>
            Sdls the get window gamma ramp using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowGrab(System.IntPtr)">
            <summary>
            Sdls the get window grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowKeyboardGrab(System.IntPtr)">
            <summary>
            Sdls the get window keyboard grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowMouseGrab(System.IntPtr)">
            <summary>
            Sdls the get window mouse grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowID(System.IntPtr)">
            <summary>
            Sdls the get window id using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowPixelFormat(System.IntPtr)">
            <summary>
            Sdls the get window pixel format using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the get window maximum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="max_w">The max</param>
            <param name="max_h">The max</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the get window minimum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="min_w">The min</param>
            <param name="min_h">The min</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the get window position using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the get window size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowSurface(System.IntPtr)">
            <summary>
            Sdls the get window surface using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetWindowTitle(System.IntPtr)">
            <summary>
            Internals the sdl get window title using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowTitle(System.IntPtr)">
            <summary>
            Sdls the get window title using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_BindTexture(System.IntPtr,System.Single@,System.Single@)">
            <summary>
            Sdls the gl bind texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="texw">The texw</param>
            <param name="texh">The texh</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_CreateContext(System.IntPtr)">
            <summary>
            Sdls the gl create context using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_DeleteContext(System.IntPtr)">
            <summary>
            Sdls the gl delete context using the specified context
            </summary>
            <param name="context">The context</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GL_LoadLibrary(System.Byte*)">
            <summary>
            Internals the sdl gl load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_LoadLibrary(System.String)">
            <summary>
            Sdls the gl load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetProcAddress(System.IntPtr)">
            <summary>
            Sdls the gl get proc address using the specified proc
            </summary>
            <param name="proc">The proc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetProcAddress(System.String)">
            <summary>
            Sdls the gl get proc address using the specified proc
            </summary>
            <param name="proc">The proc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_UnloadLibrary">
            <summary>
            Sdls the gl unload library
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GL_ExtensionSupported(System.Byte*)">
            <summary>
            Internals the sdl gl extension supported using the specified extension
            </summary>
            <param name="extension">The extension</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_ExtensionSupported(System.String)">
            <summary>
            Sdls the gl extension supported using the specified extension
            </summary>
            <param name="extension">The extension</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_ResetAttributes">
            <summary>
            Sdls the gl reset attributes
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetAttribute(SDL2.SDL.SDL_GLattr,System.Int32@)">
            <summary>
            Sdls the gl get attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetSwapInterval">
            <summary>
            Sdls the gl get swap interval
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_MakeCurrent(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the gl make current using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="context">The context</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetCurrentWindow">
            <summary>
            Sdls the gl get current window
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetCurrentContext">
            <summary>
            Sdls the gl get current context
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_GetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the gl get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_SetAttribute(SDL2.SDL.SDL_GLattr,System.Int32)">
            <summary>
            Sdls the gl set attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_SetAttribute(SDL2.SDL.SDL_GLattr,SDL2.SDL.SDL_GLprofile)">
            <summary>
            Sdls the gl set attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="profile">The profile</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_SetSwapInterval(System.Int32)">
            <summary>
            Sdls the gl set swap interval using the specified interval
            </summary>
            <param name="interval">The interval</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_SwapWindow(System.IntPtr)">
            <summary>
            Sdls the gl swap window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GL_UnbindTexture(System.IntPtr)">
            <summary>
            Sdls the gl unbind texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HideWindow(System.IntPtr)">
            <summary>
            Sdls the hide window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_IsScreenSaverEnabled">
            <summary>
            Sdls the is screen saver enabled
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_MaximizeWindow(System.IntPtr)">
            <summary>
            Sdls the maximize window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_MinimizeWindow(System.IntPtr)">
            <summary>
            Sdls the minimize window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RaiseWindow(System.IntPtr)">
            <summary>
            Sdls the raise window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RestoreWindow(System.IntPtr)">
            <summary>
            Sdls the restore window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowBrightness(System.IntPtr,System.Single)">
            <summary>
            Sdls the set window brightness using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="brightness">The brightness</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SetWindowData(System.IntPtr,System.Byte*,System.IntPtr)">
            <summary>
            Internals the sdl set window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <param name="userdata">The userdata</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowData(System.IntPtr,System.String,System.IntPtr)">
            <summary>
            Sdls the set window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <param name="userdata">The userdata</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowDisplayMode(System.IntPtr,SDL2.SDL.SDL_DisplayMode@)">
            <summary>
            Sdls the set window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowDisplayMode(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowFullscreen(System.IntPtr,System.UInt32)">
            <summary>
            Sdls the set window fullscreen using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])">
            <summary>
            Sdls the set window gamma ramp using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowGrab(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set window grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowKeyboardGrab(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set window keyboard grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowMouseGrab(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set window mouse grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowIcon(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set window icon using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="icon">The icon</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the set window maximum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="max_w">The max</param>
            <param name="max_h">The max</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the set window minimum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="min_w">The min</param>
            <param name="min_h">The min</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowPosition(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the set window position using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the set window size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowBordered(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set window bordered using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="bordered">The bordered</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Sdls the get window borders size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="top">The top</param>
            <param name="left">The left</param>
            <param name="bottom">The bottom</param>
            <param name="right">The right</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowResizable(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set window resizable using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="resizable">The resizable</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowAlwaysOnTop(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set window always on top using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="on_top">The on top</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SetWindowTitle(System.IntPtr,System.Byte*)">
            <summary>
            Internals the sdl set window title using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="title">The title</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowTitle(System.IntPtr,System.String)">
            <summary>
            Sdls the set window title using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="title">The title</param>
        </member>
        <member name="M:SDL2.SDL.SDL_ShowWindow(System.IntPtr)">
            <summary>
            Sdls the show window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_UpdateWindowSurface(System.IntPtr)">
            <summary>
            Sdls the update window surface using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UpdateWindowSurfaceRects(System.IntPtr,SDL2.SDL.SDL_Rect[],System.Int32)">
            <summary>
            Sdls the update window surface rects using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rects">The rects</param>
            <param name="numrects">The numrects</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_VideoInit(System.Byte*)">
            <summary>
            Internals the sdl video init using the specified driver name
            </summary>
            <param name="driver_name">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_VideoInit(System.String)">
            <summary>
            Sdls the video init using the specified driver name
            </summary>
            <param name="driver_name">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_VideoQuit">
            <summary>
            Sdls the video quit
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowHitTest(System.IntPtr,SDL2.SDL.SDL_HitTest,System.IntPtr)">
            <summary>
            Sdls the set window hit test using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="callback">The callback</param>
            <param name="callback_data">The callback data</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetGrabbedWindow">
            <summary>
            Sdls the get grabbed window
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowMouseRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the set window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowMouseRect(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowMouseRect(System.IntPtr)">
            <summary>
            Sdls the get window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FlashWindow(System.IntPtr,SDL2.SDL.SDL_FlashOperation)">
            <summary>
            Sdls the flash window using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="operation">The operation</param>
            <returns>The int</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_BlendMode">
            <summary>
            The sdl blendmode enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendMode.SDL_BLENDMODE_NONE">
            <summary>
            The sdl blendmode none sdl blendmode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendMode.SDL_BLENDMODE_BLEND">
            <summary>
            The sdl blendmode blend sdl blendmode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendMode.SDL_BLENDMODE_ADD">
            <summary>
            The sdl blendmode add sdl blendmode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendMode.SDL_BLENDMODE_MOD">
            <summary>
            The sdl blendmode mod sdl blendmode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendMode.SDL_BLENDMODE_MUL">
            <summary>
            The sdl blendmode mul sdl blendmode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendMode.SDL_BLENDMODE_INVALID">
            <summary>
            The sdl blendmode invalid sdl blendmode
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_BlendOperation">
            <summary>
            The sdl blendoperation enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendOperation.SDL_BLENDOPERATION_ADD">
            <summary>
            The sdl blendoperation add sdl blendoperation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendOperation.SDL_BLENDOPERATION_SUBTRACT">
            <summary>
            The sdl blendoperation subtract sdl blendoperation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendOperation.SDL_BLENDOPERATION_REV_SUBTRACT">
            <summary>
            The sdl blendoperation rev subtract sdl blendoperation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendOperation.SDL_BLENDOPERATION_MINIMUM">
            <summary>
            The sdl blendoperation minimum sdl blendoperation
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendOperation.SDL_BLENDOPERATION_MAXIMUM">
            <summary>
            The sdl blendoperation maximum sdl blendoperation
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_BlendFactor">
            <summary>
            The sdl blendfactor enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_ZERO">
            <summary>
            The sdl blendfactor zero sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_ONE">
            <summary>
            The sdl blendfactor one sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_SRC_COLOR">
            <summary>
            The sdl blendfactor src color sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR">
            <summary>
            The sdl blendfactor one minus src color sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_SRC_ALPHA">
            <summary>
            The sdl blendfactor src alpha sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA">
            <summary>
            The sdl blendfactor one minus src alpha sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_DST_COLOR">
            <summary>
            The sdl blendfactor dst color sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR">
            <summary>
            The sdl blendfactor one minus dst color sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_DST_ALPHA">
            <summary>
            The sdl blendfactor dst alpha sdl blendfactor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BlendFactor.SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA">
            <summary>
            The sdl blendfactor one minus dst alpha sdl blendfactor
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_ComposeCustomBlendMode(SDL2.SDL.SDL_BlendFactor,SDL2.SDL.SDL_BlendFactor,SDL2.SDL.SDL_BlendOperation,SDL2.SDL.SDL_BlendFactor,SDL2.SDL.SDL_BlendFactor,SDL2.SDL.SDL_BlendOperation)">
            <summary>
            Sdls the compose custom blend mode using the specified src color factor
            </summary>
            <param name="srcColorFactor">The src color factor</param>
            <param name="dstColorFactor">The dst color factor</param>
            <param name="colorOperation">The color operation</param>
            <param name="srcAlphaFactor">The src alpha factor</param>
            <param name="dstAlphaFactor">The dst alpha factor</param>
            <param name="alphaOperation">The alpha operation</param>
            <returns>The sdl blend mode</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_Vulkan_LoadLibrary(System.Byte*)">
            <summary>
            Internals the sdl vulkan load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_LoadLibrary(System.String)">
            <summary>
            Sdls the vulkan load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_GetVkGetInstanceProcAddr">
            <summary>
            Sdls the vulkan get vk get instance proc addr
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_UnloadLibrary">
            <summary>
            Sdls the vulkan unload library
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_GetInstanceExtensions(System.IntPtr,System.UInt32@,System.IntPtr)">
            <summary>
            Sdls the vulkan get instance extensions using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="pCount">The count</param>
            <param name="pNames">The names</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_GetInstanceExtensions(System.IntPtr,System.UInt32@,System.IntPtr[])">
            <summary>
            Sdls the vulkan get instance extensions using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="pCount">The count</param>
            <param name="pNames">The names</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_CreateSurface(System.IntPtr,System.IntPtr,System.UInt64@)">
            <summary>
            Sdls the vulkan create surface using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="instance">The instance</param>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Vulkan_GetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the vulkan get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_Metal_CreateView(System.IntPtr)">
            <summary>
            Sdls the metal create view using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Metal_DestroyView(System.IntPtr)">
            <summary>
            Sdls the metal destroy view using the specified view
            </summary>
            <param name="view">The view</param>
        </member>
        <member name="M:SDL2.SDL.SDL_Metal_GetLayer(System.IntPtr)">
            <summary>
            Sdls the metal get layer using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Metal_GetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the metal get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="T:SDL2.SDL.SDL_RendererFlags">
            <summary>
            The sdl rendererflags enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlags.SDL_RENDERER_SOFTWARE">
            <summary>
            The sdl renderer software sdl rendererflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlags.SDL_RENDERER_ACCELERATED">
            <summary>
            The sdl renderer accelerated sdl rendererflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlags.SDL_RENDERER_PRESENTVSYNC">
            <summary>
            The sdl renderer presentvsync sdl rendererflags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlags.SDL_RENDERER_TARGETTEXTURE">
            <summary>
            The sdl renderer targettexture sdl rendererflags
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_RendererFlip">
            <summary>
            The sdl rendererflip enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlip.SDL_FLIP_NONE">
            <summary>
            The sdl flip none sdl rendererflip
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlip.SDL_FLIP_HORIZONTAL">
            <summary>
            The sdl flip horizontal sdl rendererflip
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererFlip.SDL_FLIP_VERTICAL">
            <summary>
            The sdl flip vertical sdl rendererflip
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_TextureAccess">
            <summary>
            The sdl textureaccess enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextureAccess.SDL_TEXTUREACCESS_STATIC">
            <summary>
            The sdl textureaccess static sdl textureaccess
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextureAccess.SDL_TEXTUREACCESS_STREAMING">
            <summary>
            The sdl textureaccess streaming sdl textureaccess
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextureAccess.SDL_TEXTUREACCESS_TARGET">
            <summary>
            The sdl textureaccess target sdl textureaccess
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_TextureModulate">
            <summary>
            The sdl texturemodulate enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextureModulate.SDL_TEXTUREMODULATE_NONE">
            <summary>
            The sdl texturemodulate none sdl texturemodulate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextureModulate.SDL_TEXTUREMODULATE_HORIZONTAL">
            <summary>
            The sdl texturemodulate horizontal sdl texturemodulate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextureModulate.SDL_TEXTUREMODULATE_VERTICAL">
            <summary>
            The sdl texturemodulate vertical sdl texturemodulate
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_RendererInfo">
            <summary>
            The sdl rendererinfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererInfo.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererInfo.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererInfo.num_texture_formats">
            <summary>
            The num texture formats
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererInfo.texture_formats">
            <summary>
            The texture formats
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererInfo.max_texture_width">
            <summary>
            The max texture width
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RendererInfo.max_texture_height">
            <summary>
            The max texture height
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ScaleMode">
            <summary>
            The sdl scalemode enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ScaleMode.SDL_ScaleModeNearest">
            <summary>
            The sdl scalemodenearest sdl scalemode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ScaleMode.SDL_ScaleModeLinear">
            <summary>
            The sdl scalemodelinear sdl scalemode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ScaleMode.SDL_ScaleModeBest">
            <summary>
            The sdl scalemodebest sdl scalemode
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Vertex">
            <summary>
            The sdl vertex
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Vertex.position">
            <summary>
            The position
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Vertex.color">
            <summary>
            The color
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Vertex.tex_coord">
            <summary>
            The tex coord
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateRenderer(System.IntPtr,System.Int32,SDL2.SDL.SDL_RendererFlags)">
            <summary>
            Sdls the create renderer using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="index">The index</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateSoftwareRenderer(System.IntPtr)">
            <summary>
            Sdls the create software renderer using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateTexture(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sdls the create texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="format">The format</param>
            <param name="access">The access</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateTextureFromSurface(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the create texture from surface using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_DestroyRenderer(System.IntPtr)">
            <summary>
            Sdls the destroy renderer using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="M:SDL2.SDL.SDL_DestroyTexture(System.IntPtr)">
            <summary>
            Sdls the destroy texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumRenderDrivers">
            <summary>
            Sdls the get num render drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRenderDrawBlendMode(System.IntPtr,SDL2.SDL.SDL_BlendMode@)">
            <summary>
            Sdls the get render draw blend mode using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetTextureScaleMode(System.IntPtr,SDL2.SDL.SDL_ScaleMode)">
            <summary>
            Sdls the set texture scale mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="scaleMode">The scale mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTextureScaleMode(System.IntPtr,SDL2.SDL.SDL_ScaleMode@)">
            <summary>
            Sdls the get texture scale mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="scaleMode">The scale mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetTextureUserData(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set texture user data using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="userdata">The userdata</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTextureUserData(System.IntPtr)">
            <summary>
            Sdls the get texture user data using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Sdls the get render draw color using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRenderDriverInfo(System.Int32,SDL2.SDL.SDL_RendererInfo@)">
            <summary>
            Sdls the get render driver info using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="info">The info</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRenderer(System.IntPtr)">
            <summary>
            Sdls the get renderer using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRendererInfo(System.IntPtr,SDL2.SDL.SDL_RendererInfo@)">
            <summary>
            Sdls the get renderer info using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="info">The info</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRendererOutputSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the get renderer output size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTextureAlphaMod(System.IntPtr,System.Byte@)">
            <summary>
            Sdls the get texture alpha mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTextureBlendMode(System.IntPtr,SDL2.SDL.SDL_BlendMode@)">
            <summary>
            Sdls the get texture blend mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Sdls the get texture color mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockTexture(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr@,System.Int32@)">
            <summary>
            Sdls the lock texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)">
            <summary>
            Sdls the lock texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockTextureToSurface(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr@)">
            <summary>
            Sdls the lock texture to surface using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockTextureToSurface(System.IntPtr,System.IntPtr,System.IntPtr@)">
            <summary>
            Sdls the lock texture to surface using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_QueryTexture(System.IntPtr,System.UInt32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Sdls the query texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="format">The format</param>
            <param name="access">The access</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderClear(System.IntPtr)">
            <summary>
            Sdls the render clear using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopy(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopy(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr)">
            <summary>
            Sdls the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@,System.Double,SDL2.SDL.SDL_Point@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.Double,SDL2.SDL.SDL_Point@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Double,SDL2.SDL.SDL_Point@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,SDL2.SDL.SDL_Point@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawLine(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sdls the render draw line using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawLines(System.IntPtr,SDL2.SDL.SDL_Point[],System.Int32)">
            <summary>
            Sdls the render draw lines using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawPoint(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the render draw point using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawPoints(System.IntPtr,SDL2.SDL.SDL_Point[],System.Int32)">
            <summary>
            Sdls the render draw points using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render draw rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawRect(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render draw rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawRects(System.IntPtr,SDL2.SDL.SDL_Rect[],System.Int32)">
            <summary>
            Sdls the render draw rects using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFillRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render fill rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFillRect(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render fill rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFillRects(System.IntPtr,SDL2.SDL.SDL_Rect[],System.Int32)">
            <summary>
            Sdls the render fill rects using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyF(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_FRect@)">
            <summary>
            Sdls the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyF(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_FRect@)">
            <summary>
            Sdls the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyF(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr)">
            <summary>
            Sdls the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_FRect@,System.Double,SDL2.SDL.SDL_FPoint@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_FRect@,System.Double,SDL2.SDL.SDL_FPoint@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyExF(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Double,SDL2.SDL.SDL_FPoint@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyExF(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_FRect@,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,SDL2.SDL.SDL_FPoint@,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_FRect@,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyExF(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL.SDL_RendererFlip)">
            <summary>
            Sdls the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcrect">The srcrect</param>
            <param name="dstrect">The dstrect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGeometry(System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Vertex[],System.Int32,System.Int32[],System.Int32)">
            <summary>
            Sdls the render geometry using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="vertices">The vertices</param>
            <param name="num_vertices">The num vertices</param>
            <param name="indices">The indices</param>
            <param name="num_indices">The num indices</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGeometryRaw(System.IntPtr,System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the render geometry raw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="xy">The xy</param>
            <param name="xy_stride">The xy stride</param>
            <param name="color">The color</param>
            <param name="color_stride">The color stride</param>
            <param name="uv">The uv</param>
            <param name="uv_stride">The uv stride</param>
            <param name="num_vertices">The num vertices</param>
            <param name="indices">The indices</param>
            <param name="num_indices">The num indices</param>
            <param name="size_indices">The size indices</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawPointF(System.IntPtr,System.Single,System.Single)">
            <summary>
            Sdls the render draw point f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawPointsF(System.IntPtr,SDL2.SDL.SDL_FPoint[],System.Int32)">
            <summary>
            Sdls the render draw points f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawLineF(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sdls the render draw line f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawLinesF(System.IntPtr,SDL2.SDL.SDL_FPoint[],System.Int32)">
            <summary>
            Sdls the render draw lines f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawRectF(System.IntPtr,SDL2.SDL.SDL_FRect@)">
            <summary>
            Sdls the render draw rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawRectF(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render draw rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderDrawRectsF(System.IntPtr,SDL2.SDL.SDL_FRect[],System.Int32)">
            <summary>
            Sdls the render draw rects f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFillRectF(System.IntPtr,SDL2.SDL.SDL_FRect@)">
            <summary>
            Sdls the render fill rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFillRectF(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render fill rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFillRectsF(System.IntPtr,SDL2.SDL.SDL_FRect[],System.Int32)">
            <summary>
            Sdls the render fill rects f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetClipRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render get clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetLogicalSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            Sdls the render get logical size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetScale(System.IntPtr,System.Single@,System.Single@)">
            <summary>
            Sdls the render get scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderWindowToLogical(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            Sdls the render window to logical using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="windowX">The window</param>
            <param name="windowY">The window</param>
            <param name="logicalX">The logical</param>
            <param name="logicalY">The logical</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderLogicalToWindow(System.IntPtr,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Sdls the render logical to window using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="logicalX">The logical</param>
            <param name="logicalY">The logical</param>
            <param name="windowX">The window</param>
            <param name="windowY">The window</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetViewport(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render get viewport using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderPresent(System.IntPtr)">
            <summary>
            Sdls the render present using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderReadPixels(System.IntPtr,SDL2.SDL.SDL_Rect@,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
            Sdls the render read pixels using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <param name="format">The format</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetClipRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render set clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetClipRect(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the render set clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetLogicalSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the render set logical size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetScale(System.IntPtr,System.Single,System.Single)">
            <summary>
            Sdls the render set scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetIntegerScale(System.IntPtr,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the render set integer scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="enable">The enable</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetViewport(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the render set viewport using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetRenderDrawBlendMode(System.IntPtr,SDL2.SDL.SDL_BlendMode)">
            <summary>
            Sdls the set render draw blend mode using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the set render draw color using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetRenderTarget(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set render target using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetTextureAlphaMod(System.IntPtr,System.Byte)">
            <summary>
            Sdls the set texture alpha mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetTextureBlendMode(System.IntPtr,SDL2.SDL.SDL_BlendMode)">
            <summary>
            Sdls the set texture blend mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the set texture color mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UnlockTexture(System.IntPtr)">
            <summary>
            Sdls the unlock texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:SDL2.SDL.SDL_UpdateTexture(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Int32)">
            <summary>
            Sdls the update texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UpdateTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sdls the update texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UpdateYUVTexture(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Sdls the update yuv texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="yPlane">The plane</param>
            <param name="yPitch">The pitch</param>
            <param name="uPlane">The plane</param>
            <param name="uPitch">The pitch</param>
            <param name="vPlane">The plane</param>
            <param name="vPitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UpdateNVTexture(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Sdls the update nv texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="yPlane">The plane</param>
            <param name="yPitch">The pitch</param>
            <param name="uvPlane">The uv plane</param>
            <param name="uvPitch">The uv pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderTargetSupported(System.IntPtr)">
            <summary>
            Sdls the render target supported using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRenderTarget(System.IntPtr)">
            <summary>
            Sdls the get render target using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetMetalLayer(System.IntPtr)">
            <summary>
            Sdls the render get metal layer using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetMetalCommandEncoder(System.IntPtr)">
            <summary>
            Sdls the render get metal command encoder using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderSetVSync(System.IntPtr,System.Int32)">
            <summary>
            Sdls the render set v sync using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="vsync">The vsync</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderIsClipEnabled(System.IntPtr)">
            <summary>
            Sdls the render is clip enabled using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderFlush(System.IntPtr)">
            <summary>
            Sdls the render flush using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_DEFINE_PIXELFOURCC(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the define pixelfourcc using the specified a
            </summary>
            <param name="A">The </param>
            <param name="B">The </param>
            <param name="C">The </param>
            <param name="D">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_DEFINE_PIXELFORMAT(SDL2.SDL.SDL_PixelType,System.UInt32,SDL2.SDL.SDL_PackedLayout,System.Byte,System.Byte)">
            <summary>
            Sdls the define pixelformat using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="order">The order</param>
            <param name="layout">The layout</param>
            <param name="bits">The bits</param>
            <param name="bytes">The bytes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PIXELFLAG(System.UInt32)">
            <summary>
            Sdls the pixelflag using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PIXELTYPE(System.UInt32)">
            <summary>
            Sdls the pixeltype using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PIXELORDER(System.UInt32)">
            <summary>
            Sdls the pixelorder using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PIXELLAYOUT(System.UInt32)">
            <summary>
            Sdls the pixellayout using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BITSPERPIXEL(System.UInt32)">
            <summary>
            Sdls the bitsperpixel using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BYTESPERPIXEL(System.UInt32)">
            <summary>
            Sdls the bytesperpixel using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ISPIXELFORMAT_INDEXED(System.UInt32)">
            <summary>
            Describes whether sdl ispixelformat indexed
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ISPIXELFORMAT_PACKED(System.UInt32)">
            <summary>
            Describes whether sdl ispixelformat packed
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ISPIXELFORMAT_ARRAY(System.UInt32)">
            <summary>
            Describes whether sdl ispixelformat array
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ISPIXELFORMAT_ALPHA(System.UInt32)">
            <summary>
            Describes whether sdl ispixelformat alpha
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ISPIXELFORMAT_FOURCC(System.UInt32)">
            <summary>
            Describes whether sdl ispixelformat fourcc
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_PixelType">
            <summary>
            The sdl pixeltype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_UNKNOWN">
            <summary>
            The sdl pixeltype unknown sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_INDEX1">
            <summary>
            The sdl pixeltype index1 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_INDEX4">
            <summary>
            The sdl pixeltype index4 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_INDEX8">
            <summary>
            The sdl pixeltype index8 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_PACKED8">
            <summary>
            The sdl pixeltype packed8 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_PACKED16">
            <summary>
            The sdl pixeltype packed16 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_PACKED32">
            <summary>
            The sdl pixeltype packed32 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_ARRAYU8">
            <summary>
            The sdl pixeltype arrayu8 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_ARRAYU16">
            <summary>
            The sdl pixeltype arrayu16 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_ARRAYU32">
            <summary>
            The sdl pixeltype arrayu32 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_ARRAYF16">
            <summary>
            The sdl pixeltype arrayf16 sdl pixeltype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelType.SDL_PIXELTYPE_ARRAYF32">
            <summary>
            The sdl pixeltype arrayf32 sdl pixeltype
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_BitmapOrder">
            <summary>
            The sdl bitmaporder enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BitmapOrder.SDL_BITMAPORDER_NONE">
            <summary>
            The sdl bitmaporder none sdl bitmaporder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BitmapOrder.SDL_BITMAPORDER_4321">
            <summary>
            The sdl bitmaporder 4321 sdl bitmaporder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BitmapOrder.SDL_BITMAPORDER_1234">
            <summary>
            The sdl bitmaporder 1234 sdl bitmaporder
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_PackedOrder">
            <summary>
            The sdl packedorder enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_NONE">
            <summary>
            The sdl packedorder none sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_XRGB">
            <summary>
            The sdl packedorder xrgb sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_RGBX">
            <summary>
            The sdl packedorder rgbx sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_ARGB">
            <summary>
            The sdl packedorder argb sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_RGBA">
            <summary>
            The sdl packedorder rgba sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_XBGR">
            <summary>
            The sdl packedorder xbgr sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_BGRX">
            <summary>
            The sdl packedorder bgrx sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_ABGR">
            <summary>
            The sdl packedorder abgr sdl packedorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedOrder.SDL_PACKEDORDER_BGRA">
            <summary>
            The sdl packedorder bgra sdl packedorder
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ArrayOrder">
            <summary>
            The sdl arrayorder enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_NONE">
            <summary>
            The sdl arrayorder none sdl arrayorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_RGB">
            <summary>
            The sdl arrayorder rgb sdl arrayorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_RGBA">
            <summary>
            The sdl arrayorder rgba sdl arrayorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_ARGB">
            <summary>
            The sdl arrayorder argb sdl arrayorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_BGR">
            <summary>
            The sdl arrayorder bgr sdl arrayorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_BGRA">
            <summary>
            The sdl arrayorder bgra sdl arrayorder
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ArrayOrder.SDL_ARRAYORDER_ABGR">
            <summary>
            The sdl arrayorder abgr sdl arrayorder
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_PackedLayout">
            <summary>
            The sdl packedlayout enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_NONE">
            <summary>
            The sdl packedlayout none sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_332">
            <summary>
            The sdl packedlayout 332 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_4444">
            <summary>
            The sdl packedlayout 4444 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_1555">
            <summary>
            The sdl packedlayout 1555 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_5551">
            <summary>
            The sdl packedlayout 5551 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_565">
            <summary>
            The sdl packedlayout 565 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_8888">
            <summary>
            The sdl packedlayout 8888 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_2101010">
            <summary>
            The sdl packedlayout 2101010 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PackedLayout.SDL_PACKEDLAYOUT_1010102">
            <summary>
            The sdl packedlayout 1010102 sdl packedlayout
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_UNKNOWN">
            <summary>
            The sdl pixelformat unknown
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_INDEX1LSB">
            <summary>
            The sdl bitmaporder 4321
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_INDEX1MSB">
            <summary>
            The sdl bitmaporder 1234
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_INDEX4LSB">
            <summary>
            The sdl bitmaporder 4321
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_INDEX4MSB">
            <summary>
            The sdl bitmaporder 1234
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_INDEX8">
            <summary>
            The sdl pixeltype index8
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGB332">
            <summary>
            The sdl packedlayout 332
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_XRGB444">
            <summary>
            The sdl packedlayout 4444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGB444">
            <summary>
            The sdl pixelformat xrgb444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_XBGR444">
            <summary>
            The sdl packedlayout 4444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGR444">
            <summary>
            The sdl pixelformat xbgr444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_XRGB1555">
            <summary>
            The sdl packedlayout 1555
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGB555">
            <summary>
            The sdl pixelformat xrgb1555
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_XBGR1555">
            <summary>
            The sdl packedlayout 1555
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGR555">
            <summary>
            The sdl pixelformat xbgr1555
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ARGB4444">
            <summary>
            The sdl packedlayout 4444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGBA4444">
            <summary>
            The sdl packedlayout 4444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ABGR4444">
            <summary>
            The sdl packedlayout 4444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGRA4444">
            <summary>
            The sdl packedlayout 4444
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ARGB1555">
            <summary>
            The sdl packedlayout 1555
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGBA5551">
            <summary>
            The sdl packedlayout 5551
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ABGR1555">
            <summary>
            The sdl packedlayout 1555
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGRA5551">
            <summary>
            The sdl packedlayout 5551
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGB565">
            <summary>
            The sdl packedlayout 565
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGR565">
            <summary>
            The sdl packedlayout 565
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGB24">
            <summary>
            The sdl arrayorder rgb
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGR24">
            <summary>
            The sdl arrayorder bgr
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_XRGB888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGB888">
            <summary>
            The sdl pixelformat xrgb888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGBX8888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_XBGR888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGR888">
            <summary>
            The sdl pixelformat xbgr888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGRX8888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ARGB8888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_RGBA8888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ABGR8888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_BGRA8888">
            <summary>
            The sdl packedlayout 8888
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_ARGB2101010">
            <summary>
            The sdl packedlayout 2101010
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_YV12">
            <summary>
            The sdl define pixelfourcc
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_IYUV">
            <summary>
            The sdl define pixelfourcc
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_YUY2">
            <summary>
            The sdl define pixelfourcc
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_UYVY">
            <summary>
            The sdl define pixelfourcc
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PIXELFORMAT_YVYU">
            <summary>
            The sdl define pixelfourcc
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Color">
            <summary>
            The sdl color
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Color.r">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Color.g">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Color.b">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Color.a">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Palette">
            <summary>
            The sdl palette
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Palette.ncolors">
            <summary>
            The ncolors
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Palette.colors">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Palette.version">
            <summary>
            The version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Palette.refcount">
            <summary>
            The refcount
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_PixelFormat">
            <summary>
            The sdl pixelformat
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.palette">
            <summary>
            The palette
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.BitsPerPixel">
            <summary>
            The bits per pixel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.BytesPerPixel">
            <summary>
            The bytes per pixel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Rmask">
            <summary>
            The rmask
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Gmask">
            <summary>
            The gmask
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Bmask">
            <summary>
            The bmask
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Amask">
            <summary>
            The amask
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Rloss">
            <summary>
            The rloss
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Gloss">
            <summary>
            The gloss
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Bloss">
            <summary>
            The bloss
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Aloss">
            <summary>
            The aloss
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Rshift">
            <summary>
            The rshift
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Gshift">
            <summary>
            The gshift
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Bshift">
            <summary>
            The bshift
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.Ashift">
            <summary>
            The ashift
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.refcount">
            <summary>
            The refcount
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PixelFormat.next">
            <summary>
            The next
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_AllocFormat(System.UInt32)">
            <summary>
            Sdls the alloc format using the specified pixel format
            </summary>
            <param name="pixel_format">The pixel format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AllocPalette(System.Int32)">
            <summary>
            Sdls the alloc palette using the specified ncolors
            </summary>
            <param name="ncolors">The ncolors</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CalculateGammaRamp(System.Single,System.UInt16[])">
            <summary>
            Sdls the calculate gamma ramp using the specified gamma
            </summary>
            <param name="gamma">The gamma</param>
            <param name="ramp">The ramp</param>
        </member>
        <member name="M:SDL2.SDL.SDL_FreeFormat(System.IntPtr)">
            <summary>
            Sdls the free format using the specified format
            </summary>
            <param name="format">The format</param>
        </member>
        <member name="M:SDL2.SDL.SDL_FreePalette(System.IntPtr)">
            <summary>
            Sdls the free palette using the specified palette
            </summary>
            <param name="palette">The palette</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetPixelFormatName(System.UInt32)">
            <summary>
            Internals the sdl get pixel format name using the specified format
            </summary>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPixelFormatName(System.UInt32)">
            <summary>
            Sdls the get pixel format name using the specified format
            </summary>
            <param name="format">The format</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRGB(System.UInt32,System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Sdls the get rgb using the specified pixel
            </summary>
            <param name="pixel">The pixel</param>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRGBA(System.UInt32,System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Sdls the get rgba using the specified pixel
            </summary>
            <param name="pixel">The pixel</param>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_MapRGB(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the map rgb using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_MapRGBA(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the map rgba using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_MasksToPixelFormatEnum(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sdls the masks to pixel format enum using the specified bpp
            </summary>
            <param name="bpp">The bpp</param>
            <param name="Rmask">The rmask</param>
            <param name="Gmask">The gmask</param>
            <param name="Bmask">The bmask</param>
            <param name="Amask">The amask</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PixelFormatEnumToMasks(System.UInt32,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            Sdls the pixel format enum to masks using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="bpp">The bpp</param>
            <param name="Rmask">The rmask</param>
            <param name="Gmask">The gmask</param>
            <param name="Bmask">The bmask</param>
            <param name="Amask">The amask</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetPaletteColors(System.IntPtr,SDL2.SDL.SDL_Color[],System.Int32,System.Int32)">
            <summary>
            Sdls the set palette colors using the specified palette
            </summary>
            <param name="palette">The palette</param>
            <param name="colors">The colors</param>
            <param name="firstcolor">The firstcolor</param>
            <param name="ncolors">The ncolors</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetPixelFormatPalette(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set pixel format palette using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="palette">The palette</param>
            <returns>The int</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_Point">
            <summary>
            The sdl point
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Point.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Point.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Rect">
            <summary>
            The sdl rect
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Rect.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Rect.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Rect.w">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Rect.h">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_FPoint">
            <summary>
            The sdl fpoint
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FPoint.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FPoint.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_FRect">
            <summary>
            The sdl frect
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FRect.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FRect.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FRect.w">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_FRect.h">
            <summary>
            The 
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_PointInRect(SDL2.SDL.SDL_Point@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the point in rect using the specified p
            </summary>
            <param name="p">The </param>
            <param name="r">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_EnclosePoints(SDL2.SDL.SDL_Point[],System.Int32,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the enclose points using the specified points
            </summary>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <param name="clip">The clip</param>
            <param name="result">The result</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasIntersection(SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the has intersection using the specified a
            </summary>
            <param name="A">The </param>
            <param name="B">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IntersectRect(SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the intersect rect using the specified a
            </summary>
            <param name="A">The </param>
            <param name="B">The </param>
            <param name="result">The result</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IntersectRectAndLine(SDL2.SDL.SDL_Rect@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Sdls the intersect rect and line using the specified rect
            </summary>
            <param name="rect">The rect</param>
            <param name="X1">The </param>
            <param name="Y1">The </param>
            <param name="X2">The </param>
            <param name="Y2">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RectEmpty(SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the rect empty using the specified r
            </summary>
            <param name="r">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RectEquals(SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the rect equals using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UnionRect(SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the union rect using the specified a
            </summary>
            <param name="A">The </param>
            <param name="B">The </param>
            <param name="result">The result</param>
        </member>
        <member name="F:SDL2.SDL.SDL_SWSURFACE">
            <summary>
            The sdl swsurface
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PREALLOC">
            <summary>
            The sdl prealloc
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RLEACCEL">
            <summary>
            The sdl rleaccel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DONTFREE">
            <summary>
            The sdl dontfree
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Surface">
            <summary>
            The sdl surface
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.w">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.h">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.pitch">
            <summary>
            The pitch
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.pixels">
            <summary>
            The pixels
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.userdata">
            <summary>
            The userdata
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.locked">
            <summary>
            The locked
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.list_blitmap">
            <summary>
            The list blitmap
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.clip_rect">
            <summary>
            The clip rect
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.map">
            <summary>
            The map
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Surface.refcount">
            <summary>
            The refcount
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_MUSTLOCK(System.IntPtr)">
            <summary>
            Describes whether sdl mustlock
            </summary>
            <param name="surface">The surface</param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitSurface(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitSurface(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitScaled(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitScaled(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ConvertPixels(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
            Sdls the convert pixels using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="src_format">The src format</param>
            <param name="src">The src</param>
            <param name="src_pitch">The src pitch</param>
            <param name="dst_format">The dst format</param>
            <param name="dst">The dst</param>
            <param name="dst_pitch">The dst pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PremultiplyAlpha(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
            Sdls the premultiply alpha using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="src_format">The src format</param>
            <param name="src">The src</param>
            <param name="src_pitch">The src pitch</param>
            <param name="dst_format">The dst format</param>
            <param name="dst">The dst</param>
            <param name="dst_pitch">The dst pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ConvertSurface(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            Sdls the convert surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="fmt">The fmt</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ConvertSurfaceFormat(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Sdls the convert surface format using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="pixel_format">The pixel format</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateRGBSurface(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sdls the create rgb surface using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="Rmask">The rmask</param>
            <param name="Gmask">The gmask</param>
            <param name="Bmask">The bmask</param>
            <param name="Amask">The amask</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateRGBSurfaceFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sdls the create rgb surface from using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="pitch">The pitch</param>
            <param name="Rmask">The rmask</param>
            <param name="Gmask">The gmask</param>
            <param name="Bmask">The bmask</param>
            <param name="Amask">The amask</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateRGBSurfaceWithFormat(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sdls the create rgb surface with format using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateRGBSurfaceWithFormatFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sdls the create rgb surface with format from using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="pitch">The pitch</param>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FillRect(System.IntPtr,SDL2.SDL.SDL_Rect@,System.UInt32)">
            <summary>
            Sdls the fill rect using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rect">The rect</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FillRect(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            Sdls the fill rect using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rect">The rect</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FillRects(System.IntPtr,SDL2.SDL.SDL_Rect[],System.Int32,System.UInt32)">
            <summary>
            Sdls the fill rects using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FreeSurface(System.IntPtr)">
            <summary>
            Sdls the free surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetClipRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the get clip rect using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:SDL2.SDL.SDL_HasColorKey(System.IntPtr)">
            <summary>
            Sdls the has color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetColorKey(System.IntPtr,System.UInt32@)">
            <summary>
            Sdls the get color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="key">The key</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetSurfaceAlphaMod(System.IntPtr,System.Byte@)">
            <summary>
            Sdls the get surface alpha mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetSurfaceBlendMode(System.IntPtr,SDL2.SDL.SDL_BlendMode@)">
            <summary>
            Sdls the get surface blend mode using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Sdls the get surface color mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LoadBMP_RW(System.IntPtr,System.Int32)">
            <summary>
            Internals the sdl load bmp rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LoadBMP(System.String)">
            <summary>
            Sdls the load bmp using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockSurface(System.IntPtr)">
            <summary>
            Sdls the lock surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LowerBlit(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the lower blit using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LowerBlitScaled(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the lower blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SaveBMP_RW(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Internals the sdl save bmp rw using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SaveBMP(System.IntPtr,System.String)">
            <summary>
            Sdls the save bmp using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetClipRect(System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the set clip rect using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="rect">The rect</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetColorKey(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
            Sdls the set color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="flag">The flag</param>
            <param name="key">The key</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetSurfaceAlphaMod(System.IntPtr,System.Byte)">
            <summary>
            Sdls the set surface alpha mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetSurfaceBlendMode(System.IntPtr,SDL2.SDL.SDL_BlendMode)">
            <summary>
            Sdls the set surface blend mode using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the set surface color mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetSurfacePalette(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the set surface palette using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="palette">The palette</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetSurfaceRLE(System.IntPtr,System.Int32)">
            <summary>
            Sdls the set surface rle using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="flag">The flag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasSurfaceRLE(System.IntPtr)">
            <summary>
            Sdls the has surface rle using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SoftStretch(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the soft stretch using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SoftStretchLinear(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the soft stretch linear using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UnlockSurface(System.IntPtr)">
            <summary>
            Sdls the unlock surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
        </member>
        <member name="M:SDL2.SDL.SDL_UpperBlit(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the upper blit using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_UpperBlitScaled(System.IntPtr,SDL2.SDL.SDL_Rect@,System.IntPtr,SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the upper blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcrect">The srcrect</param>
            <param name="dst">The dst</param>
            <param name="dstrect">The dstrect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_DuplicateSurface(System.IntPtr)">
            <summary>
            Sdls the duplicate surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasClipboardText">
            <summary>
            Sdls the has clipboard text
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetClipboardText">
            <summary>
            Internals the sdl get clipboard text
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetClipboardText">
            <summary>
            Sdls the get clipboard text
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SetClipboardText(System.Byte*)">
            <summary>
            Internals the sdl set clipboard text using the specified text
            </summary>
            <param name="text">The text</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetClipboardText(System.String)">
            <summary>
            Sdls the set clipboard text using the specified text
            </summary>
            <param name="text">The text</param>
            <returns>The result</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_PRESSED">
            <summary>
            The sdl pressed
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_RELEASED">
            <summary>
            The sdl released
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TEXTEDITINGEVENT_TEXT_SIZE">
            <summary>
            The sdl texteditingevent text size
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TEXTINPUTEVENT_TEXT_SIZE">
            <summary>
            The sdl textinputevent text size
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_EventType">
            <summary>
            The sdl eventtype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_FIRSTEVENT">
            <summary>
            The sdl firstevent sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_QUIT">
            <summary>
            The sdl quit sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_APP_TERMINATING">
            <summary>
            The sdl app terminating sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_APP_LOWMEMORY">
            <summary>
            The sdl app lowmemory sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_APP_WILLENTERBACKGROUND">
            <summary>
            The sdl app willenterbackground sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_APP_DIDENTERBACKGROUND">
            <summary>
            The sdl app didenterbackground sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_APP_WILLENTERFOREGROUND">
            <summary>
            The sdl app willenterforeground sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_APP_DIDENTERFOREGROUND">
            <summary>
            The sdl app didenterforeground sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_LOCALECHANGED">
            <summary>
            The sdl localechanged sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DISPLAYEVENT">
            <summary>
            The sdl displayevent sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_WINDOWEVENT">
            <summary>
            The sdl windowevent sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_SYSWMEVENT">
            <summary>
            The sdl syswmevent sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_KEYDOWN">
            <summary>
            The sdl keydown sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_KEYUP">
            <summary>
            The sdl keyup sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_TEXTEDITING">
            <summary>
            The sdl textediting sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_TEXTINPUT">
            <summary>
            The sdl textinput sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_KEYMAPCHANGED">
            <summary>
            The sdl keymapchanged sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_MOUSEMOTION">
            <summary>
            The sdl mousemotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_MOUSEBUTTONDOWN">
            <summary>
            The sdl mousebuttondown sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_MOUSEBUTTONUP">
            <summary>
            The sdl mousebuttonup sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_MOUSEWHEEL">
            <summary>
            The sdl mousewheel sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYAXISMOTION">
            <summary>
            The sdl joyaxismotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYBALLMOTION">
            <summary>
            The sdl joyballmotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYHATMOTION">
            <summary>
            The sdl joyhatmotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYBUTTONDOWN">
            <summary>
            The sdl joybuttondown sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYBUTTONUP">
            <summary>
            The sdl joybuttonup sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYDEVICEADDED">
            <summary>
            The sdl joydeviceadded sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_JOYDEVICEREMOVED">
            <summary>
            The sdl joydeviceremoved sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERAXISMOTION">
            <summary>
            The sdl controlleraxismotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERBUTTONDOWN">
            <summary>
            The sdl controllerbuttondown sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERBUTTONUP">
            <summary>
            The sdl controllerbuttonup sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERDEVICEADDED">
            <summary>
            The sdl controllerdeviceadded sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERDEVICEREMOVED">
            <summary>
            The sdl controllerdeviceremoved sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERDEVICEREMAPPED">
            <summary>
            The sdl controllerdeviceremapped sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERTOUCHPADDOWN">
            <summary>
            The sdl controllertouchpaddown sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERTOUCHPADMOTION">
            <summary>
            The sdl controllertouchpadmotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERTOUCHPADUP">
            <summary>
            The sdl controllertouchpadup sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CONTROLLERSENSORUPDATE">
            <summary>
            The sdl controllersensorupdate sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_FINGERDOWN">
            <summary>
            The sdl fingerdown sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_FINGERUP">
            <summary>
            The sdl fingerup sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_FINGERMOTION">
            <summary>
            The sdl fingermotion sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DOLLARGESTURE">
            <summary>
            The sdl dollargesture sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DOLLARRECORD">
            <summary>
            The sdl dollarrecord sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_MULTIGESTURE">
            <summary>
            The sdl multigesture sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_CLIPBOARDUPDATE">
            <summary>
            The sdl clipboardupdate sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DROPFILE">
            <summary>
            The sdl dropfile sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DROPTEXT">
            <summary>
            The sdl droptext sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DROPBEGIN">
            <summary>
            The sdl dropbegin sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_DROPCOMPLETE">
            <summary>
            The sdl dropcomplete sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_AUDIODEVICEADDED">
            <summary>
            The sdl audiodeviceadded sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_AUDIODEVICEREMOVED">
            <summary>
            The sdl audiodeviceremoved sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_SENSORUPDATE">
            <summary>
            The sdl sensorupdate sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_RENDER_TARGETS_RESET">
            <summary>
            The sdl render targets reset sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_RENDER_DEVICE_RESET">
            <summary>
            The sdl render device reset sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_POLLSENTINEL">
            <summary>
            The sdl pollsentinel sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_USEREVENT">
            <summary>
            The sdl userevent sdl eventtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_EventType.SDL_LASTEVENT">
            <summary>
            The sdl lastevent sdl eventtype
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MouseWheelDirection">
            <summary>
            The sdl mousewheeldirection enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelDirection.SDL_MOUSEWHEEL_NORMAL">
            <summary>
            The sdl mousewheel normal sdl mousewheeldirection
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelDirection.SDL_MOUSEWHEEL_FLIPPED">
            <summary>
            The sdl mousewheel flipped sdl mousewheeldirection
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GenericEvent">
            <summary>
            The sdl genericevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GenericEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GenericEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_DisplayEvent">
            <summary>
            The sdl displayevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.display">
            <summary>
            The display
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.displayEvent">
            <summary>
            The display event
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DisplayEvent.data1">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_WindowEvent">
            <summary>
            The sdl windowevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.windowEvent">
            <summary>
            The window event
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.data1">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WindowEvent.data2">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_KeyboardEvent">
            <summary>
            The sdl keyboardevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.state">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.repeat">
            <summary>
            The repeat
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_KeyboardEvent.keysym">
            <summary>
            The keysym
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_TextEditingEvent">
            <summary>
            The sdl texteditingevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextEditingEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextEditingEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextEditingEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextEditingEvent.text">
            <summary>
            The sdl texteditingevent text size
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextEditingEvent.start">
            <summary>
            The start
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextEditingEvent.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_TextInputEvent">
            <summary>
            The sdl textinputevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextInputEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextInputEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextInputEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TextInputEvent.text">
            <summary>
            The sdl textinputevent text size
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MouseMotionEvent">
            <summary>
            The sdl mousemotionevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.state">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.xrel">
            <summary>
            The xrel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseMotionEvent.yrel">
            <summary>
            The yrel
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MouseButtonEvent">
            <summary>
            The sdl mousebuttonevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.state">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.clicks">
            <summary>
            The clicks
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseButtonEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MouseWheelEvent">
            <summary>
            The sdl mousewheelevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.preciseX">
            <summary>
            The precise
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MouseWheelEvent.preciseY">
            <summary>
            The precise
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoyAxisEvent">
            <summary>
            The sdl joyaxisevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.axis">
            <summary>
            The axis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.axisValue">
            <summary>
            The axis value
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyAxisEvent.padding4">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoyBallEvent">
            <summary>
            The sdl joyballevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.ball">
            <summary>
            The ball
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.xrel">
            <summary>
            The xrel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyBallEvent.yrel">
            <summary>
            The yrel
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoyHatEvent">
            <summary>
            The sdl joyhatevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.hat">
            <summary>
            The hat
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.hatValue">
            <summary>
            The hat value
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyHatEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoyButtonEvent">
            <summary>
            The sdl joybuttonevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.state">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyButtonEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoyDeviceEvent">
            <summary>
            The sdl joydeviceevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyDeviceEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyDeviceEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoyDeviceEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ControllerAxisEvent">
            <summary>
            The sdl controlleraxisevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.axis">
            <summary>
            The axis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.axisValue">
            <summary>
            The axis value
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerAxisEvent.padding4">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ControllerButtonEvent">
            <summary>
            The sdl controllerbuttonevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.state">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerButtonEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ControllerDeviceEvent">
            <summary>
            The sdl controllerdeviceevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerDeviceEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerDeviceEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerDeviceEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ControllerTouchpadEvent">
            <summary>
            The sdl controllertouchpadevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.touchpad">
            <summary>
            The touchpad
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.finger">
            <summary>
            The finger
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerTouchpadEvent.pressure">
            <summary>
            The pressure
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_ControllerSensorEvent">
            <summary>
            The sdl controllersensorevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.sensor">
            <summary>
            The sensor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.data1">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.data2">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ControllerSensorEvent.data3">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_AudioDeviceEvent">
            <summary>
            The sdl audiodeviceevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.iscapture">
            <summary>
            The iscapture
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.padding1">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.padding2">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioDeviceEvent.padding3">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_TouchFingerEvent">
            <summary>
            The sdl touchfingerevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.touchId">
            <summary>
            The touch id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.fingerId">
            <summary>
            The finger id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.dx">
            <summary>
            The dx
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.dy">
            <summary>
            The dy
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.pressure">
            <summary>
            The pressure
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchFingerEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_MultiGestureEvent">
            <summary>
            The sdl multigestureevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.touchId">
            <summary>
            The touch id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.dTheta">
            <summary>
            The theta
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.dDist">
            <summary>
            The dist
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.numFingers">
            <summary>
            The num fingers
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MultiGestureEvent.padding">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_DollarGestureEvent">
            <summary>
            The sdl dollargestureevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.touchId">
            <summary>
            The touch id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.gestureId">
            <summary>
            The gesture id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.numFingers">
            <summary>
            The num fingers
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DollarGestureEvent.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_DropEvent">
            <summary>
            The sdl dropevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DropEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DropEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DropEvent.file">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DropEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_SensorEvent">
            <summary>
            The sdl sensorevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorEvent.which">
            <summary>
            The which
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorEvent.data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_QuitEvent">
            <summary>
            The sdl quitevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_QuitEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_QuitEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_UserEvent">
            <summary>
            The sdl userevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_UserEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_UserEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_UserEvent.windowID">
            <summary>
            The window id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_UserEvent.code">
            <summary>
            The code
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_UserEvent.data1">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_UserEvent.data2">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_SysWMEvent">
            <summary>
            The sdl syswmevent
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SysWMEvent.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SysWMEvent.timestamp">
            <summary>
            The timestamp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SysWMEvent.msg">
            <summary>
            The msg
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Event">
            <summary>
            The sdl event
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.typeFSharp">
            <summary>
            The type sharp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.display">
            <summary>
            The display
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.key">
            <summary>
            The key
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.edit">
            <summary>
            The edit
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.motion">
            <summary>
            The motion
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.wheel">
            <summary>
            The wheel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.jaxis">
            <summary>
            The jaxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.jball">
            <summary>
            The jball
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.jhat">
            <summary>
            The jhat
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.jbutton">
            <summary>
            The jbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.jdevice">
            <summary>
            The jdevice
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.caxis">
            <summary>
            The caxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.cbutton">
            <summary>
            The cbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.cdevice">
            <summary>
            The cdevice
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.ctouchpad">
            <summary>
            The ctouchpad
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.csensor">
            <summary>
            The csensor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.adevice">
            <summary>
            The adevice
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.sensor">
            <summary>
            The sensor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.quit">
            <summary>
            The quit
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.user">
            <summary>
            The user
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.syswm">
            <summary>
            The syswm
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.tfinger">
            <summary>
            The tfinger
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.mgesture">
            <summary>
            The mgesture
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.dgesture">
            <summary>
            The dgesture
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.drop">
            <summary>
            The drop
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Event.padding">
            <summary>
            The padding
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_EventFilter">
            <summary>
            The sdl eventfilter
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_PumpEvents">
            <summary>
            Sdls the pump events
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_eventaction">
            <summary>
            The sdl eventaction enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_eventaction.SDL_ADDEVENT">
            <summary>
            The sdl addevent sdl eventaction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_eventaction.SDL_PEEKEVENT">
            <summary>
            The sdl peekevent sdl eventaction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_eventaction.SDL_GETEVENT">
            <summary>
            The sdl getevent sdl eventaction
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_PeepEvents(SDL2.SDL.SDL_Event[],System.Int32,SDL2.SDL.SDL_eventaction,SDL2.SDL.SDL_EventType,SDL2.SDL.SDL_EventType)">
            <summary>
            Sdls the peep events using the specified events
            </summary>
            <param name="events">The events</param>
            <param name="numevents">The numevents</param>
            <param name="action">The action</param>
            <param name="minType">The min type</param>
            <param name="maxType">The max type</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasEvent(SDL2.SDL.SDL_EventType)">
            <summary>
            Sdls the has event using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasEvents(SDL2.SDL.SDL_EventType,SDL2.SDL.SDL_EventType)">
            <summary>
            Sdls the has events using the specified min type
            </summary>
            <param name="minType">The min type</param>
            <param name="maxType">The max type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FlushEvent(SDL2.SDL.SDL_EventType)">
            <summary>
            Sdls the flush event using the specified type
            </summary>
            <param name="type">The type</param>
        </member>
        <member name="M:SDL2.SDL.SDL_FlushEvents(SDL2.SDL.SDL_EventType,SDL2.SDL.SDL_EventType)">
            <summary>
            Sdls the flush events using the specified min
            </summary>
            <param name="min">The min</param>
            <param name="max">The max</param>
        </member>
        <member name="M:SDL2.SDL.SDL_PollEvent(SDL2.SDL.SDL_Event@)">
            <summary>
            Sdls the poll event using the specified  event
            </summary>
            <param name="_event">The event</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WaitEvent(SDL2.SDL.SDL_Event@)">
            <summary>
            Sdls the wait event using the specified  event
            </summary>
            <param name="_event">The event</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WaitEventTimeout(SDL2.SDL.SDL_Event@,System.Int32)">
            <summary>
            Sdls the wait event timeout using the specified  event
            </summary>
            <param name="_event">The event</param>
            <param name="timeout">The timeout</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PushEvent(SDL2.SDL.SDL_Event@)">
            <summary>
            Sdls the push event using the specified  event
            </summary>
            <param name="_event">The event</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetEventFilter(SDL2.SDL.SDL_EventFilter,System.IntPtr)">
            <summary>
            Sdls the set event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetEventFilter(System.IntPtr@,System.IntPtr@)">
            <summary>
            Sdls the get event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetEventFilter(SDL2.SDL.SDL_EventFilter@,System.IntPtr@)">
            <summary>
            Sdls the get event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
            <returns>The retval</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AddEventWatch(SDL2.SDL.SDL_EventFilter,System.IntPtr)">
            <summary>
            Sdls the add event watch using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:SDL2.SDL.SDL_DelEventWatch(SDL2.SDL.SDL_EventFilter,System.IntPtr)">
            <summary>
            Sdls the del event watch using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:SDL2.SDL.SDL_FilterEvents(SDL2.SDL.SDL_EventFilter,System.IntPtr)">
            <summary>
            Sdls the filter events using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="F:SDL2.SDL.SDL_QUERY">
            <summary>
            The sdl query
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_IGNORE">
            <summary>
            The sdl ignore
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_DISABLE">
            <summary>
            The sdl disable
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ENABLE">
            <summary>
            The sdl enable
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_EventState(SDL2.SDL.SDL_EventType,System.Int32)">
            <summary>
            Sdls the event state using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="state">The state</param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetEventState(SDL2.SDL.SDL_EventType)">
            <summary>
            Sdls the get event state using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RegisterEvents(System.Int32)">
            <summary>
            Sdls the register events using the specified numevents
            </summary>
            <param name="numevents">The numevents</param>
            <returns>The int 32</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_Scancode">
            <summary>
            The sdl scancode enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_UNKNOWN">
            <summary>
            The sdl scancode unknown sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_A">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_B">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_C">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_D">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_E">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_G">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_H">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_I">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_J">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_K">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_L">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_M">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_N">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_O">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_P">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_Q">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_R">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_S">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_T">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_U">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_V">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_W">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_X">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_Y">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_Z">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_1">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_2">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_3">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_4">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_5">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_6">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_7">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_8">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_9">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_0">
            <summary>
            The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RETURN">
            <summary>
            The sdl scancode return sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_ESCAPE">
            <summary>
            The sdl scancode escape sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_BACKSPACE">
            <summary>
            The sdl scancode backspace sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_TAB">
            <summary>
            The sdl scancode tab sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SPACE">
            <summary>
            The sdl scancode space sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_MINUS">
            <summary>
            The sdl scancode minus sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_EQUALS">
            <summary>
            The sdl scancode equals sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LEFTBRACKET">
            <summary>
            The sdl scancode leftbracket sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RIGHTBRACKET">
            <summary>
            The sdl scancode rightbracket sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_BACKSLASH">
            <summary>
            The sdl scancode backslash sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_NONUSHASH">
            <summary>
            The sdl scancode nonushash sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SEMICOLON">
            <summary>
            The sdl scancode semicolon sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_APOSTROPHE">
            <summary>
            The sdl scancode apostrophe sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_GRAVE">
            <summary>
            The sdl scancode grave sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_COMMA">
            <summary>
            The sdl scancode comma sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PERIOD">
            <summary>
            The sdl scancode period sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SLASH">
            <summary>
            The sdl scancode slash sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CAPSLOCK">
            <summary>
            The sdl scancode capslock sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F1">
            <summary>
            The sdl scancode f1 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F2">
            <summary>
            The sdl scancode f2 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F3">
            <summary>
            The sdl scancode f3 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F4">
            <summary>
            The sdl scancode f4 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F5">
            <summary>
            The sdl scancode f5 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F6">
            <summary>
            The sdl scancode f6 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F7">
            <summary>
            The sdl scancode f7 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F8">
            <summary>
            The sdl scancode f8 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F9">
            <summary>
            The sdl scancode f9 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F10">
            <summary>
            The sdl scancode f10 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F11">
            <summary>
            The sdl scancode f11 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F12">
            <summary>
            The sdl scancode f12 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PRINTSCREEN">
            <summary>
            The sdl scancode printscreen sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SCROLLLOCK">
            <summary>
            The sdl scancode scrolllock sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PAUSE">
            <summary>
            The sdl scancode pause sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INSERT">
            <summary>
            The sdl scancode insert sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_HOME">
            <summary>
            The sdl scancode home sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PAGEUP">
            <summary>
            The sdl scancode pageup sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_DELETE">
            <summary>
            The sdl scancode delete sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_END">
            <summary>
            The sdl scancode end sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PAGEDOWN">
            <summary>
            The sdl scancode pagedown sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RIGHT">
            <summary>
            The sdl scancode right sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LEFT">
            <summary>
            The sdl scancode left sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_DOWN">
            <summary>
            The sdl scancode down sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_UP">
            <summary>
            The sdl scancode up sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_NUMLOCKCLEAR">
            <summary>
            The sdl scancode numlockclear sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_DIVIDE">
            <summary>
            The sdl scancode kp divide sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MULTIPLY">
            <summary>
            The sdl scancode kp multiply sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MINUS">
            <summary>
            The sdl scancode kp minus sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_PLUS">
            <summary>
            The sdl scancode kp plus sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_ENTER">
            <summary>
            The sdl scancode kp enter sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_1">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_2">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_3">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_4">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_5">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_6">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_7">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_8">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_9">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_0">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_PERIOD">
            <summary>
            The sdl scancode kp period sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_NONUSBACKSLASH">
            <summary>
            The sdl scancode nonusbackslash sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_APPLICATION">
            <summary>
            The sdl scancode application sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_POWER">
            <summary>
            The sdl scancode power sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_EQUALS">
            <summary>
            The sdl scancode kp equals sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F13">
            <summary>
            The sdl scancode f13 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F14">
            <summary>
            The sdl scancode f14 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F15">
            <summary>
            The sdl scancode f15 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F16">
            <summary>
            The sdl scancode f16 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F17">
            <summary>
            The sdl scancode f17 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F18">
            <summary>
            The sdl scancode f18 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F19">
            <summary>
            The sdl scancode f19 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F20">
            <summary>
            The sdl scancode f20 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F21">
            <summary>
            The sdl scancode f21 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F22">
            <summary>
            The sdl scancode f22 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F23">
            <summary>
            The sdl scancode f23 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_F24">
            <summary>
            The sdl scancode f24 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_EXECUTE">
            <summary>
            The sdl scancode execute sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_HELP">
            <summary>
            The sdl scancode help sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_MENU">
            <summary>
            The sdl scancode menu sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SELECT">
            <summary>
            The sdl scancode select sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_STOP">
            <summary>
            The sdl scancode stop sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AGAIN">
            <summary>
            The sdl scancode again sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_UNDO">
            <summary>
            The sdl scancode undo sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CUT">
            <summary>
            The sdl scancode cut sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_COPY">
            <summary>
            The sdl scancode copy sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PASTE">
            <summary>
            The sdl scancode paste sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_FIND">
            <summary>
            The sdl scancode find sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_MUTE">
            <summary>
            The sdl scancode mute sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_VOLUMEUP">
            <summary>
            The sdl scancode volumeup sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_VOLUMEDOWN">
            <summary>
            The sdl scancode volumedown sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_COMMA">
            <summary>
            The sdl scancode kp comma sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_EQUALSAS400">
            <summary>
            The sdl scancode kp equalsas400 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL1">
            <summary>
            The sdl scancode international1 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL2">
            <summary>
            The sdl scancode international2 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL3">
            <summary>
            The sdl scancode international3 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL4">
            <summary>
            The sdl scancode international4 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL5">
            <summary>
            The sdl scancode international5 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL6">
            <summary>
            The sdl scancode international6 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL7">
            <summary>
            The sdl scancode international7 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL8">
            <summary>
            The sdl scancode international8 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL9">
            <summary>
            The sdl scancode international9 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG1">
            <summary>
            The sdl scancode lang1 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG2">
            <summary>
            The sdl scancode lang2 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG3">
            <summary>
            The sdl scancode lang3 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG4">
            <summary>
            The sdl scancode lang4 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG5">
            <summary>
            The sdl scancode lang5 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG6">
            <summary>
            The sdl scancode lang6 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG7">
            <summary>
            The sdl scancode lang7 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG8">
            <summary>
            The sdl scancode lang8 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LANG9">
            <summary>
            The sdl scancode lang9 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_ALTERASE">
            <summary>
            The sdl scancode alterase sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SYSREQ">
            <summary>
            The sdl scancode sysreq sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CANCEL">
            <summary>
            The sdl scancode cancel sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CLEAR">
            <summary>
            The sdl scancode clear sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_PRIOR">
            <summary>
            The sdl scancode prior sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RETURN2">
            <summary>
            The sdl scancode return2 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SEPARATOR">
            <summary>
            The sdl scancode separator sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_OUT">
            <summary>
            The sdl scancode out sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_OPER">
            <summary>
            The sdl scancode oper sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CLEARAGAIN">
            <summary>
            The sdl scancode clearagain sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CRSEL">
            <summary>
            The sdl scancode crsel sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_EXSEL">
            <summary>
            The sdl scancode exsel sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_00">
            <summary>
            The sdl scancode kp 00 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_000">
            <summary>
            The sdl scancode kp 000 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_THOUSANDSSEPARATOR">
            <summary>
            The sdl scancode thousandsseparator sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_DECIMALSEPARATOR">
            <summary>
            The sdl scancode decimalseparator sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CURRENCYUNIT">
            <summary>
            The sdl scancode currencyunit sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CURRENCYSUBUNIT">
            <summary>
            The sdl scancode currencysubunit sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_LEFTPAREN">
            <summary>
            The sdl scancode kp leftparen sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_RIGHTPAREN">
            <summary>
            The sdl scancode kp rightparen sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_LEFTBRACE">
            <summary>
            The sdl scancode kp leftbrace sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_RIGHTBRACE">
            <summary>
            The sdl scancode kp rightbrace sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_TAB">
            <summary>
            The sdl scancode kp tab sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_BACKSPACE">
            <summary>
            The sdl scancode kp backspace sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_A">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_B">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_C">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_D">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_E">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_F">
            <summary>
            The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_XOR">
            <summary>
            The sdl scancode kp xor sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_POWER">
            <summary>
            The sdl scancode kp power sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_PERCENT">
            <summary>
            The sdl scancode kp percent sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_LESS">
            <summary>
            The sdl scancode kp less sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_GREATER">
            <summary>
            The sdl scancode kp greater sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_AMPERSAND">
            <summary>
            The sdl scancode kp ampersand sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_DBLAMPERSAND">
            <summary>
            The sdl scancode kp dblampersand sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_VERTICALBAR">
            <summary>
            The sdl scancode kp verticalbar sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_DBLVERTICALBAR">
            <summary>
            The sdl scancode kp dblverticalbar sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_COLON">
            <summary>
            The sdl scancode kp colon sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_HASH">
            <summary>
            The sdl scancode kp hash sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_SPACE">
            <summary>
            The sdl scancode kp space sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_AT">
            <summary>
            The sdl scancode kp at sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_EXCLAM">
            <summary>
            The sdl scancode kp exclam sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMSTORE">
            <summary>
            The sdl scancode kp memstore sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMRECALL">
            <summary>
            The sdl scancode kp memrecall sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMCLEAR">
            <summary>
            The sdl scancode kp memclear sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMADD">
            <summary>
            The sdl scancode kp memadd sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMSUBTRACT">
            <summary>
            The sdl scancode kp memsubtract sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMMULTIPLY">
            <summary>
            The sdl scancode kp memmultiply sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_MEMDIVIDE">
            <summary>
            The sdl scancode kp memdivide sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_PLUSMINUS">
            <summary>
            The sdl scancode kp plusminus sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_CLEAR">
            <summary>
            The sdl scancode kp clear sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_CLEARENTRY">
            <summary>
            The sdl scancode kp clearentry sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_BINARY">
            <summary>
            The sdl scancode kp binary sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_OCTAL">
            <summary>
            The sdl scancode kp octal sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_DECIMAL">
            <summary>
            The sdl scancode kp decimal sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KP_HEXADECIMAL">
            <summary>
            The sdl scancode kp hexadecimal sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LCTRL">
            <summary>
            The sdl scancode lctrl sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LSHIFT">
            <summary>
            The sdl scancode lshift sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LALT">
            <summary>
            The sdl scancode lalt sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_LGUI">
            <summary>
            The sdl scancode lgui sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RCTRL">
            <summary>
            The sdl scancode rctrl sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RSHIFT">
            <summary>
            The sdl scancode rshift sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RALT">
            <summary>
            The sdl scancode ralt sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_RGUI">
            <summary>
            The sdl scancode rgui sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_MODE">
            <summary>
            The sdl scancode mode sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIONEXT">
            <summary>
            The sdl scancode audionext sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIOPREV">
            <summary>
            The sdl scancode audioprev sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIOSTOP">
            <summary>
            The sdl scancode audiostop sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIOPLAY">
            <summary>
            The sdl scancode audioplay sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIOMUTE">
            <summary>
            The sdl scancode audiomute sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_MEDIASELECT">
            <summary>
            The sdl scancode mediaselect sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_WWW">
            <summary>
            The sdl scancode www sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_MAIL">
            <summary>
            The sdl scancode mail sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_CALCULATOR">
            <summary>
            The sdl scancode calculator sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_COMPUTER">
            <summary>
            The sdl scancode computer sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_SEARCH">
            <summary>
            The sdl scancode ac search sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_HOME">
            <summary>
            The sdl scancode ac home sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_BACK">
            <summary>
            The sdl scancode ac back sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_FORWARD">
            <summary>
            The sdl scancode ac forward sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_STOP">
            <summary>
            The sdl scancode ac stop sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_REFRESH">
            <summary>
            The sdl scancode ac refresh sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AC_BOOKMARKS">
            <summary>
            The sdl scancode ac bookmarks sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_BRIGHTNESSDOWN">
            <summary>
            The sdl scancode brightnessdown sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_BRIGHTNESSUP">
            <summary>
            The sdl scancode brightnessup sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_DISPLAYSWITCH">
            <summary>
            The sdl scancode displayswitch sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KBDILLUMTOGGLE">
            <summary>
            The sdl scancode kbdillumtoggle sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KBDILLUMDOWN">
            <summary>
            The sdl scancode kbdillumdown sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_KBDILLUMUP">
            <summary>
            The sdl scancode kbdillumup sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_EJECT">
            <summary>
            The sdl scancode eject sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_SLEEP">
            <summary>
            The sdl scancode sleep sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_APP1">
            <summary>
            The sdl scancode app1 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_APP2">
            <summary>
            The sdl scancode app2 sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIOREWIND">
            <summary>
            The sdl scancode audiorewind sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_SCANCODE_AUDIOFASTFORWARD">
            <summary>
            The sdl scancode audiofastforward sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Scancode.SDL_NUM_SCANCODES">
            <summary>
            The sdl num scancodes sdl scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDLK_SCANCODE_MASK">
            <summary>
            The sdlk scancode mask
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_SCANCODE_TO_KEYCODE(SDL2.SDL.SDL_Scancode)">
            <summary>
            Sdls the scancode to keycode using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_Keycode">
            <summary>
            The sdl keycode enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_UNKNOWN">
            <summary>
            The sdlk unknown sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RETURN">
            <summary>
            The sdlk return sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_ESCAPE">
            <summary>
            The sdlk escape sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_BACKSPACE">
            <summary>
            The sdlk backspace sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_TAB">
            <summary>
            The sdlk tab sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SPACE">
            <summary>
            The sdlk space sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_EXCLAIM">
            <summary>
            The sdlk exclaim sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_QUOTEDBL">
            <summary>
            The sdlk quotedbl sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_HASH">
            <summary>
            The sdlk hash sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PERCENT">
            <summary>
            The sdlk percent sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_DOLLAR">
            <summary>
            The sdlk dollar sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AMPERSAND">
            <summary>
            The sdlk ampersand sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_QUOTE">
            <summary>
            The sdlk quote sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LEFTPAREN">
            <summary>
            The sdlk leftparen sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RIGHTPAREN">
            <summary>
            The sdlk rightparen sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_ASTERISK">
            <summary>
            The sdlk asterisk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PLUS">
            <summary>
            The sdlk plus sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_COMMA">
            <summary>
            The sdlk comma sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_MINUS">
            <summary>
            The sdlk minus sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PERIOD">
            <summary>
            The sdlk period sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SLASH">
            <summary>
            The sdlk slash sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_0">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_1">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_2">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_3">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_4">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_5">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_6">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_7">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_8">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_9">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_COLON">
            <summary>
            The sdlk colon sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SEMICOLON">
            <summary>
            The sdlk semicolon sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LESS">
            <summary>
            The sdlk less sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_EQUALS">
            <summary>
            The sdlk equals sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_GREATER">
            <summary>
            The sdlk greater sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_QUESTION">
            <summary>
            The sdlk question sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AT">
            <summary>
            The sdlk at sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LEFTBRACKET">
            <summary>
            The sdlk leftbracket sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_BACKSLASH">
            <summary>
            The sdlk backslash sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RIGHTBRACKET">
            <summary>
            The sdlk rightbracket sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CARET">
            <summary>
            The sdlk caret sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_UNDERSCORE">
            <summary>
            The sdlk underscore sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_BACKQUOTE">
            <summary>
            The sdlk backquote sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_a">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_b">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_c">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_d">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_e">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_f">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_g">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_h">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_i">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_j">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_k">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_l">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_m">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_n">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_o">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_p">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_q">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_r">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_s">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_t">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_u">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_v">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_w">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_x">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_y">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_z">
            <summary>
            The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CAPSLOCK">
            <summary>
            The sdlk capslock sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F1">
            <summary>
            The sdlk f1 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F2">
            <summary>
            The sdlk f2 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F3">
            <summary>
            The sdlk f3 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F4">
            <summary>
            The sdlk f4 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F5">
            <summary>
            The sdlk f5 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F6">
            <summary>
            The sdlk f6 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F7">
            <summary>
            The sdlk f7 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F8">
            <summary>
            The sdlk f8 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F9">
            <summary>
            The sdlk f9 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F10">
            <summary>
            The sdlk f10 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F11">
            <summary>
            The sdlk f11 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F12">
            <summary>
            The sdlk f12 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PRINTSCREEN">
            <summary>
            The sdlk printscreen sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SCROLLLOCK">
            <summary>
            The sdlk scrolllock sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PAUSE">
            <summary>
            The sdlk pause sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_INSERT">
            <summary>
            The sdlk insert sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_HOME">
            <summary>
            The sdlk home sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PAGEUP">
            <summary>
            The sdlk pageup sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_DELETE">
            <summary>
            The sdlk delete sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_END">
            <summary>
            The sdlk end sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PAGEDOWN">
            <summary>
            The sdlk pagedown sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RIGHT">
            <summary>
            The sdlk right sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LEFT">
            <summary>
            The sdlk left sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_DOWN">
            <summary>
            The sdlk down sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_UP">
            <summary>
            The sdlk up sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_NUMLOCKCLEAR">
            <summary>
            The sdlk numlockclear sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_DIVIDE">
            <summary>
            The sdlk kp divide sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MULTIPLY">
            <summary>
            The sdlk kp multiply sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MINUS">
            <summary>
            The sdlk kp minus sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_PLUS">
            <summary>
            The sdlk kp plus sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_ENTER">
            <summary>
            The sdlk kp enter sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_1">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_2">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_3">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_4">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_5">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_6">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_7">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_8">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_9">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_0">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_PERIOD">
            <summary>
            The sdlk kp period sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_APPLICATION">
            <summary>
            The sdlk application sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_POWER">
            <summary>
            The sdlk power sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_EQUALS">
            <summary>
            The sdlk kp equals sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F13">
            <summary>
            The sdlk f13 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F14">
            <summary>
            The sdlk f14 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F15">
            <summary>
            The sdlk f15 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F16">
            <summary>
            The sdlk f16 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F17">
            <summary>
            The sdlk f17 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F18">
            <summary>
            The sdlk f18 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F19">
            <summary>
            The sdlk f19 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F20">
            <summary>
            The sdlk f20 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F21">
            <summary>
            The sdlk f21 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F22">
            <summary>
            The sdlk f22 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F23">
            <summary>
            The sdlk f23 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_F24">
            <summary>
            The sdlk f24 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_EXECUTE">
            <summary>
            The sdlk execute sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_HELP">
            <summary>
            The sdlk help sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_MENU">
            <summary>
            The sdlk menu sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SELECT">
            <summary>
            The sdlk select sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_STOP">
            <summary>
            The sdlk stop sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AGAIN">
            <summary>
            The sdlk again sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_UNDO">
            <summary>
            The sdlk undo sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CUT">
            <summary>
            The sdlk cut sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_COPY">
            <summary>
            The sdlk copy sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PASTE">
            <summary>
            The sdlk paste sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_FIND">
            <summary>
            The sdlk find sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_MUTE">
            <summary>
            The sdlk mute sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_VOLUMEUP">
            <summary>
            The sdlk volumeup sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_VOLUMEDOWN">
            <summary>
            The sdlk volumedown sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_COMMA">
            <summary>
            The sdlk kp comma sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_EQUALSAS400">
            <summary>
            The sdlk kp equalsas400 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_ALTERASE">
            <summary>
            The sdlk alterase sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SYSREQ">
            <summary>
            The sdlk sysreq sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CANCEL">
            <summary>
            The sdlk cancel sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CLEAR">
            <summary>
            The sdlk clear sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_PRIOR">
            <summary>
            The sdlk prior sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RETURN2">
            <summary>
            The sdlk return2 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SEPARATOR">
            <summary>
            The sdlk separator sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_OUT">
            <summary>
            The sdlk out sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_OPER">
            <summary>
            The sdlk oper sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CLEARAGAIN">
            <summary>
            The sdlk clearagain sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CRSEL">
            <summary>
            The sdlk crsel sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_EXSEL">
            <summary>
            The sdlk exsel sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_00">
            <summary>
            The sdlk kp 00 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_000">
            <summary>
            The sdlk kp 000 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_THOUSANDSSEPARATOR">
            <summary>
            The sdlk thousandsseparator sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_DECIMALSEPARATOR">
            <summary>
            The sdlk decimalseparator sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CURRENCYUNIT">
            <summary>
            The sdlk currencyunit sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CURRENCYSUBUNIT">
            <summary>
            The sdlk currencysubunit sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_LEFTPAREN">
            <summary>
            The sdlk kp leftparen sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_RIGHTPAREN">
            <summary>
            The sdlk kp rightparen sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_LEFTBRACE">
            <summary>
            The sdlk kp leftbrace sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_RIGHTBRACE">
            <summary>
            The sdlk kp rightbrace sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_TAB">
            <summary>
            The sdlk kp tab sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_BACKSPACE">
            <summary>
            The sdlk kp backspace sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_A">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_B">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_C">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_D">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_E">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_F">
            <summary>
            The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_XOR">
            <summary>
            The sdlk kp xor sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_POWER">
            <summary>
            The sdlk kp power sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_PERCENT">
            <summary>
            The sdlk kp percent sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_LESS">
            <summary>
            The sdlk kp less sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_GREATER">
            <summary>
            The sdlk kp greater sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_AMPERSAND">
            <summary>
            The sdlk kp ampersand sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_DBLAMPERSAND">
            <summary>
            The sdlk kp dblampersand sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_VERTICALBAR">
            <summary>
            The sdlk kp verticalbar sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_DBLVERTICALBAR">
            <summary>
            The sdlk kp dblverticalbar sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_COLON">
            <summary>
            The sdlk kp colon sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_HASH">
            <summary>
            The sdlk kp hash sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_SPACE">
            <summary>
            The sdlk kp space sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_AT">
            <summary>
            The sdlk kp at sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_EXCLAM">
            <summary>
            The sdlk kp exclam sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMSTORE">
            <summary>
            The sdlk kp memstore sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMRECALL">
            <summary>
            The sdlk kp memrecall sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMCLEAR">
            <summary>
            The sdlk kp memclear sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMADD">
            <summary>
            The sdlk kp memadd sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMSUBTRACT">
            <summary>
            The sdlk kp memsubtract sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMMULTIPLY">
            <summary>
            The sdlk kp memmultiply sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_MEMDIVIDE">
            <summary>
            The sdlk kp memdivide sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_PLUSMINUS">
            <summary>
            The sdlk kp plusminus sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_CLEAR">
            <summary>
            The sdlk kp clear sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_CLEARENTRY">
            <summary>
            The sdlk kp clearentry sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_BINARY">
            <summary>
            The sdlk kp binary sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_OCTAL">
            <summary>
            The sdlk kp octal sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_DECIMAL">
            <summary>
            The sdlk kp decimal sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KP_HEXADECIMAL">
            <summary>
            The sdlk kp hexadecimal sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LCTRL">
            <summary>
            The sdlk lctrl sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LSHIFT">
            <summary>
            The sdlk lshift sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LALT">
            <summary>
            The sdlk lalt sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_LGUI">
            <summary>
            The sdlk lgui sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RCTRL">
            <summary>
            The sdlk rctrl sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RSHIFT">
            <summary>
            The sdlk rshift sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RALT">
            <summary>
            The sdlk ralt sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_RGUI">
            <summary>
            The sdlk rgui sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_MODE">
            <summary>
            The sdlk mode sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIONEXT">
            <summary>
            The sdlk audionext sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIOPREV">
            <summary>
            The sdlk audioprev sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIOSTOP">
            <summary>
            The sdlk audiostop sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIOPLAY">
            <summary>
            The sdlk audioplay sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIOMUTE">
            <summary>
            The sdlk audiomute sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_MEDIASELECT">
            <summary>
            The sdlk mediaselect sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_WWW">
            <summary>
            The sdlk www sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_MAIL">
            <summary>
            The sdlk mail sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_CALCULATOR">
            <summary>
            The sdlk calculator sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_COMPUTER">
            <summary>
            The sdlk computer sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_SEARCH">
            <summary>
            The sdlk ac search sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_HOME">
            <summary>
            The sdlk ac home sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_BACK">
            <summary>
            The sdlk ac back sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_FORWARD">
            <summary>
            The sdlk ac forward sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_STOP">
            <summary>
            The sdlk ac stop sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_REFRESH">
            <summary>
            The sdlk ac refresh sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AC_BOOKMARKS">
            <summary>
            The sdlk ac bookmarks sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_BRIGHTNESSDOWN">
            <summary>
            The sdlk brightnessdown sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_BRIGHTNESSUP">
            <summary>
            The sdlk brightnessup sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_DISPLAYSWITCH">
            <summary>
            The sdlk displayswitch sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KBDILLUMTOGGLE">
            <summary>
            The sdlk kbdillumtoggle sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KBDILLUMDOWN">
            <summary>
            The sdlk kbdillumdown sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_KBDILLUMUP">
            <summary>
            The sdlk kbdillumup sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_EJECT">
            <summary>
            The sdlk eject sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_SLEEP">
            <summary>
            The sdlk sleep sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_APP1">
            <summary>
            The sdlk app1 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_APP2">
            <summary>
            The sdlk app2 sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIOREWIND">
            <summary>
            The sdlk audiorewind sdl keycode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keycode.SDLK_AUDIOFASTFORWARD">
            <summary>
            The sdlk audiofastforward sdl keycode
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Keymod">
            <summary>
            The sdl keymod enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_NONE">
            <summary>
            The kmod none sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_LSHIFT">
            <summary>
            The kmod lshift sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_RSHIFT">
            <summary>
            The kmod rshift sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_LCTRL">
            <summary>
            The kmod lctrl sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_RCTRL">
            <summary>
            The kmod rctrl sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_LALT">
            <summary>
            The kmod lalt sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_RALT">
            <summary>
            The kmod ralt sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_LGUI">
            <summary>
            The kmod lgui sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_RGUI">
            <summary>
            The kmod rgui sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_NUM">
            <summary>
            The kmod num sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_CAPS">
            <summary>
            The kmod caps sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_MODE">
            <summary>
            The kmod mode sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_SCROLL">
            <summary>
            The kmod scroll sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_CTRL">
            <summary>
            The kmod ctrl sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_SHIFT">
            <summary>
            The kmod shift sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_ALT">
            <summary>
            The kmod alt sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_GUI">
            <summary>
            The kmod gui sdl keymod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keymod.KMOD_RESERVED">
            <summary>
            The kmod reserved sdl keymod
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Keysym">
            <summary>
            The sdl keysym
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keysym.scancode">
            <summary>
            The scancode
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keysym.sym">
            <summary>
            The sym
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keysym.mod">
            <summary>
            The mod
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Keysym.unicode">
            <summary>
            The unicode
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetKeyboardFocus">
            <summary>
            Sdls the get keyboard focus
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetKeyboardState(System.Int32@)">
            <summary>
            Sdls the get keyboard state using the specified numkeys
            </summary>
            <param name="numkeys">The numkeys</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetModState">
            <summary>
            Sdls the get mod state
            </summary>
            <returns>The sdl keymod</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetModState(SDL2.SDL.SDL_Keymod)">
            <summary>
            Sdls the set mod state using the specified modstate
            </summary>
            <param name="modstate">The modstate</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetKeyFromScancode(SDL2.SDL.SDL_Scancode)">
            <summary>
            Sdls the get key from scancode using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetScancodeFromKey(SDL2.SDL.SDL_Keycode)">
            <summary>
            Sdls the get scancode from key using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetScancodeName(SDL2.SDL.SDL_Scancode)">
            <summary>
            Internals the sdl get scancode name using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetScancodeName(SDL2.SDL.SDL_Scancode)">
            <summary>
            Sdls the get scancode name using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetScancodeFromName(System.Byte*)">
            <summary>
            Internals the sdl get scancode from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetScancodeFromName(System.String)">
            <summary>
            Sdls the get scancode from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetKeyName(SDL2.SDL.SDL_Keycode)">
            <summary>
            Internals the sdl get key name using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetKeyName(SDL2.SDL.SDL_Keycode)">
            <summary>
            Sdls the get key name using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetKeyFromName(System.Byte*)">
            <summary>
            Internals the sdl get key from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetKeyFromName(System.String)">
            <summary>
            Sdls the get key from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_StartTextInput">
            <summary>
            Sdls the start text input
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_IsTextInputActive">
            <summary>
            Sdls the is text input active
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_StopTextInput">
            <summary>
            Sdls the stop text input
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_SetTextInputRect(SDL2.SDL.SDL_Rect@)">
            <summary>
            Sdls the set text input rect using the specified rect
            </summary>
            <param name="rect">The rect</param>
        </member>
        <member name="M:SDL2.SDL.SDL_HasScreenKeyboardSupport">
            <summary>
            Sdls the has screen keyboard support
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IsScreenKeyboardShown(System.IntPtr)">
            <summary>
            Sdls the is screen keyboard shown using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_SystemCursor">
            <summary>
            The sdl systemcursor enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_ARROW">
            <summary>
            The sdl system cursor arrow sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_IBEAM">
            <summary>
            The sdl system cursor ibeam sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_WAIT">
            <summary>
            The sdl system cursor wait sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_CROSSHAIR">
            <summary>
            The sdl system cursor crosshair sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_WAITARROW">
            <summary>
            The sdl system cursor waitarrow sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZENWSE">
            <summary>
            The sdl system cursor sizenwse sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZENESW">
            <summary>
            The sdl system cursor sizenesw sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZEWE">
            <summary>
            The sdl system cursor sizewe sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZENS">
            <summary>
            The sdl system cursor sizens sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZEALL">
            <summary>
            The sdl system cursor sizeall sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_NO">
            <summary>
            The sdl system cursor no sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_HAND">
            <summary>
            The sdl system cursor hand sdl systemcursor
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SystemCursor.SDL_NUM_SYSTEM_CURSORS">
            <summary>
            The sdl num system cursors sdl systemcursor
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetMouseFocus">
            <summary>
            Sdls the get mouse focus
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetMouseState(System.Int32@,System.Int32@)">
            <summary>
            Sdls the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetMouseState(System.IntPtr,System.Int32@)">
            <summary>
            Sdls the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetMouseState(System.Int32@,System.IntPtr)">
            <summary>
            Sdls the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetMouseState(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetGlobalMouseState(System.Int32@,System.Int32@)">
            <summary>
            Sdls the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetGlobalMouseState(System.IntPtr,System.Int32@)">
            <summary>
            Sdls the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetGlobalMouseState(System.Int32@,System.IntPtr)">
            <summary>
            Sdls the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetGlobalMouseState(System.IntPtr,System.IntPtr)">
            <summary>
            Sdls the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRelativeMouseState(System.Int32@,System.Int32@)">
            <summary>
            Sdls the get relative mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_WarpMouseInWindow(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the warp mouse in window using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:SDL2.SDL.SDL_WarpMouseGlobal(System.Int32,System.Int32)">
            <summary>
            Sdls the warp mouse global using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetRelativeMouseMode(SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the set relative mouse mode using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CaptureMouse(SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the capture mouse using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetRelativeMouseMode">
            <summary>
            Sdls the get relative mouse mode
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sdls the create cursor using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="mask">The mask</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="hot_x">The hot</param>
            <param name="hot_y">The hot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateColorCursor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the create color cursor using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="hot_x">The hot</param>
            <param name="hot_y">The hot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_CreateSystemCursor(SDL2.SDL.SDL_SystemCursor)">
            <summary>
            Sdls the create system cursor using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SetCursor(System.IntPtr)">
            <summary>
            Sdls the set cursor using the specified cursor
            </summary>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetCursor">
            <summary>
            Sdls the get cursor
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_FreeCursor(System.IntPtr)">
            <summary>
            Sdls the free cursor using the specified cursor
            </summary>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:SDL2.SDL.SDL_ShowCursor(System.Int32)">
            <summary>
            Sdls the show cursor using the specified toggle
            </summary>
            <param name="toggle">The toggle</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_BUTTON(System.UInt32)">
            <summary>
            Sdls the button using the specified x
            </summary>
            <param name="X">The </param>
            <returns>The uint</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_LEFT">
            <summary>
            The sdl button left
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_MIDDLE">
            <summary>
            The sdl button middle
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_RIGHT">
            <summary>
            The sdl button right
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_X1">
            <summary>
            The sdl button x1
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_X2">
            <summary>
            The sdl button x2
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_LMASK">
            <summary>
            The sdl button left
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_MMASK">
            <summary>
            The sdl button middle
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_RMASK">
            <summary>
            The sdl button right
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_X1MASK">
            <summary>
            The sdl button x1
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_BUTTON_X2MASK">
            <summary>
            The sdl button x2
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TOUCH_MOUSEID">
            <summary>
            The max value
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Finger">
            <summary>
            The sdl finger
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Finger.id">
            <summary>
            The id
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Finger.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Finger.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Finger.pressure">
            <summary>
            The pressure
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_TouchDeviceType">
            <summary>
            The sdl touchdevicetype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchDeviceType.SDL_TOUCH_DEVICE_INVALID">
            <summary>
            The sdl touch device invalid sdl touchdevicetype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchDeviceType.SDL_TOUCH_DEVICE_DIRECT">
            <summary>
            The sdl touch device direct sdl touchdevicetype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchDeviceType.SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE">
            <summary>
            The sdl touch device indirect absolute sdl touchdevicetype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_TouchDeviceType.SDL_TOUCH_DEVICE_INDIRECT_RELATIVE">
            <summary>
            The sdl touch device indirect relative sdl touchdevicetype
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumTouchDevices">
            \brief Get the number of registered touch devices.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchDevice(System.Int32)">
            \brief Get the touch ID with the given index, or 0 if the index is invalid.
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumTouchFingers(System.Int64)">
            \brief Get the number of active fingers for a given touch device.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchFinger(System.Int64,System.Int32)">
            \brief Get the finger object of the given touch, with the given index.
            Returns pointer to SDL_Finger.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchDeviceType(System.Int64)">
            <summary>
            Sdls the get touch device type using the specified touch id
            </summary>
            <param name="touchID">The touch id</param>
            <returns>The sdl touch device type</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_CENTERED">
            <summary>
            The sdl hat centered
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_UP">
            <summary>
            The sdl hat up
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_RIGHT">
            <summary>
            The sdl hat right
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_DOWN">
            <summary>
            The sdl hat down
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_LEFT">
            <summary>
            The sdl hat left
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_RIGHTUP">
            <summary>
            The sdl hat up
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_RIGHTDOWN">
            <summary>
            The sdl hat down
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_LEFTUP">
            <summary>
            The sdl hat up
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAT_LEFTDOWN">
            <summary>
            The sdl hat down
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoystickPowerLevel">
            <summary>
            The sdl joystickpowerlevel enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_UNKNOWN">
            <summary>
            The sdl joystick power unknown sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_EMPTY">
            <summary>
            The sdl joystick power empty sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_LOW">
            <summary>
            The sdl joystick power low sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_MEDIUM">
            <summary>
            The sdl joystick power medium sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_FULL">
            <summary>
            The sdl joystick power full sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_WIRED">
            <summary>
            The sdl joystick power wired sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickPowerLevel.SDL_JOYSTICK_POWER_MAX">
            <summary>
            The sdl joystick power max sdl joystickpowerlevel
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_JoystickType">
            <summary>
            The sdl joysticktype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_UNKNOWN">
            <summary>
            The sdl joystick type unknown sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_GAMECONTROLLER">
            <summary>
            The sdl joystick type gamecontroller sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_WHEEL">
            <summary>
            The sdl joystick type wheel sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_ARCADE_STICK">
            <summary>
            The sdl joystick type arcade stick sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_FLIGHT_STICK">
            <summary>
            The sdl joystick type flight stick sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_DANCE_PAD">
            <summary>
            The sdl joystick type dance pad sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_GUITAR">
            <summary>
            The sdl joystick type guitar sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_DRUM_KIT">
            <summary>
            The sdl joystick type drum kit sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_JoystickType.SDL_JOYSTICK_TYPE_ARCADE_PAD">
            <summary>
            The sdl joystick type arcade pad sdl joysticktype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_IPHONE_MAX_GFORCE">
            <summary>
            The sdl iphone max gforce
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickRumble(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Sdls the joystick rumble using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="low_frequency_rumble">The low frequency rumble</param>
            <param name="high_frequency_rumble">The high frequency rumble</param>
            <param name="duration_ms">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickRumbleTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Sdls the joystick rumble triggers using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="left_rumble">The left rumble</param>
            <param name="right_rumble">The right rumble</param>
            <param name="duration_ms">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickClose(System.IntPtr)">
            <summary>
            Sdls the joystick close using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickEventState(System.Int32)">
            <summary>
            Sdls the joystick event state using the specified state
            </summary>
            <param name="state">The state</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetAxis(System.IntPtr,System.Int32)">
            <summary>
            Sdls the joystick get axis using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <returns>The short</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetAxisInitialState(System.IntPtr,System.Int32,System.UInt16@)">
            <summary>
            Sdls the joystick get axis initial state using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <param name="state">The state</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Sdls the joystick get ball using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="ball">The ball</param>
            <param name="dx">The dx</param>
            <param name="dy">The dy</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetButton(System.IntPtr,System.Int32)">
            <summary>
            Sdls the joystick get button using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetHat(System.IntPtr,System.Int32)">
            <summary>
            Sdls the joystick get hat using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="hat">The hat</param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_JoystickName(System.IntPtr)">
            <summary>
            Internals the sdl joystick name using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickName(System.IntPtr)">
            <summary>
            Sdls the joystick name using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_JoystickNameForIndex(System.Int32)">
            <summary>
            Internals the sdl joystick name for index using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickNameForIndex(System.Int32)">
            <summary>
            Sdls the joystick name for index using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickNumAxes(System.IntPtr)">
            <summary>
            Sdls the joystick num axes using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickNumBalls(System.IntPtr)">
            <summary>
            Sdls the joystick num balls using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickNumButtons(System.IntPtr)">
            <summary>
            Sdls the joystick num buttons using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickNumHats(System.IntPtr)">
            <summary>
            Sdls the joystick num hats using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickOpen(System.Int32)">
            <summary>
            Sdls the joystick open using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickUpdate">
            <summary>
            Sdls the joystick update
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_NumJoysticks">
            <summary>
            Sdls the num joysticks
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetDeviceGUID(System.Int32)">
            <summary>
            Sdls the joystick get device guid using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The guid</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetGUID(System.IntPtr)">
            <summary>
            Sdls the joystick get guid using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The guid</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetGUIDString(System.Guid,System.Byte[],System.Int32)">
            <summary>
            Sdls the joystick get guid string using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="pszGUID">The psz guid</param>
            <param name="cbGUID">The cb guid</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_JoystickGetGUIDFromString(System.Byte*)">
            <summary>
            Internals the sdl joystick get guid from string using the specified pch guid
            </summary>
            <param name="pchGUID">The pch guid</param>
            <returns>The guid</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetGUIDFromString(System.String)">
            <summary>
            Sdls the joystick get guid from string using the specified pch guid
            </summary>
            <param name="pchGuid">The pch guid</param>
            <returns>The guid</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetDeviceVendor(System.Int32)">
            <summary>
            Sdls the joystick get device vendor using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetDeviceProduct(System.Int32)">
            <summary>
            Sdls the joystick get device product using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetDeviceProductVersion(System.Int32)">
            <summary>
            Sdls the joystick get device product version using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetDeviceType(System.Int32)">
            <summary>
            Sdls the joystick get device type using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The sdl joystick type</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetDeviceInstanceID(System.Int32)">
            <summary>
            Sdls the joystick get device instance id using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetVendor(System.IntPtr)">
            <summary>
            Sdls the joystick get vendor using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetProduct(System.IntPtr)">
            <summary>
            Sdls the joystick get product using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetProductVersion(System.IntPtr)">
            <summary>
            Sdls the joystick get product version using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_JoystickGetSerial(System.IntPtr)">
            <summary>
            Internals the sdl joystick get serial using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetSerial(System.IntPtr)">
            <summary>
            Sdls the joystick get serial using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetType(System.IntPtr)">
            <summary>
            Sdls the joystick get type using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl joystick type</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickGetAttached(System.IntPtr)">
            <summary>
            Sdls the joystick get attached using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickInstanceID(System.IntPtr)">
            <summary>
            Sdls the joystick instance id using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickCurrentPowerLevel(System.IntPtr)">
            <summary>
            Sdls the joystick current power level using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl joystick power level</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickFromInstanceID(System.Int32)">
            <summary>
            Sdls the joystick from instance id using the specified instance id
            </summary>
            <param name="instance_id">The instance id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockJoysticks">
            <summary>
            Sdls the lock joysticks
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_UnlockJoysticks">
            <summary>
            Sdls the unlock joysticks
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickFromPlayerIndex(System.Int32)">
            <summary>
            Sdls the joystick from player index using the specified player index
            </summary>
            <param name="player_index">The player index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickSetPlayerIndex(System.IntPtr,System.Int32)">
            <summary>
            Sdls the joystick set player index using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="player_index">The player index</param>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickAttachVirtual(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sdls the joystick attach virtual using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="naxes">The naxes</param>
            <param name="nbuttons">The nbuttons</param>
            <param name="nhats">The nhats</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickDetachVirtual(System.Int32)">
            <summary>
            Sdls the joystick detach virtual using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickIsVirtual(System.Int32)">
            <summary>
            Sdls the joystick is virtual using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickSetVirtualAxis(System.IntPtr,System.Int32,System.Int16)">
            <summary>
            Sdls the joystick set virtual axis using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickSetVirtualButton(System.IntPtr,System.Int32,System.Byte)">
            <summary>
            Sdls the joystick set virtual button using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickSetVirtualHat(System.IntPtr,System.Int32,System.Byte)">
            <summary>
            Sdls the joystick set virtual hat using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="hat">The hat</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickHasLED(System.IntPtr)">
            <summary>
            Sdls the joystick has led using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickHasRumble(System.IntPtr)">
            <summary>
            Sdls the joystick has rumble using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickHasRumbleTriggers(System.IntPtr)">
            <summary>
            Sdls the joystick has rumble triggers using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickSetLED(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the joystick set led using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickSendEffect(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sdls the joystick send effect using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_GameControllerBindType">
            <summary>
            The sdl gamecontrollerbindtype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerBindType.SDL_CONTROLLER_BINDTYPE_NONE">
            <summary>
            The sdl controller bindtype none sdl gamecontrollerbindtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerBindType.SDL_CONTROLLER_BINDTYPE_BUTTON">
            <summary>
            The sdl controller bindtype button sdl gamecontrollerbindtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerBindType.SDL_CONTROLLER_BINDTYPE_AXIS">
            <summary>
            The sdl controller bindtype axis sdl gamecontrollerbindtype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerBindType.SDL_CONTROLLER_BINDTYPE_HAT">
            <summary>
            The sdl controller bindtype hat sdl gamecontrollerbindtype
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GameControllerAxis">
            <summary>
            The sdl gamecontrolleraxis enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_INVALID">
            <summary>
            The sdl controller axis invalid sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_LEFTX">
            <summary>
            The sdl controller axis leftx sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_LEFTY">
            <summary>
            The sdl controller axis lefty sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_RIGHTX">
            <summary>
            The sdl controller axis rightx sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_RIGHTY">
            <summary>
            The sdl controller axis righty sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_TRIGGERLEFT">
            <summary>
            The sdl controller axis triggerleft sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_TRIGGERRIGHT">
            <summary>
            The sdl controller axis triggerright sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerAxis.SDL_CONTROLLER_AXIS_MAX">
            <summary>
            The sdl controller axis max sdl gamecontrolleraxis
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GameControllerButton">
            <summary>
            The sdl gamecontrollerbutton enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_INVALID">
            <summary>
            The sdl controller button invalid sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_A">
            <summary>
            The sdl controller button sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_B">
            <summary>
            The sdl controller button sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_X">
            <summary>
            The sdl controller button sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_Y">
            <summary>
            The sdl controller button sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_BACK">
            <summary>
            The sdl controller button back sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_GUIDE">
            <summary>
            The sdl controller button guide sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_START">
            <summary>
            The sdl controller button start sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_LEFTSTICK">
            <summary>
            The sdl controller button leftstick sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_RIGHTSTICK">
            <summary>
            The sdl controller button rightstick sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_LEFTSHOULDER">
            <summary>
            The sdl controller button leftshoulder sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_RIGHTSHOULDER">
            <summary>
            The sdl controller button rightshoulder sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_DPAD_UP">
            <summary>
            The sdl controller button dpad up sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_DPAD_DOWN">
            <summary>
            The sdl controller button dpad down sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_DPAD_LEFT">
            <summary>
            The sdl controller button dpad left sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_DPAD_RIGHT">
            <summary>
            The sdl controller button dpad right sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_MISC1">
            <summary>
            The sdl controller button misc1 sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_PADDLE1">
            <summary>
            The sdl controller button paddle1 sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_PADDLE2">
            <summary>
            The sdl controller button paddle2 sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_PADDLE3">
            <summary>
            The sdl controller button paddle3 sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_PADDLE4">
            <summary>
            The sdl controller button paddle4 sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_TOUCHPAD">
            <summary>
            The sdl controller button touchpad sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButton.SDL_CONTROLLER_BUTTON_MAX">
            <summary>
            The sdl controller button max sdl gamecontrollerbutton
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GameControllerType">
            <summary>
            The sdl gamecontrollertype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_UNKNOWN">
            <summary>
            The sdl controller type unknown sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_XBOX360">
            <summary>
            The sdl controller type xbox360 sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_XBOXONE">
            <summary>
            The sdl controller type xboxone sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_PS3">
            <summary>
            The sdl controller type ps3 sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_PS4">
            <summary>
            The sdl controller type ps4 sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO">
            <summary>
            The sdl controller type nintendo switch pro sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_VIRTUAL">
            <summary>
            The sdl controller type virtual sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_PS5">
            <summary>
            The sdl controller type ps5 sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_AMAZON_LUNA">
            <summary>
            The sdl controller type amazon luna sdl gamecontrollertype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerType.SDL_CONTROLLER_TYPE_GOOGLE_STADIA">
            <summary>
            The sdl controller type google stadia sdl gamecontrollertype
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_GameControllerButtonBind_hat">
            <summary>
            The internal gamecontrollerbuttonbind hat
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_GameControllerButtonBind_hat.hat">
            <summary>
            The hat
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_GameControllerButtonBind_hat.hat_mask">
            <summary>
            The hat mask
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_GameControllerButtonBind_union">
            <summary>
            The internal gamecontrollerbuttonbind union
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_GameControllerButtonBind_union.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_GameControllerButtonBind_union.axis">
            <summary>
            The axis
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_GameControllerButtonBind_union.hat">
            <summary>
            The hat
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_GameControllerButtonBind">
            <summary>
            The sdl gamecontrollerbuttonbind
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButtonBind.bindType">
            <summary>
            The bind type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_GameControllerButtonBind.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_SDL_GameControllerButtonBind">
            <summary>
            The internal sdl gamecontrollerbuttonbind
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_GameControllerButtonBind.bindType">
            <summary>
            The bind type
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_GameControllerButtonBind.unionVal0">
            <summary>
            The union val
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SDL_GameControllerButtonBind.unionVal1">
            <summary>
            The union val
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerAddMapping(System.Byte*)">
            <summary>
            Internals the sdl game controller add mapping using the specified mapping string
            </summary>
            <param name="mappingString">The mapping string</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerAddMapping(System.String)">
            <summary>
            Sdls the game controller add mapping using the specified mapping string
            </summary>
            <param name="mappingString">The mapping string</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerNumMappings">
            <summary>
            Sdls the game controller num mappings
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerMappingForIndex(System.Int32)">
            <summary>
            Internals the sdl game controller mapping for index using the specified mapping index
            </summary>
            <param name="mapping_index">The mapping index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerMappingForIndex(System.Int32)">
            <summary>
            Sdls the game controller mapping for index using the specified mapping index
            </summary>
            <param name="mapping_index">The mapping index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerAddMappingsFromRW(System.IntPtr,System.Int32)">
            <summary>
            Internals the sdl game controller add mappings from rw using the specified rw
            </summary>
            <param name="rw">The rw</param>
            <param name="freerw">The freerw</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerAddMappingsFromFile(System.String)">
            <summary>
            Sdls the game controller add mappings from file using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerMappingForGUID(System.Guid)">
            <summary>
            Internals the sdl game controller mapping for guid using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerMappingForGUID(System.Guid)">
            <summary>
            Sdls the game controller mapping for guid using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerMapping(System.IntPtr)">
            <summary>
            Internals the sdl game controller mapping using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerMapping(System.IntPtr)">
            <summary>
            Sdls the game controller mapping using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IsGameController(System.Int32)">
            <summary>
            Sdls the is game controller using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerNameForIndex(System.Int32)">
            <summary>
            Internals the sdl game controller name for index using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerNameForIndex(System.Int32)">
            <summary>
            Sdls the game controller name for index using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerMappingForDeviceIndex(System.Int32)">
            <summary>
            Internals the sdl game controller mapping for device index using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerMappingForDeviceIndex(System.Int32)">
            <summary>
            Sdls the game controller mapping for device index using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerOpen(System.Int32)">
            <summary>
            Sdls the game controller open using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerName(System.IntPtr)">
            <summary>
            Internals the sdl game controller name using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerName(System.IntPtr)">
            <summary>
            Sdls the game controller name using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetVendor(System.IntPtr)">
            <summary>
            Sdls the game controller get vendor using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetProduct(System.IntPtr)">
            <summary>
            Sdls the game controller get product using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetProductVersion(System.IntPtr)">
            <summary>
            Sdls the game controller get product version using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetSerial(System.IntPtr)">
            <summary>
            Internals the sdl game controller get serial using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetSerial(System.IntPtr)">
            <summary>
            Sdls the game controller get serial using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetAttached(System.IntPtr)">
            <summary>
            Sdls the game controller get attached using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetJoystick(System.IntPtr)">
            <summary>
            Sdls the game controller get joystick using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerEventState(System.Int32)">
            <summary>
            Sdls the game controller event state using the specified state
            </summary>
            <param name="state">The state</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerUpdate">
            <summary>
            Sdls the game controller update
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetAxisFromString(System.Byte*)">
            <summary>
            Internals the sdl game controller get axis from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller axis</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetAxisFromString(System.String)">
            <summary>
            Sdls the game controller get axis from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller axis</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetStringForAxis(SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Internals the sdl game controller get string for axis using the specified axis
            </summary>
            <param name="axis">The axis</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetStringForAxis(SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Sdls the game controller get string for axis using the specified axis
            </summary>
            <param name="axis">The axis</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetBindForAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Internals the sdl game controller get bind for axis using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="axis">The axis</param>
            <returns>The internal sdl game controller button bind</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetBindForAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Sdls the game controller get bind for axis using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="axis">The axis</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Sdls the game controller get axis using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="axis">The axis</param>
            <returns>The short</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetButtonFromString(System.Byte*)">
            <summary>
            Internals the sdl game controller get button from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller button</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetButtonFromString(System.String)">
            <summary>
            Sdls the game controller get button from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller button</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetStringForButton(SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Internals the sdl game controller get string for button using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetStringForButton(SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Sdls the game controller get string for button using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetBindForButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Internals the sdl game controller get bind for button using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="button">The button</param>
            <returns>The internal sdl game controller button bind</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetBindForButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Sdls the game controller get bind for button using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="button">The button</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Sdls the game controller get button using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerRumble(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Sdls the game controller rumble using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="low_frequency_rumble">The low frequency rumble</param>
            <param name="high_frequency_rumble">The high frequency rumble</param>
            <param name="duration_ms">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerRumbleTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Sdls the game controller rumble triggers using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="left_rumble">The left rumble</param>
            <param name="right_rumble">The right rumble</param>
            <param name="duration_ms">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerClose(System.IntPtr)">
            <summary>
            Sdls the game controller close using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetAppleSFSymbolsNameForButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Internals the sdl game controller get apple sf symbols name for button using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="button">The button</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetAppleSFSymbolsNameForButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Sdls the game controller get apple sf symbols name for button using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="button">The button</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GameControllerGetAppleSFSymbolsNameForAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Internals the sdl game controller get apple sf symbols name for axis using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="axis">The axis</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetAppleSFSymbolsNameForAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Sdls the game controller get apple sf symbols name for axis using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="axis">The axis</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerFromInstanceID(System.Int32)">
            <summary>
            Sdls the game controller from instance id using the specified joyid
            </summary>
            <param name="joyid">The joyid</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerTypeForIndex(System.Int32)">
            <summary>
            Sdls the game controller type for index using the specified joystick index
            </summary>
            <param name="joystick_index">The joystick index</param>
            <returns>The sdl game controller type</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetType(System.IntPtr)">
            <summary>
            Sdls the game controller get type using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The sdl game controller type</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerFromPlayerIndex(System.Int32)">
            <summary>
            Sdls the game controller from player index using the specified player index
            </summary>
            <param name="player_index">The player index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerSetPlayerIndex(System.IntPtr,System.Int32)">
            <summary>
            Sdls the game controller set player index using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="player_index">The player index</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerHasLED(System.IntPtr)">
            <summary>
            Sdls the game controller has led using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerHasRumble(System.IntPtr)">
            <summary>
            Sdls the game controller has rumble using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerHasRumbleTriggers(System.IntPtr)">
            <summary>
            Sdls the game controller has rumble triggers using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerSetLED(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sdls the game controller set led using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerHasAxis(System.IntPtr,SDL2.SDL.SDL_GameControllerAxis)">
            <summary>
            Sdls the game controller has axis using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="axis">The axis</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerHasButton(System.IntPtr,SDL2.SDL.SDL_GameControllerButton)">
            <summary>
            Sdls the game controller has button using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="button">The button</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetNumTouchpads(System.IntPtr)">
            <summary>
            Sdls the game controller get num touchpads using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetNumTouchpadFingers(System.IntPtr,System.Int32)">
            <summary>
            Sdls the game controller get num touchpad fingers using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="touchpad">The touchpad</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Sdls the game controller get touchpad finger using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="touchpad">The touchpad</param>
            <param name="finger">The finger</param>
            <param name="state">The state</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="pressure">The pressure</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerHasSensor(System.IntPtr,SDL2.SDL.SDL_SensorType)">
            <summary>
            Sdls the game controller has sensor using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerSetSensorEnabled(System.IntPtr,SDL2.SDL.SDL_SensorType,SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the game controller set sensor enabled using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="type">The type</param>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerIsSensorEnabled(System.IntPtr,SDL2.SDL.SDL_SensorType)">
            <summary>
            Sdls the game controller is sensor enabled using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetSensorData(System.IntPtr,SDL2.SDL.SDL_SensorType,System.IntPtr,System.Int32)">
            <summary>
            Sdls the game controller get sensor data using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="type">The type</param>
            <param name="data">The data</param>
            <param name="num_values">The num values</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerGetSensorDataRate(System.IntPtr,SDL2.SDL.SDL_SensorType)">
            <summary>
            Sdls the game controller get sensor data rate using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="type">The type</param>
            <returns>The float</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GameControllerSendEffect(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sdls the game controller send effect using the specified gamecontroller
            </summary>
            <param name="gamecontroller">The gamecontroller</param>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int</returns>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_CONSTANT">
            <summary>
            The sdl haptic constant
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_SINE">
            <summary>
            The sdl haptic sine
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_LEFTRIGHT">
            <summary>
            The sdl haptic leftright
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_TRIANGLE">
            <summary>
            The sdl haptic triangle
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_SAWTOOTHUP">
            <summary>
            The sdl haptic sawtoothup
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_SAWTOOTHDOWN">
            <summary>
            The sdl haptic sawtoothdown
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_SPRING">
            <summary>
            The sdl haptic spring
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_DAMPER">
            <summary>
            The sdl haptic damper
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_INERTIA">
            <summary>
            The sdl haptic inertia
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_FRICTION">
            <summary>
            The sdl haptic friction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_CUSTOM">
            <summary>
            The sdl haptic custom
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_GAIN">
            <summary>
            The sdl haptic gain
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_AUTOCENTER">
            <summary>
            The sdl haptic autocenter
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_STATUS">
            <summary>
            The sdl haptic status
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_PAUSE">
            <summary>
            The sdl haptic pause
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_POLAR">
            <summary>
            The sdl haptic polar
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_CARTESIAN">
            <summary>
            The sdl haptic cartesian
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_SPHERICAL">
            <summary>
            The sdl haptic spherical
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_STEERING_AXIS">
            <summary>
            The sdl haptic steering axis
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HAPTIC_INFINITY">
            <summary>
            The sdl haptic infinity
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticDirection">
            <summary>
            The sdl hapticdirection
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticDirection.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticDirection.dir">
            <summary>
            The dir
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticConstant">
            <summary>
            The sdl hapticconstant
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.delay">
            <summary>
            The delay
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.level">
            <summary>
            The level
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.attack_length">
            <summary>
            The attack length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.attack_level">
            <summary>
            The attack level
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.fade_length">
            <summary>
            The fade length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticConstant.fade_level">
            <summary>
            The fade level
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticPeriodic">
            <summary>
            The sdl hapticperiodic
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.delay">
            <summary>
            The delay
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.period">
            <summary>
            The period
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.magnitude">
            <summary>
            The magnitude
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.phase">
            <summary>
            The phase
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.attack_length">
            <summary>
            The attack length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.attack_level">
            <summary>
            The attack level
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.fade_length">
            <summary>
            The fade length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticPeriodic.fade_level">
            <summary>
            The fade level
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticCondition">
            <summary>
            The sdl hapticcondition
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.delay">
            <summary>
            The delay
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.right_sat">
            <summary>
            The right sat
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.left_sat">
            <summary>
            The left sat
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.right_coeff">
            <summary>
            The right coeff
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.left_coeff">
            <summary>
            The left coeff
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.deadband">
            <summary>
            The deadband
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCondition.center">
            <summary>
            The center
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticRamp">
            <summary>
            The sdl hapticramp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.delay">
            <summary>
            The delay
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.start">
            <summary>
            The start
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.end">
            <summary>
            The end
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.attack_length">
            <summary>
            The attack length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.attack_level">
            <summary>
            The attack level
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.fade_length">
            <summary>
            The fade length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticRamp.fade_level">
            <summary>
            The fade level
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticLeftRight">
            <summary>
            The sdl hapticleftright
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticLeftRight.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticLeftRight.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticLeftRight.large_magnitude">
            <summary>
            The large magnitude
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticLeftRight.small_magnitude">
            <summary>
            The small magnitude
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticCustom">
            <summary>
            The sdl hapticcustom
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.delay">
            <summary>
            The delay
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.button">
            <summary>
            The button
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.channels">
            <summary>
            The channels
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.period">
            <summary>
            The period
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.samples">
            <summary>
            The samples
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.attack_length">
            <summary>
            The attack length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.attack_level">
            <summary>
            The attack level
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.fade_length">
            <summary>
            The fade length
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticCustom.fade_level">
            <summary>
            The fade level
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_HapticEffect">
            <summary>
            The sdl hapticeffect
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.constant">
            <summary>
            The constant
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.periodic">
            <summary>
            The periodic
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.condition">
            <summary>
            The condition
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.ramp">
            <summary>
            The ramp
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.leftright">
            <summary>
            The leftright
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_HapticEffect.custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticClose(System.IntPtr)">
            <summary>
            Sdls the haptic close using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticDestroyEffect(System.IntPtr,System.Int32)">
            <summary>
            Sdls the haptic destroy effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticEffectSupported(System.IntPtr,SDL2.SDL.SDL_HapticEffect@)">
            <summary>
            Sdls the haptic effect supported using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticGetEffectStatus(System.IntPtr,System.Int32)">
            <summary>
            Sdls the haptic get effect status using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticIndex(System.IntPtr)">
            <summary>
            Sdls the haptic index using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_HapticName(System.Int32)">
            <summary>
            Internals the sdl haptic name using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticName(System.Int32)">
            <summary>
            Sdls the haptic name using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticNewEffect(System.IntPtr,SDL2.SDL.SDL_HapticEffect@)">
            <summary>
            Sdls the haptic new effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticNumAxes(System.IntPtr)">
            <summary>
            Sdls the haptic num axes using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticNumEffects(System.IntPtr)">
            <summary>
            Sdls the haptic num effects using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticNumEffectsPlaying(System.IntPtr)">
            <summary>
            Sdls the haptic num effects playing using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticOpen(System.Int32)">
            <summary>
            Sdls the haptic open using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticOpened(System.Int32)">
            <summary>
            Sdls the haptic opened using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticOpenFromJoystick(System.IntPtr)">
            <summary>
            Sdls the haptic open from joystick using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticOpenFromMouse">
            <summary>
            Sdls the haptic open from mouse
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticPause(System.IntPtr)">
            <summary>
            Sdls the haptic pause using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticQuery(System.IntPtr)">
            <summary>
            Sdls the haptic query using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticRumbleInit(System.IntPtr)">
            <summary>
            Sdls the haptic rumble init using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticRumblePlay(System.IntPtr,System.Single,System.UInt32)">
            <summary>
            Sdls the haptic rumble play using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="strength">The strength</param>
            <param name="length">The length</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticRumbleStop(System.IntPtr)">
            <summary>
            Sdls the haptic rumble stop using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticRumbleSupported(System.IntPtr)">
            <summary>
            Sdls the haptic rumble supported using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticRunEffect(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
            Sdls the haptic run effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <param name="iterations">The iterations</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticSetAutocenter(System.IntPtr,System.Int32)">
            <summary>
            Sdls the haptic set autocenter using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="autocenter">The autocenter</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticSetGain(System.IntPtr,System.Int32)">
            <summary>
            Sdls the haptic set gain using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="gain">The gain</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticStopAll(System.IntPtr)">
            <summary>
            Sdls the haptic stop all using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticStopEffect(System.IntPtr,System.Int32)">
            <summary>
            Sdls the haptic stop effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticUnpause(System.IntPtr)">
            <summary>
            Sdls the haptic unpause using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HapticUpdateEffect(System.IntPtr,System.Int32,SDL2.SDL.SDL_HapticEffect@)">
            <summary>
            Sdls the haptic update effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <param name="data">The data</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_JoystickIsHaptic(System.IntPtr)">
            <summary>
            Sdls the joystick is haptic using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_MouseIsHaptic">
            <summary>
            Sdls the mouse is haptic
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_NumHaptics">
            <summary>
            Sdls the num haptics
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_SensorType">
            <summary>
            The sdl sensortype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorType.SDL_SENSOR_INVALID">
            <summary>
            The sdl sensor invalid sdl sensortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorType.SDL_SENSOR_UNKNOWN">
            <summary>
            The sdl sensor unknown sdl sensortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorType.SDL_SENSOR_ACCEL">
            <summary>
            The sdl sensor accel sdl sensortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SensorType.SDL_SENSOR_GYRO">
            <summary>
            The sdl sensor gyro sdl sensortype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_STANDARD_GRAVITY">
            <summary>
            The sdl standard gravity
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_NumSensors">
            <summary>
            Sdls the num sensors
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SensorGetDeviceName(System.Int32)">
            <summary>
            Internals the sdl sensor get device name using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetDeviceName(System.Int32)">
            <summary>
            Sdls the sensor get device name using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetDeviceType(System.Int32)">
            <summary>
            Sdls the sensor get device type using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The sdl sensor type</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetDeviceNonPortableType(System.Int32)">
            <summary>
            Sdls the sensor get device non portable type using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetDeviceInstanceID(System.Int32)">
            <summary>
            Sdls the sensor get device instance id using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorOpen(System.Int32)">
            <summary>
            Sdls the sensor open using the specified device index
            </summary>
            <param name="device_index">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorFromInstanceID(System.Int32)">
            <summary>
            Sdls the sensor from instance id using the specified instance id
            </summary>
            <param name="instance_id">The instance id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_SensorGetName(System.IntPtr)">
            <summary>
            Internals the sdl sensor get name using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetName(System.IntPtr)">
            <summary>
            Sdls the sensor get name using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetType(System.IntPtr)">
            <summary>
            Sdls the sensor get type using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The sdl sensor type</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetNonPortableType(System.IntPtr)">
            <summary>
            Sdls the sensor get non portable type using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetInstanceID(System.IntPtr)">
            <summary>
            Sdls the sensor get instance id using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorGetData(System.IntPtr,System.Single[],System.Int32)">
            <summary>
            Sdls the sensor get data using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <param name="data">The data</param>
            <param name="num_values">The num values</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorClose(System.IntPtr)">
            <summary>
            Sdls the sensor close using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
        </member>
        <member name="M:SDL2.SDL.SDL_SensorUpdate">
            <summary>
            Sdls the sensor update
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_LockSensors">
            <summary>
            Sdls the lock sensors
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_UnlockSensors">
            <summary>
            Sdls the unlock sensors
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_MASK_BITSIZE">
            <summary>
            The sdl audio mask bitsize
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_MASK_DATATYPE">
            <summary>
            The sdl audio mask datatype
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_MASK_ENDIAN">
            <summary>
            The sdl audio mask endian
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_MASK_SIGNED">
            <summary>
            The sdl audio mask signed
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_BITSIZE(System.UInt16)">
            <summary>
            Sdls the audio bitsize using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The ushort</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_ISFLOAT(System.UInt16)">
            <summary>
            Describes whether sdl audio isfloat
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_ISBIGENDIAN(System.UInt16)">
            <summary>
            Describes whether sdl audio isbigendian
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_ISSIGNED(System.UInt16)">
            <summary>
            Describes whether sdl audio issigned
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_ISINT(System.UInt16)">
            <summary>
            Describes whether sdl audio isint
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_ISLITTLEENDIAN(System.UInt16)">
            <summary>
            Describes whether sdl audio islittleendian
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AUDIO_ISUNSIGNED(System.UInt16)">
            <summary>
            Describes whether sdl audio isunsigned
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="F:SDL2.SDL.AUDIO_U8">
            <summary>
            The audio u8
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S8">
            <summary>
            The audio s8
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_U16LSB">
            <summary>
            The audio u16lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S16LSB">
            <summary>
            The audio s16lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_U16MSB">
            <summary>
            The audio u16msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S16MSB">
            <summary>
            The audio s16msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_U16">
            <summary>
            The audio u16lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S16">
            <summary>
            The audio s16lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S32LSB">
            <summary>
            The audio s32lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S32MSB">
            <summary>
            The audio s32msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S32">
            <summary>
            The audio s32lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_F32LSB">
            <summary>
            The audio f32lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_F32MSB">
            <summary>
            The audio f32msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_F32">
            <summary>
            The audio f32lsb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_U16SYS">
            <summary>
            The audio u16msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S16SYS">
            <summary>
            The audio s16msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_S32SYS">
            <summary>
            The audio s32msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.AUDIO_F32SYS">
            <summary>
            The audio f32msb
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_ALLOW_FREQUENCY_CHANGE">
            <summary>
            The sdl audio allow frequency change
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_ALLOW_FORMAT_CHANGE">
            <summary>
            The sdl audio allow format change
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_ALLOW_CHANNELS_CHANGE">
            <summary>
            The sdl audio allow channels change
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_ALLOW_SAMPLES_CHANGE">
            <summary>
            The sdl audio allow samples change
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AUDIO_ALLOW_ANY_CHANGE">
            <summary>
            The sdl audio allow samples change
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_MIX_MAXVOLUME">
            <summary>
            The sdl mix maxvolume
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_AudioStatus">
            <summary>
            The sdl audiostatus enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioStatus.SDL_AUDIO_STOPPED">
            <summary>
            The sdl audio stopped sdl audiostatus
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioStatus.SDL_AUDIO_PLAYING">
            <summary>
            The sdl audio playing sdl audiostatus
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioStatus.SDL_AUDIO_PAUSED">
            <summary>
            The sdl audio paused sdl audiostatus
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_AudioSpec">
            <summary>
            The sdl audiospec
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.freq">
            <summary>
            The freq
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.channels">
            <summary>
            The channels
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.silence">
            <summary>
            The silence
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.samples">
            <summary>
            The samples
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.callback">
            <summary>
            The callback
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_AudioSpec.userdata">
            <summary>
            The userdata
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_AudioCallback">
            <summary>
            The sdl audiocallback
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_AudioInit(System.Byte*)">
            <summary>
            Internals the sdl audio init using the specified driver name
            </summary>
            <param name="driver_name">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AudioInit(System.String)">
            <summary>
            Sdls the audio init using the specified driver name
            </summary>
            <param name="driver_name">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AudioQuit">
            <summary>
            Sdls the audio quit
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_CloseAudio">
            <summary>
            Sdls the close audio
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_CloseAudioDevice(System.UInt32)">
            <summary>
            Sdls the close audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:SDL2.SDL.SDL_FreeWAV(System.IntPtr)">
            <summary>
            Sdls the free wav using the specified audio buf
            </summary>
            <param name="audio_buf">The audio buf</param>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetAudioDeviceName(System.Int32,System.Int32)">
            <summary>
            Internals the sdl get audio device name using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="iscapture">The iscapture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetAudioDeviceName(System.Int32,System.Int32)">
            <summary>
            Sdls the get audio device name using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="iscapture">The iscapture</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetAudioDeviceStatus(System.UInt32)">
            <summary>
            Sdls the get audio device status using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <returns>The sdl audio status</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetAudioDriver(System.Int32)">
            <summary>
            Internals the sdl get audio driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetAudioDriver(System.Int32)">
            <summary>
            Sdls the get audio driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetAudioStatus">
            <summary>
            Sdls the get audio status
            </summary>
            <returns>The sdl audio status</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetCurrentAudioDriver">
            <summary>
            Internals the sdl get current audio driver
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetCurrentAudioDriver">
            <summary>
            Sdls the get current audio driver
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumAudioDevices(System.Int32)">
            <summary>
            Sdls the get num audio devices using the specified iscapture
            </summary>
            <param name="iscapture">The iscapture</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumAudioDrivers">
            <summary>
            Sdls the get num audio drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_LoadWAV_RW(System.IntPtr,System.Int32,SDL2.SDL.SDL_AudioSpec@,System.IntPtr@,System.UInt32@)">
            <summary>
            Internals the sdl load wav rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="spec">The spec</param>
            <param name="audio_buf">The audio buf</param>
            <param name="audio_len">The audio len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LoadWAV(System.String,SDL2.SDL.SDL_AudioSpec@,System.IntPtr@,System.UInt32@)">
            <summary>
            Sdls the load wav using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="spec">The spec</param>
            <param name="audio_buf">The audio buf</param>
            <param name="audio_len">The audio len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_LockAudio">
            <summary>
            Sdls the lock audio
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_LockAudioDevice(System.UInt32)">
            <summary>
            Sdls the lock audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:SDL2.SDL.SDL_MixAudio(System.Byte[],System.Byte[],System.UInt32,System.Int32)">
            <summary>
            Sdls the mix audio using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:SDL2.SDL.SDL_MixAudioFormat(System.IntPtr,System.IntPtr,System.UInt16,System.UInt32,System.Int32)">
            <summary>
            Sdls the mix audio format using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="format">The format</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:SDL2.SDL.SDL_MixAudioFormat(System.Byte[],System.Byte[],System.UInt16,System.UInt32,System.Int32)">
            <summary>
            Sdls the mix audio format using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="format">The format</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:SDL2.SDL.SDL_OpenAudio(SDL2.SDL.SDL_AudioSpec@,SDL2.SDL.SDL_AudioSpec@)">
            <summary>
            Sdls the open audio using the specified desired
            </summary>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_OpenAudio(SDL2.SDL.SDL_AudioSpec@,System.IntPtr)">
            <summary>
            Sdls the open audio using the specified desired
            </summary>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_OpenAudioDevice(System.IntPtr,System.Int32,SDL2.SDL.SDL_AudioSpec@,SDL2.SDL.SDL_AudioSpec@,System.Int32)">
            <summary>
            Sdls the open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="iscapture">The iscapture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowed_changes">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_OpenAudioDevice(System.Byte*,System.Int32,SDL2.SDL.SDL_AudioSpec@,SDL2.SDL.SDL_AudioSpec@,System.Int32)">
            <summary>
            Internals the sdl open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="iscapture">The iscapture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowed_changes">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_OpenAudioDevice(System.String,System.Int32,SDL2.SDL.SDL_AudioSpec@,SDL2.SDL.SDL_AudioSpec@,System.Int32)">
            <summary>
            Sdls the open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="iscapture">The iscapture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowed_changes">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_PauseAudio(System.Int32)">
            <summary>
            Sdls the pause audio using the specified pause on
            </summary>
            <param name="pause_on">The pause on</param>
        </member>
        <member name="M:SDL2.SDL.SDL_PauseAudioDevice(System.UInt32,System.Int32)">
            <summary>
            Sdls the pause audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="pause_on">The pause on</param>
        </member>
        <member name="M:SDL2.SDL.SDL_UnlockAudio">
            <summary>
            Sdls the unlock audio
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_UnlockAudioDevice(System.UInt32)">
            <summary>
            Sdls the unlock audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:SDL2.SDL.SDL_QueueAudio(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            Sdls the queue audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="data">The data</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_DequeueAudio(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            Sdls the dequeue audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="data">The data</param>
            <param name="len">The len</param>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetQueuedAudioSize(System.UInt32)">
            <summary>
            Sdls the get queued audio size using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_ClearQueuedAudio(System.UInt32)">
            <summary>
            Sdls the clear queued audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:SDL2.SDL.SDL_NewAudioStream(System.UInt16,System.Byte,System.Int32,System.UInt16,System.Byte,System.Int32)">
            <summary>
            Sdls the new audio stream using the specified src format
            </summary>
            <param name="src_format">The src format</param>
            <param name="src_channels">The src channels</param>
            <param name="src_rate">The src rate</param>
            <param name="dst_format">The dst format</param>
            <param name="dst_channels">The dst channels</param>
            <param name="dst_rate">The dst rate</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AudioStreamPut(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sdls the audio stream put using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="buf">The buf</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AudioStreamGet(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sdls the audio stream get using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="buf">The buf</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AudioStreamAvailable(System.IntPtr)">
            <summary>
            Sdls the audio stream available using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AudioStreamClear(System.IntPtr)">
            <summary>
            Sdls the audio stream clear using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="M:SDL2.SDL.SDL_FreeAudioStream(System.IntPtr)">
            <summary>
            Sdls the free audio stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetAudioDeviceSpec(System.Int32,System.Int32,SDL2.SDL.SDL_AudioSpec@)">
            <summary>
            Sdls the get audio device spec using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="iscapture">The iscapture</param>
            <param name="spec">The spec</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_TICKS_PASSED(System.UInt32,System.UInt32)">
            <summary>
            Describes whether sdl ticks passed
            </summary>
            <param name="A">The </param>
            <param name="B">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Delay(System.UInt32)">
            <summary>
            Sdls the delay using the specified ms
            </summary>
            <param name="ms">The ms</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTicks">
            <summary>
            Sdls the get ticks
            </summary>
            <returns>The int 32</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetTicks64">
            <summary>
            Sdls the get ticks 64
            </summary>
            <returns>The int 64</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPerformanceCounter">
            <summary>
            Sdls the get performance counter
            </summary>
            <returns>The int 64</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPerformanceFrequency">
            <summary>
            Sdls the get performance frequency
            </summary>
            <returns>The int 64</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_TimerCallback">
            <summary>
            The sdl timercallback
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_AddTimer(System.UInt32,SDL2.SDL.SDL_TimerCallback,System.IntPtr)">
            <summary>
            Sdls the add timer using the specified interval
            </summary>
            <param name="interval">The interval</param>
            <param name="callback">The callback</param>
            <param name="param">The param</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RemoveTimer(System.Int32)">
            <summary>
            Sdls the remove timer using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_WindowsMessageHook">
            <summary>
            The sdl windowsmessagehook
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_SetWindowsMessageHook(SDL2.SDL.SDL_WindowsMessageHook,System.IntPtr)">
            <summary>
            Sdls the set windows message hook using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetD3D9Device(System.IntPtr)">
            <summary>
            Sdls the render get d 3 d 9 device using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_RenderGetD3D11Device(System.IntPtr)">
            <summary>
            Sdls the render get d 3 d 11 device using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_iPhoneAnimationCallback">
            <summary>
            The sdl iphoneanimationcallback
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_iPhoneSetAnimationCallback(System.IntPtr,System.Int32,SDL2.SDL.SDL_iPhoneAnimationCallback,System.IntPtr)">
            <summary>
            Sdls the i phone set animation callback using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="interval">The interval</param>
            <param name="callback">The callback</param>
            <param name="callbackParam">The callback param</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_iPhoneSetEventPump(SDL2.SDL.SDL_bool)">
            <summary>
            Sdls the i phone set event pump using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
        </member>
        <member name="F:SDL2.SDL.SDL_ANDROID_EXTERNAL_STORAGE_READ">
            <summary>
            The sdl android external storage read
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_ANDROID_EXTERNAL_STORAGE_WRITE">
            <summary>
            The sdl android external storage write
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidGetJNIEnv">
            <summary>
            Sdls the android get jni env
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidGetActivity">
            <summary>
            Sdls the android get activity
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IsAndroidTV">
            <summary>
            Sdls the is android tv
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IsChromebook">
            <summary>
            Sdls the is chromebook
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IsDeXMode">
            <summary>
            Sdls the is de x mode
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidBackButton">
            <summary>
            Sdls the android back button
            </summary>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_AndroidGetInternalStoragePath">
            <summary>
            Internals the sdl android get internal storage path
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidGetInternalStoragePath">
            <summary>
            Sdls the android get internal storage path
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidGetExternalStorageState">
            <summary>
            Sdls the android get external storage state
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_AndroidGetExternalStoragePath">
            <summary>
            Internals the sdl android get external storage path
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidGetExternalStoragePath">
            <summary>
            Sdls the android get external storage path
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetAndroidSDKVersion">
            <summary>
            Sdls the get android sdk version
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_AndroidRequestPermission(System.Byte*)">
            <summary>
            Internals the sdl android request permission using the specified permission
            </summary>
            <param name="permission">The permission</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidRequestPermission(System.String)">
            <summary>
            Sdls the android request permission using the specified permission
            </summary>
            <param name="permission">The permission</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_AndroidShowToast(System.Byte*,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internals the sdl android show toast using the specified message
            </summary>
            <param name="message">The message</param>
            <param name="duration">The duration</param>
            <param name="gravity">The gravity</param>
            <param name="xOffset">The offset</param>
            <param name="yOffset">The offset</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_AndroidShowToast(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sdls the android show toast using the specified message
            </summary>
            <param name="message">The message</param>
            <param name="duration">The duration</param>
            <param name="gravity">The gravity</param>
            <param name="xOffset">The offset</param>
            <param name="yOffset">The offset</param>
            <returns>The result</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_WinRT_DeviceFamily">
            <summary>
            The sdl winrt devicefamily enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WinRT_DeviceFamily.SDL_WINRT_DEVICEFAMILY_UNKNOWN">
            <summary>
            The sdl winrt devicefamily unknown sdl winrt devicefamily
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WinRT_DeviceFamily.SDL_WINRT_DEVICEFAMILY_DESKTOP">
            <summary>
            The sdl winrt devicefamily desktop sdl winrt devicefamily
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WinRT_DeviceFamily.SDL_WINRT_DEVICEFAMILY_MOBILE">
            <summary>
            The sdl winrt devicefamily mobile sdl winrt devicefamily
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_WinRT_DeviceFamily.SDL_WINRT_DEVICEFAMILY_XBOX">
            <summary>
            The sdl winrt devicefamily xbox sdl winrt devicefamily
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_WinRTGetDeviceFamily">
            <summary>
            Sdls the win rt get device family
            </summary>
            <returns>The sdl win rt device family</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_IsTablet">
            <summary>
            Sdls the is tablet
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_SYSWM_TYPE">
            <summary>
            The sdl syswm type enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_UNKNOWN">
            <summary>
            The sdl syswm unknown sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_WINDOWS">
            <summary>
            The sdl syswm windows sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_X11">
            <summary>
            The sdl syswm x11 sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_DIRECTFB">
            <summary>
            The sdl syswm directfb sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_COCOA">
            <summary>
            The sdl syswm cocoa sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_UIKIT">
            <summary>
            The sdl syswm uikit sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_WAYLAND">
            <summary>
            The sdl syswm wayland sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_MIR">
            <summary>
            The sdl syswm mir sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_WINRT">
            <summary>
            The sdl syswm winrt sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_ANDROID">
            <summary>
            The sdl syswm android sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_VIVANTE">
            <summary>
            The sdl syswm vivante sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_OS2">
            <summary>
            The sdl syswm os2 sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_HAIKU">
            <summary>
            The sdl syswm haiku sdl syswm type
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SYSWM_TYPE.SDL_SYSWM_KMSDRM">
            <summary>
            The sdl syswm kmsdrm sdl syswm type
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_windows_wminfo">
            <summary>
            The internal windows wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_windows_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_windows_wminfo.hdc">
            <summary>
            The hdc
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_windows_wminfo.hinstance">
            <summary>
            The hinstance
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_winrt_wminfo">
            <summary>
            The internal winrt wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_winrt_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_x11_wminfo">
            <summary>
            The internal x11 wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_x11_wminfo.display">
            <summary>
            The display
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_x11_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_directfb_wminfo">
            <summary>
            The internal directfb wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_directfb_wminfo.dfb">
            <summary>
            The dfb
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_directfb_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_directfb_wminfo.surface">
            <summary>
            The surface
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_cocoa_wminfo">
            <summary>
            The internal cocoa wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_cocoa_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_uikit_wminfo">
            <summary>
            The internal uikit wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_uikit_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_uikit_wminfo.framebuffer">
            <summary>
            The framebuffer
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_uikit_wminfo.colorbuffer">
            <summary>
            The colorbuffer
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_uikit_wminfo.resolveFramebuffer">
            <summary>
            The resolve framebuffer
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_wayland_wminfo">
            <summary>
            The internal wayland wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_wayland_wminfo.display">
            <summary>
            The display
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_wayland_wminfo.surface">
            <summary>
            The surface
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_wayland_wminfo.shell_surface">
            <summary>
            The shell surface
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_wayland_wminfo.egl_window">
            <summary>
            The egl window
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_wayland_wminfo.xdg_surface">
            <summary>
            The xdg surface
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_wayland_wminfo.xdg_toplevel">
            <summary>
            The xdg toplevel
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_mir_wminfo">
            <summary>
            The internal mir wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_mir_wminfo.connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_mir_wminfo.surface">
            <summary>
            The surface
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_android_wminfo">
            <summary>
            The internal android wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_android_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_android_wminfo.surface">
            <summary>
            The surface
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_vivante_wminfo">
            <summary>
            The internal vivante wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_vivante_wminfo.display">
            <summary>
            The display
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_vivante_wminfo.window">
            <summary>
            The window
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_os2_wminfo">
            <summary>
            The internal os2 wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_os2_wminfo.hwnd">
            <summary>
            The hwnd
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_os2_wminfo.hwndFrame">
            <summary>
            The hwnd frame
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_kmsdrm_wminfo">
            <summary>
            The internal kmsdrm wminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_kmsdrm_wminfo.dev_index">
            <summary>
            The dev index
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_kmsdrm_wminfo.drm_fd">
            <summary>
            The drm fd
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_kmsdrm_wminfo.gbm_dev">
            <summary>
            The gbm dev
            </summary>
        </member>
        <member name="T:SDL2.SDL.INTERNAL_SysWMDriverUnion">
            <summary>
            The internal syswmdriverunion
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.win">
            <summary>
            The win
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.winrt">
            <summary>
            The winrt
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.x11">
            <summary>
            The 11
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.dfb">
            <summary>
            The dfb
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.cocoa">
            <summary>
            The cocoa
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.uikit">
            <summary>
            The uikit
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.wl">
            <summary>
            The wl
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.mir">
            <summary>
            The mir
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.android">
            <summary>
            The android
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.os2">
            <summary>
            The os
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.vivante">
            <summary>
            The vivante
            </summary>
        </member>
        <member name="F:SDL2.SDL.INTERNAL_SysWMDriverUnion.ksmdrm">
            <summary>
            The ksmdrm
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_SysWMinfo">
            <summary>
            The sdl syswminfo
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SysWMinfo.version">
            <summary>
            The version
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SysWMinfo.subsystem">
            <summary>
            The subsystem
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_SysWMinfo.info">
            <summary>
            The info
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetWindowWMInfo(System.IntPtr,SDL2.SDL.SDL_SysWMinfo@)">
            <summary>
            Sdls the get window wm info using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="info">The info</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetBasePath">
            <summary>
            Internals the sdl get base path
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetBasePath">
            <summary>
            Sdls the get base path
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_GetPrefPath(System.Byte*,System.Byte*)">
            <summary>
            Internals the sdl get pref path using the specified org
            </summary>
            <param name="org">The org</param>
            <param name="app">The app</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPrefPath(System.String,System.String)">
            <summary>
            Sdls the get pref path using the specified org
            </summary>
            <param name="org">The org</param>
            <param name="app">The app</param>
            <returns>The string</returns>
        </member>
        <member name="T:SDL2.SDL.SDL_PowerState">
            <summary>
            The sdl powerstate enum
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PowerState.SDL_POWERSTATE_UNKNOWN">
            <summary>
            The sdl powerstate unknown sdl powerstate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PowerState.SDL_POWERSTATE_ON_BATTERY">
            <summary>
            The sdl powerstate on battery sdl powerstate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PowerState.SDL_POWERSTATE_NO_BATTERY">
            <summary>
            The sdl powerstate no battery sdl powerstate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PowerState.SDL_POWERSTATE_CHARGING">
            <summary>
            The sdl powerstate charging sdl powerstate
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_PowerState.SDL_POWERSTATE_CHARGED">
            <summary>
            The sdl powerstate charged sdl powerstate
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPowerInfo(System.Int32@,System.Int32@)">
            <summary>
            Sdls the get power info using the specified secs
            </summary>
            <param name="secs">The secs</param>
            <param name="pct">The pct</param>
            <returns>The sdl power state</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetCPUCount">
            <summary>
            Sdls the get cpu count
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetCPUCacheLineSize">
            <summary>
            Sdls the get cpu cache line size
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasRDTSC">
            <summary>
            Sdls the has rdtsc
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasAltiVec">
            <summary>
            Sdls the has alti vec
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasMMX">
            <summary>
            Sdls the has mmx
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_Has3DNow">
            <summary>
            Sdls the has 3 d now
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasSSE">
            <summary>
            Sdls the has sse
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasSSE2">
            <summary>
            Sdls the has sse 2
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasSSE3">
            <summary>
            Sdls the has sse 3
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasSSE41">
            <summary>
            Sdls the has sse 41
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasSSE42">
            <summary>
            Sdls the has sse 42
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasAVX">
            <summary>
            Sdls the has avx
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasAVX2">
            <summary>
            Sdls the has avx 2
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasAVX512F">
            <summary>
            Sdls the has avx 512 f
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_HasNEON">
            <summary>
            Sdls the has neon
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_GetSystemRAM">
            <summary>
            Sdls the get system ram
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SIMDGetAlignment">
            <summary>
            Sdls the simd get alignment
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SIMDAlloc(System.UInt32)">
            <summary>
            Sdls the simd alloc using the specified len
            </summary>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SIMDRealloc(System.IntPtr,System.UInt32)">
            <summary>
            Sdls the simd realloc using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_SIMDFree(System.IntPtr)">
            <summary>
            Sdls the simd free using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="M:SDL2.SDL.SDL_HasARMSIMD">
            <summary>
            Sdls the has armsimd
            </summary>
        </member>
        <member name="T:SDL2.SDL.SDL_Locale">
            <summary>
            The sdl locale
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Locale.language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:SDL2.SDL.SDL_Locale.country">
            <summary>
            The country
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetPreferredLocales">
            <summary>
            Sdls the get preferred locales
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL.INTERNAL_SDL_OpenURL(System.Byte*)">
            <summary>
            Internals the sdl open url using the specified url
            </summary>
            <param name="url">The url</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL.SDL_OpenURL(System.String)">
            <summary>
            Sdls the open url using the specified url
            </summary>
            <param name="url">The url</param>
            <returns>The result</returns>
        </member>
        <member name="T:SDL2.SDL_image">
            <summary>
            The sdl image class
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.nativeLibName">
            <summary>
            The native lib name
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.SDL_IMAGE_MAJOR_VERSION">
            <summary>
            The sdl image major version
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.SDL_IMAGE_MINOR_VERSION">
            <summary>
            The sdl image minor version
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.SDL_IMAGE_PATCHLEVEL">
            <summary>
            The sdl image patchlevel
            </summary>
        </member>
        <member name="T:SDL2.SDL_image.IMG_InitFlags">
            <summary>
            The img initflags enum
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_InitFlags.IMG_INIT_JPG">
            <summary>
            The img init jpg img initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_InitFlags.IMG_INIT_PNG">
            <summary>
            The img init png img initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_InitFlags.IMG_INIT_TIF">
            <summary>
            The img init tif img initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_InitFlags.IMG_INIT_WEBP">
            <summary>
            The img init webp img initflags
            </summary>
        </member>
        <member name="M:SDL2.SDL_image.SDL_IMAGE_VERSION(SDL2.SDL.SDL_version@)">
            <summary>
            Sdls the image version using the specified x
            </summary>
            <param name="X">The </param>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_Linked_Version">
            <summary>
            Internals the img linked version
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_Linked_Version">
            <summary>
            Imgs the linked version
            </summary>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_Init(SDL2.SDL_image.IMG_InitFlags)">
            <summary>
            Imgs the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_Quit">
            <summary>
            Imgs the quit
            </summary>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_Load(System.Byte*)">
            <summary>
            Internals the img load using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_Load(System.String)">
            <summary>
            Imgs the load using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The handle</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_Load_RW(System.IntPtr,System.Int32)">
            <summary>
            Imgs the load rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_LoadTyped_RW(System.IntPtr,System.Int32,System.Byte*)">
            <summary>
            Internals the img load typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadTyped_RW(System.IntPtr,System.Int32,System.String)">
            <summary>
            Imgs the load typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_LoadTexture(System.IntPtr,System.Byte*)">
            <summary>
            Internals the img load texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadTexture(System.IntPtr,System.String)">
            <summary>
            Imgs the load texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="file">The file</param>
            <returns>The handle</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadTexture_RW(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Imgs the load texture rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_LoadTextureTyped_RW(System.IntPtr,System.IntPtr,System.Int32,System.Byte*)">
            <summary>
            Internals the img load texture typed rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadTextureTyped_RW(System.IntPtr,System.IntPtr,System.Int32,System.String)">
            <summary>
            Imgs the load texture typed rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="type">The type</param>
            <returns>The handle</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_ReadXPMFromArray(System.String[])">
            <summary>
            Imgs the read xpm from array using the specified xpm
            </summary>
            <param name="xpm">The xpm</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_SavePNG(System.IntPtr,System.Byte*)">
            <summary>
            Internals the img save png using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_SavePNG(System.IntPtr,System.String)">
            <summary>
            Imgs the save png using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_SavePNG_RW(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Imgs the save png rw using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="dst">The dst</param>
            <param name="freedst">The freedst</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_image.INTERNAL_IMG_SaveJPG(System.IntPtr,System.Byte*,System.Int32)">
            <summary>
            Internals the img save jpg using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <param name="quality">The quality</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_SaveJPG(System.IntPtr,System.String,System.Int32)">
            <summary>
            Imgs the save jpg using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <param name="quality">The quality</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_SaveJPG_RW(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Imgs the save jpg rw using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="dst">The dst</param>
            <param name="freedst">The freedst</param>
            <param name="quality">The quality</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_GetError">
            <summary>
            Imgs the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_SetError(System.String)">
            <summary>
            Imgs the set error using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="T:SDL2.SDL_image.IMG_Animation">
            <summary>
            The img animation
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_Animation.w">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_Animation.h">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_Animation.frames">
            <summary>
            The frames
            </summary>
        </member>
        <member name="F:SDL2.SDL_image.IMG_Animation.delays">
            <summary>
            The delays
            </summary>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadAnimation(System.String)">
            <summary>
            Imgs the load animation using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadAnimation_RW(System.IntPtr,System.Int32)">
            <summary>
            Imgs the load animation rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadAnimationTyped_RW(System.IntPtr,System.Int32,System.String)">
            <summary>
            Imgs the load animation typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_image.IMG_FreeAnimation(System.IntPtr)">
            <summary>
            Imgs the free animation using the specified anim
            </summary>
            <param name="anim">The anim</param>
        </member>
        <member name="M:SDL2.SDL_image.IMG_LoadGIFAnimation_RW(System.IntPtr)">
            <summary>
            Imgs the load gif animation rw using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int ptr</returns>
        </member>
        <member name="T:SDL2.SDL_mixer">
            <summary>
            The sdl mixer class
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.nativeLibName">
            <summary>
            The native lib name
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.SDL_MIXER_MAJOR_VERSION">
            <summary>
            The sdl mixer major version
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.SDL_MIXER_MINOR_VERSION">
            <summary>
            The sdl mixer minor version
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.SDL_MIXER_PATCHLEVEL">
            <summary>
            The sdl mixer patchlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_CHANNELS">
            <summary>
            The mix channels
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_DEFAULT_FREQUENCY">
            <summary>
            The mix default frequency
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_DEFAULT_FORMAT">
            <summary>
            The audio s16msb
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_DEFAULT_CHANNELS">
            <summary>
            The mix default channels
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_MAX_VOLUME">
            <summary>
            The mix max volume
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.MIX_InitFlags">
            <summary>
            The mix initflags enum
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_InitFlags.MIX_INIT_FLAC">
            <summary>
            The mix init flac mix initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_InitFlags.MIX_INIT_MOD">
            <summary>
            The mix init mod mix initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_InitFlags.MIX_INIT_MP3">
            <summary>
            The mix init mp3 mix initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_InitFlags.MIX_INIT_OGG">
            <summary>
            The mix init ogg mix initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_InitFlags.MIX_INIT_MID">
            <summary>
            The mix init mid mix initflags
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_InitFlags.MIX_INIT_OPUS">
            <summary>
            The mix init opus mix initflags
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.MIX_Chunk">
            <summary>
            The mix chunk
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_Chunk.allocated">
            <summary>
            The allocated
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_Chunk.abuf">
            <summary>
            The abuf
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_Chunk.alen">
            <summary>
            The alen
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.MIX_Chunk.volume">
            <summary>
            The volume
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.Mix_Fading">
            <summary>
            The mix fading enum
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_Fading.MIX_NO_FADING">
            <summary>
            The mix no fading mix fading
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_Fading.MIX_FADING_OUT">
            <summary>
            The mix fading out mix fading
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_Fading.MIX_FADING_IN">
            <summary>
            The mix fading in mix fading
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.Mix_MusicType">
            <summary>
            The mix musictype enum
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_NONE">
            <summary>
            The mus none mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_CMD">
            <summary>
            The mus cmd mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_WAV">
            <summary>
            The mus wav mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_MOD">
            <summary>
            The mus mod mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_MID">
            <summary>
            The mus mid mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_OGG">
            <summary>
            The mus ogg mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_MP3">
            <summary>
            The mus mp3 mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_MP3_MAD_UNUSED">
            <summary>
            The mus mp3 mad unused mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_FLAC">
            <summary>
            The mus flac mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_MODPLUG_UNUSED">
            <summary>
            The mus modplug unused mix musictype
            </summary>
        </member>
        <member name="F:SDL2.SDL_mixer.Mix_MusicType.MUS_OPUS">
            <summary>
            The mus opus mix musictype
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.MixFuncDelegate">
            <summary>
            The mix func delegate
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.Mix_EffectFunc_t">
            <summary>
            The mix effectfunc
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.Mix_EffectDone_t">
            <summary>
            The mix effectdone
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.MusicFinishedDelegate">
            <summary>
            The music finished delegate
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.ChannelFinishedDelegate">
            <summary>
            The channel finished delegate
            </summary>
        </member>
        <member name="T:SDL2.SDL_mixer.SoundFontDelegate">
            <summary>
            The sound font delegate
            </summary>
        </member>
        <member name="M:SDL2.SDL_mixer.SDL_MIXER_VERSION(SDL2.SDL.SDL_version@)">
            <summary>
            Sdls the mixer version using the specified x
            </summary>
            <param name="X">The </param>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_MIX_Linked_Version">
            <summary>
            Internals the mix linked version
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.MIX_Linked_Version">
            <summary>
            Mixes the linked version
            </summary>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Init(SDL2.SDL_mixer.MIX_InitFlags)">
            <summary>
            Mixes the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Quit">
            <summary>
            Mixes the quit
            </summary>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_OpenAudio(System.Int32,System.UInt16,System.Int32,System.Int32)">
            <summary>
            Mixes the open audio using the specified frequency
            </summary>
            <param name="frequency">The frequency</param>
            <param name="format">The format</param>
            <param name="channels">The channels</param>
            <param name="chunksize">The chunksize</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_AllocateChannels(System.Int32)">
            <summary>
            Mixes the allocate channels using the specified numchans
            </summary>
            <param name="numchans">The numchans</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_QuerySpec(System.Int32@,System.UInt16@,System.Int32@)">
            <summary>
            Mixes the query spec using the specified frequency
            </summary>
            <param name="frequency">The frequency</param>
            <param name="format">The format</param>
            <param name="channels">The channels</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_LoadWAV_RW(System.IntPtr,System.Int32)">
            <summary>
            Mixes the load wav rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_LoadWAV(System.String)">
            <summary>
            Mixes the load wav using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_LoadMUS(System.Byte*)">
            <summary>
            Internals the mix load mus using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_LoadMUS(System.String)">
            <summary>
            Mixes the load mus using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The handle</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_QuickLoad_WAV(System.Byte[])">
            <summary>
            Mixes the quick load wav using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_QuickLoad_RAW(System.Byte[],System.UInt32)">
            <summary>
            Mixes the quick load raw using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FreeChunk(System.IntPtr)">
            <summary>
            Mixes the free chunk using the specified chunk
            </summary>
            <param name="chunk">The chunk</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FreeMusic(System.IntPtr)">
            <summary>
            Mixes the free music using the specified music
            </summary>
            <param name="music">The music</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetNumChunkDecoders">
            <summary>
            Mixes the get num chunk decoders
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetChunkDecoder(System.Int32)">
            <summary>
            Internals the mix get chunk decoder using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetChunkDecoder(System.Int32)">
            <summary>
            Mixes the get chunk decoder using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetNumMusicDecoders">
            <summary>
            Mixes the get num music decoders
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetMusicDecoder(System.Int32)">
            <summary>
            Internals the mix get music decoder using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicDecoder(System.Int32)">
            <summary>
            Mixes the get music decoder using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicType(System.IntPtr)">
            <summary>
            Mixes the get music type using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The mix music type</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetMusicTitle(System.IntPtr)">
            <summary>
            Internals the mix get music title using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicTitle(System.IntPtr)">
            <summary>
            Mixes the get music title using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetMusicTitleTag(System.IntPtr)">
            <summary>
            Internals the mix get music title tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicTitleTag(System.IntPtr)">
            <summary>
            Mixes the get music title tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetMusicArtistTag(System.IntPtr)">
            <summary>
            Internals the mix get music artist tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicArtistTag(System.IntPtr)">
            <summary>
            Mixes the get music artist tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetMusicAlbumTag(System.IntPtr)">
            <summary>
            Internals the mix get music album tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicAlbumTag(System.IntPtr)">
            <summary>
            Mixes the get music album tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetMusicCopyrightTag(System.IntPtr)">
            <summary>
            Internals the mix get music copyright tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicCopyrightTag(System.IntPtr)">
            <summary>
            Mixes the get music copyright tag using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetPostMix(SDL2.SDL_mixer.MixFuncDelegate,System.IntPtr)">
            <summary>
            Mixes the set post mix using the specified mix func
            </summary>
            <param name="mix_func">The mix func</param>
            <param name="arg">The arg</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_HookMusic(SDL2.SDL_mixer.MixFuncDelegate,System.IntPtr)">
            <summary>
            Mixes the hook music using the specified mix func
            </summary>
            <param name="mix_func">The mix func</param>
            <param name="arg">The arg</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_HookMusicFinished(SDL2.SDL_mixer.MusicFinishedDelegate)">
            <summary>
            Mixes the hook music finished using the specified music finished
            </summary>
            <param name="music_finished">The music finished</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicHookData">
            <summary>
            Mixes the get music hook data
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_ChannelFinished(SDL2.SDL_mixer.ChannelFinishedDelegate)">
            <summary>
            Mixes the channel finished using the specified channel finished
            </summary>
            <param name="channel_finished">The channel finished</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_RegisterEffect(System.Int32,SDL2.SDL_mixer.Mix_EffectFunc_t,SDL2.SDL_mixer.Mix_EffectDone_t,System.IntPtr)">
            <summary>
            Mixes the register effect using the specified chan
            </summary>
            <param name="chan">The chan</param>
            <param name="f">The </param>
            <param name="d">The </param>
            <param name="arg">The arg</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_UnregisterEffect(System.Int32,SDL2.SDL_mixer.Mix_EffectFunc_t)">
            <summary>
            Mixes the unregister effect using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="f">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_UnregisterAllEffects(System.Int32)">
            <summary>
            Mixes the unregister all effects using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetPanning(System.Int32,System.Byte,System.Byte)">
            <summary>
            Mixes the set panning using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="left">The left</param>
            <param name="right">The right</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetPosition(System.Int32,System.Int16,System.Byte)">
            <summary>
            Mixes the set position using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="angle">The angle</param>
            <param name="distance">The distance</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetDistance(System.Int32,System.Byte)">
            <summary>
            Mixes the set distance using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="distance">The distance</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetReverseStereo(System.Int32,System.Int32)">
            <summary>
            Mixes the set reverse stereo using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_ReserveChannels(System.Int32)">
            <summary>
            Mixes the reserve channels using the specified num
            </summary>
            <param name="num">The num</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GroupChannel(System.Int32,System.Int32)">
            <summary>
            Mixes the group channel using the specified which
            </summary>
            <param name="which">The which</param>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GroupChannels(System.Int32,System.Int32,System.Int32)">
            <summary>
            Mixes the group channels using the specified from
            </summary>
            <param name="from">The from</param>
            <param name="to">The to</param>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GroupAvailable(System.Int32)">
            <summary>
            Mixes the group available using the specified tag
            </summary>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GroupCount(System.Int32)">
            <summary>
            Mixes the group count using the specified tag
            </summary>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GroupOldest(System.Int32)">
            <summary>
            Mixes the group oldest using the specified tag
            </summary>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GroupNewer(System.Int32)">
            <summary>
            Mixes the group newer using the specified tag
            </summary>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_PlayChannel(System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Mixes the play channel using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="chunk">The chunk</param>
            <param name="loops">The loops</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_PlayChannelTimed(System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Mixes the play channel timed using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="chunk">The chunk</param>
            <param name="loops">The loops</param>
            <param name="ticks">The ticks</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_PlayMusic(System.IntPtr,System.Int32)">
            <summary>
            Mixes the play music using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="loops">The loops</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeInMusic(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Mixes the fade in music using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="loops">The loops</param>
            <param name="ms">The ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeInMusicPos(System.IntPtr,System.Int32,System.Int32,System.Double)">
            <summary>
            Mixes the fade in music pos using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="loops">The loops</param>
            <param name="ms">The ms</param>
            <param name="position">The position</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeInChannel(System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Mixes the fade in channel using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="chunk">The chunk</param>
            <param name="loops">The loops</param>
            <param name="ms">The ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeInChannelTimed(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Mixes the fade in channel timed using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="chunk">The chunk</param>
            <param name="loops">The loops</param>
            <param name="ms">The ms</param>
            <param name="ticks">The ticks</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Volume(System.Int32,System.Int32)">
            <summary>
            Mixes the volume using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="volume">The volume</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_VolumeChunk(System.IntPtr,System.Int32)">
            <summary>
            Mixes the volume chunk using the specified chunk
            </summary>
            <param name="chunk">The chunk</param>
            <param name="volume">The volume</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_VolumeMusic(System.Int32)">
            <summary>
            Mixes the volume music using the specified volume
            </summary>
            <param name="volume">The volume</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetVolumeMusicStream(System.IntPtr)">
            <summary>
            Mixes the get volume music stream using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_HaltChannel(System.Int32)">
            <summary>
            Mixes the halt channel using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_HaltGroup(System.Int32)">
            <summary>
            Mixes the halt group using the specified tag
            </summary>
            <param name="tag">The tag</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_HaltMusic">
            <summary>
            Mixes the halt music
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_ExpireChannel(System.Int32,System.Int32)">
            <summary>
            Mixes the expire channel using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <param name="ticks">The ticks</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeOutChannel(System.Int32,System.Int32)">
            <summary>
            Mixes the fade out channel using the specified which
            </summary>
            <param name="which">The which</param>
            <param name="ms">The ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeOutGroup(System.Int32,System.Int32)">
            <summary>
            Mixes the fade out group using the specified tag
            </summary>
            <param name="tag">The tag</param>
            <param name="ms">The ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadeOutMusic(System.Int32)">
            <summary>
            Mixes the fade out music using the specified ms
            </summary>
            <param name="ms">The ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadingMusic">
            <summary>
            Mixes the fading music
            </summary>
            <returns>The mix fading</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_FadingChannel(System.Int32)">
            <summary>
            Mixes the fading channel using the specified which
            </summary>
            <param name="which">The which</param>
            <returns>The mix fading</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Pause(System.Int32)">
            <summary>
            Mixes the pause using the specified channel
            </summary>
            <param name="channel">The channel</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Resume(System.Int32)">
            <summary>
            Mixes the resume using the specified channel
            </summary>
            <param name="channel">The channel</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Paused(System.Int32)">
            <summary>
            Mixes the paused using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_PauseMusic">
            <summary>
            Mixes the pause music
            </summary>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_ResumeMusic">
            <summary>
            Mixes the resume music
            </summary>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_RewindMusic">
            <summary>
            Mixes the rewind music
            </summary>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_PausedMusic">
            <summary>
            Mixes the paused music
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetMusicPosition(System.Double)">
            <summary>
            Mixes the set music position using the specified position
            </summary>
            <param name="position">The position</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicPosition(System.IntPtr)">
            <summary>
            Mixes the get music position using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The double</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_MusicDuration(System.IntPtr)">
            <summary>
            Mixes the music duration using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The double</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicLoopStartTime(System.IntPtr)">
            <summary>
            Mixes the get music loop start time using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The double</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicLoopEndTime(System.IntPtr)">
            <summary>
            Mixes the get music loop end time using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The double</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetMusicLoopLengthTime(System.IntPtr)">
            <summary>
            Mixes the get music loop length time using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The double</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_Playing(System.Int32)">
            <summary>
            Mixes the playing using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_PlayingMusic">
            <summary>
            Mixes the playing music
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_SetMusicCMD(System.Byte*)">
            <summary>
            Internals the mix set music cmd using the specified command
            </summary>
            <param name="command">The command</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetMusicCMD(System.String)">
            <summary>
            Mixes the set music cmd using the specified command
            </summary>
            <param name="command">The command</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetSynchroValue(System.Int32)">
            <summary>
            Mixes the set synchro value using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetSynchroValue">
            <summary>
            Mixes the get synchro value
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_SetSoundFonts(System.Byte*)">
            <summary>
            Internals the mix set sound fonts using the specified paths
            </summary>
            <param name="paths">The paths</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetSoundFonts(System.String)">
            <summary>
            Mixes the set sound fonts using the specified paths
            </summary>
            <param name="paths">The paths</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetSoundFonts">
            <summary>
            Internals the mix get sound fonts
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetSoundFonts">
            <summary>
            Mixes the get sound fonts
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_EachSoundFont(SDL2.SDL_mixer.SoundFontDelegate,System.IntPtr)">
            <summary>
            Mixes the each sound font using the specified function
            </summary>
            <param name="function">The function</param>
            <param name="data">The data</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetTimidityCfg(System.String)">
            <summary>
            Mixes the set timidity cfg using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.INTERNAL_Mix_GetTimidityCfg">
            <summary>
            Internals the mix get timidity cfg
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetTimidityCfg">
            <summary>
            Mixes the get timidity cfg
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetChunk(System.Int32)">
            <summary>
            Mixes the get chunk using the specified channel
            </summary>
            <param name="channel">The channel</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_CloseAudio">
            <summary>
            Mixes the close audio
            </summary>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_GetError">
            <summary>
            Mixes the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_SetError(System.String)">
            <summary>
            Mixes the set error using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
        <member name="M:SDL2.SDL_mixer.Mix_ClearError">
            <summary>
            Mixes the clear error
            </summary>
        </member>
        <member name="T:SDL2.SDL_ttf">
            <summary>
            The sdl ttf class
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.nativeLibName">
            <summary>
            The native lib name
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.SDL_TTF_MAJOR_VERSION">
            <summary>
            The sdl ttf major version
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.SDL_TTF_MINOR_VERSION">
            <summary>
            The sdl ttf minor version
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.SDL_TTF_PATCHLEVEL">
            <summary>
            The sdl ttf patchlevel
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.UNICODE_BOM_NATIVE">
            <summary>
            The unicode bom native
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.UNICODE_BOM_SWAPPED">
            <summary>
            The unicode bom swapped
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_STYLE_NORMAL">
            <summary>
            The ttf style normal
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_STYLE_BOLD">
            <summary>
            The ttf style bold
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_STYLE_ITALIC">
            <summary>
            The ttf style italic
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_STYLE_UNDERLINE">
            <summary>
            The ttf style underline
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_STYLE_STRIKETHROUGH">
            <summary>
            The ttf style strikethrough
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_HINTING_NORMAL">
            <summary>
            The ttf hinting normal
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_HINTING_LIGHT">
            <summary>
            The ttf hinting light
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_HINTING_MONO">
            <summary>
            The ttf hinting mono
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_HINTING_NONE">
            <summary>
            The ttf hinting none
            </summary>
        </member>
        <member name="F:SDL2.SDL_ttf.TTF_HINTING_LIGHT_SUBPIXEL">
            <summary>
            The ttf hinting light subpixel
            </summary>
        </member>
        <member name="M:SDL2.SDL_ttf.SDL_TTF_VERSION(SDL2.SDL.SDL_version@)">
            <summary>
            Sdls the ttf version using the specified x
            </summary>
            <param name="X">The </param>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_LinkedVersion">
            <summary>
            Internals the ttf linked version
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_LinkedVersion">
            <summary>
            Ttfs the linked version
            </summary>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_ByteSwappedUNICODE(System.Int32)">
            <summary>
            Ttfs the byte swapped unicode using the specified swapped
            </summary>
            <param name="swapped">The swapped</param>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_Init">
            <summary>
            Ttfs the init
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_OpenFont(System.Byte*,System.Int32)">
            <summary>
            Internals the ttf open font using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptsize">The ptsize</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_OpenFont(System.String,System.Int32)">
            <summary>
            Ttfs the open font using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptsize">The ptsize</param>
            <returns>The handle</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_OpenFontRW(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Ttfs the open font rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="ptsize">The ptsize</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_OpenFontIndex(System.Byte*,System.Int32,System.Int64)">
            <summary>
            Internals the ttf open font index using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptsize">The ptsize</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_OpenFontIndex(System.String,System.Int32,System.Int64)">
            <summary>
            Ttfs the open font index using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptsize">The ptsize</param>
            <param name="index">The index</param>
            <returns>The handle</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_OpenFontIndexRW(System.IntPtr,System.Int32,System.Int32,System.Int64)">
            <summary>
            Ttfs the open font index rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freesrc">The freesrc</param>
            <param name="ptsize">The ptsize</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetFontSize(System.IntPtr,System.Int32)">
            <summary>
            Ttfs the set font size using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ptsize">The ptsize</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetFontStyle(System.IntPtr)">
            <summary>
            Ttfs the get font style using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetFontStyle(System.IntPtr,System.Int32)">
            <summary>
            Ttfs the set font style using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="style">The style</param>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetFontOutline(System.IntPtr)">
            <summary>
            Ttfs the get font outline using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetFontOutline(System.IntPtr,System.Int32)">
            <summary>
            Ttfs the set font outline using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="outline">The outline</param>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetFontHinting(System.IntPtr)">
            <summary>
            Ttfs the get font hinting using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetFontHinting(System.IntPtr,System.Int32)">
            <summary>
            Ttfs the set font hinting using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="hinting">The hinting</param>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontHeight(System.IntPtr)">
            <summary>
            Ttfs the font height using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontAscent(System.IntPtr)">
            <summary>
            Ttfs the font ascent using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontDescent(System.IntPtr)">
            <summary>
            Ttfs the font descent using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontLineSkip(System.IntPtr)">
            <summary>
            Ttfs the font line skip using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetFontKerning(System.IntPtr)">
            <summary>
            Ttfs the get font kerning using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetFontKerning(System.IntPtr,System.Int32)">
            <summary>
            Ttfs the set font kerning using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="allowed">The allowed</param>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontFaces(System.IntPtr)">
            <summary>
            Ttfs the font faces using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontFaceIsFixedWidth(System.IntPtr)">
            <summary>
            Ttfs the font face is fixed width using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_FontFaceFamilyName(System.IntPtr)">
            <summary>
            Internals the ttf font face family name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontFaceFamilyName(System.IntPtr)">
            <summary>
            Ttfs the font face family name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_FontFaceStyleName(System.IntPtr)">
            <summary>
            Internals the ttf font face style name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_FontFaceStyleName(System.IntPtr)">
            <summary>
            Ttfs the font face style name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GlyphIsProvided(System.IntPtr,System.UInt16)">
            <summary>
            Ttfs the glyph is provided using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GlyphIsProvided32(System.IntPtr,System.UInt32)">
            <summary>
            Ttfs the glyph is provided 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GlyphMetrics(System.IntPtr,System.UInt16,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the glyph metrics using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="minx">The minx</param>
            <param name="maxx">The maxx</param>
            <param name="miny">The miny</param>
            <param name="maxy">The maxy</param>
            <param name="advance">The advance</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GlyphMetrics32(System.IntPtr,System.UInt32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the glyph metrics 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="minx">The minx</param>
            <param name="maxx">The maxx</param>
            <param name="miny">The miny</param>
            <param name="maxy">The maxy</param>
            <param name="advance">The advance</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SizeText(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the size text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_SizeUTF8(System.IntPtr,System.Byte*,System.Int32@,System.Int32@)">
            <summary>
            Internals the ttf size utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SizeUTF8(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the size utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SizeUNICODE(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the size unicode using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_MeasureText(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the measure text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measure_width">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_MeasureUTF8(System.IntPtr,System.Byte*,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Internals the ttf measure utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measure_width">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_MeasureUTF8(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the measure utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measure_width">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_MeasureUNICODE(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Ttfs the measure unicode using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measure_width">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderText_Solid(System.IntPtr,System.String,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render text solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_RenderUTF8_Solid(System.IntPtr,System.Byte*,SDL2.SDL.SDL_Color)">
            <summary>
            Internals the ttf render utf 8 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUTF8_Solid(System.IntPtr,System.String,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render utf 8 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUNICODE_Solid(System.IntPtr,System.String,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render unicode solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderText_Solid_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render text solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_RenderUTF8_Solid_Wrapped(System.IntPtr,System.Byte*,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Internals the ttf render utf 8 solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUTF8_Solid_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render utf 8 solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUNICODE_Solid_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render unicode solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderGlyph_Solid(System.IntPtr,System.UInt16,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render glyph solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderGlyph32_Solid(System.IntPtr,System.UInt32,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render glyph 32 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderText_Shaded(System.IntPtr,System.String,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render text shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_RenderUTF8_Shaded(System.IntPtr,System.Byte*,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color)">
            <summary>
            Internals the ttf render utf 8 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUTF8_Shaded(System.IntPtr,System.String,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render utf 8 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUNICODE_Shaded(System.IntPtr,System.String,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render unicode shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderText_Shaded_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render text shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_RenderUTF8_Shaded_Wrapped(System.IntPtr,System.Byte*,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Internals the ttf render utf 8 shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUTF8_Shaded_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render utf 8 shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUNICODE_Shaded_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render unicode shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderGlyph_Shaded(System.IntPtr,System.UInt16,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render glyph shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderGlyph32_Shaded(System.IntPtr,System.UInt32,SDL2.SDL.SDL_Color,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render glyph 32 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderText_Blended(System.IntPtr,System.String,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render text blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_RenderUTF8_Blended(System.IntPtr,System.Byte*,SDL2.SDL.SDL_Color)">
            <summary>
            Internals the ttf render utf 8 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUTF8_Blended(System.IntPtr,System.String,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render utf 8 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUNICODE_Blended(System.IntPtr,System.String,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render unicode blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderText_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render text blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.INTERNAL_TTF_RenderUTF8_Blended_Wrapped(System.IntPtr,System.Byte*,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Internals the ttf render utf 8 blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUTF8_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render utf 8 blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The result</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderUNICODE_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL.SDL_Color,System.UInt32)">
            <summary>
            Ttfs the render unicode blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderGlyph_Blended(System.IntPtr,System.UInt16,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render glyph blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_RenderGlyph32_Blended(System.IntPtr,System.UInt32,SDL2.SDL.SDL_Color)">
            <summary>
            Ttfs the render glyph 32 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetDirection(System.Int32)">
            <summary>
            Ttfs the set direction using the specified direction
            </summary>
            <param name="direction">The direction</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetScript(System.Int32)">
            <summary>
            Ttfs the set script using the specified script
            </summary>
            <param name="script">The script</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_CloseFont(System.IntPtr)">
            <summary>
            Ttfs the close font using the specified font
            </summary>
            <param name="font">The font</param>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_Quit">
            <summary>
            Ttfs the quit
            </summary>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_WasInit">
            <summary>
            Ttfs the was init
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.SDL_GetFontKerningSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sdls the get font kerning size using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="prev_index">The prev index</param>
            <param name="index">The index</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetFontKerningSizeGlyphs(System.IntPtr,System.UInt16,System.UInt16)">
            <summary>
            Ttfs the get font kerning size glyphs using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="previous_ch">The previous ch</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetFontKerningSizeGlyphs32(System.IntPtr,System.UInt16,System.UInt16)">
            <summary>
            Ttfs the get font kerning size glyphs 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="previous_ch">The previous ch</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_GetError">
            <summary>
            Ttfs the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:SDL2.SDL_ttf.TTF_SetError(System.String)">
            <summary>
            Ttfs the set error using the specified fmt and arglist
            </summary>
            <param name="fmtAndArglist">The fmt and arglist</param>
        </member>
    </members>
</doc>
