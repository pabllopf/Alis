<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core.Ads</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.Aspect.Base.AlisObject">
            <summary>
                The object base class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Name">
            <summary>
                The name
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Tag">
            <summary>
                The tag
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode(System.Object)">
            <summary>
                The object base class
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.Equals(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode">
            <summary>
                Get hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.ToString">
            <summary>
                To string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Attributes.SuppressUnmanagedCodeSecurityAttribute">
            <summary>Allows managed code to call into unmanaged code without a stack walk. This class cannot be inherited.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass">
            <summary>
            The embedded dll class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.CurrentDirectory">
            <summary>
                Gets or sets the value of the current directory
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.ExtractEmbeddedDlls(System.String,System.Byte[])">
            <summary>
                Extract DLLs from resources to temporary folder
            </summary>
            <param name="dllName">name of DLL file to create (including dll suffix)</param>
            <param name="resourceBytes">The resource name (fully qualified)</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.IsRunningOniOS">
            <summary>
                Describes whether this instance is running oni os
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.IsRunningOnAndroid">
            <summary>
                Describes whether this instance is running on android
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException">
            <summary>
                Exception thrown by SFML whenever loading a resource fails
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor">
            <summary>
                Default constructor (unknown error)
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Mapping.Button">
            <summary>
                The button enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.A">
            <summary>
                The  button
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.B">
            <summary>
                The  button
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.Y">
            <summary>
                The  button
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.X">
            <summary>
                The  button
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Mapping.Key">
            <summary>
            The key enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Unknown">
            <summary>Unhandled key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.A">
            <summary>The A key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.B">
            <summary>The B key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.C">
            <summary>The C key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.D">
            <summary>The D key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.E">
            <summary>The E key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F">
            <summary>The F key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.G">
            <summary>The G key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.H">
            <summary>The H key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.I">
            <summary>The I key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.J">
            <summary>The J key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.K">
            <summary>The K key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.L">
            <summary>The L key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.M">
            <summary>The M key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.N">
            <summary>The N key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.O">
            <summary>The O key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.P">
            <summary>The P key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Q">
            <summary>The Q key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.R">
            <summary>The R key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.S">
            <summary>The S key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.T">
            <summary>The T key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.U">
            <summary>The U key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.V">
            <summary>The V key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.W">
            <summary>The W key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.X">
            <summary>The X key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Y">
            <summary>The Y key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Z">
            <summary>The Z key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num0">
            <summary>The 0 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num1">
            <summary>The 1 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num2">
            <summary>The 2 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num3">
            <summary>The 3 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num4">
            <summary>The 4 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num5">
            <summary>The 5 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num6">
            <summary>The 6 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num7">
            <summary>The 7 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num8">
            <summary>The 8 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num9">
            <summary>The 9 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Escape">
            <summary>The Escape key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LControl">
            <summary>The left Control key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LShift">
            <summary>The left Shift key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LAlt">
            <summary>The left Alt key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LSystem">
            <summary>The left OS specific key: window (Windows and Linux), apple (MacOS X), ...</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RControl">
            <summary>The right Control key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RShift">
            <summary>The right Shift key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RAlt">
            <summary>The right Alt key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RSystem">
            <summary>The right OS specific key: window (Windows and Linux), apple (MacOS X), ...</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Menu">
            <summary>The Menu key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LBracket">
            <summary>The [ key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RBracket">
            <summary>The ] key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Semicolon">
            <summary>The ; key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Comma">
            <summary>The , key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Period">
            <summary>The . key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Quote">
            <summary>The ' key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Slash">
            <summary>The / key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Backslash">
            <summary>The \ key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Tilde">
            <summary>The ~ key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Equal">
            <summary>The = key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Hyphen">
            <summary>The - key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Space">
            <summary>The Space key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Enter">
            <summary>The Return key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Backspace">
            <summary>The Backspace key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Tab">
            <summary>The Tabulation key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.PageUp">
            <summary>The Page up key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.PageDown">
            <summary>The Page down key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.End">
            <summary>The End key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Home">
            <summary>The Home key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Insert">
            <summary>The Insert key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Delete">
            <summary>The Delete key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Add">
            <summary>The + key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Subtract">
            <summary>The - key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Multiply">
            <summary>The * key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Divide">
            <summary>The / key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Left">
            <summary>Left arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Right">
            <summary>Right arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Up">
            <summary>Up arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Down">
            <summary>Down arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad0">
            <summary>The numpad 0 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad1">
            <summary>The numpad 1 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad2">
            <summary>The numpad 2 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad3">
            <summary>The numpad 3 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad4">
            <summary>The numpad 4 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad5">
            <summary>The numpad 5 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad6">
            <summary>The numpad 6 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad7">
            <summary>The numpad 7 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad8">
            <summary>The numpad 8 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad9">
            <summary>The numpad 9 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F1">
            <summary>The F1 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F2">
            <summary>The F2 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F3">
            <summary>The F3 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F4">
            <summary>The F4 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F5">
            <summary>The F5 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F6">
            <summary>The F6 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F7">
            <summary>The F7 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F8">
            <summary>The F8 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F9">
            <summary>The F9 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F10">
            <summary>The F10 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F11">
            <summary>The F11 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F12">
            <summary>The F12 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F13">
            <summary>The F13 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F14">
            <summary>The F14 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F15">
            <summary>The F15 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Pause">
            <summary>The Pause key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.KeyCount">
            <summary>The total number of keyboard keys</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Settings.Csfml">
            <summary>
                The csfml class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Audio">
            <summary>
                The audio
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Graphics">
            <summary>
                The graphics
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.System">
            <summary>
                The system
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Window">
            <summary>
                The window
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Data.AssetManager">
            <summary>
                The example class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Data.AssetManager.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Data.AssetManager" /> class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Data.AssetManager._assetPath">
            <summary>
                The application data
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Data.AssetManager.Find(System.String)">
            <summary>
                Finds the asset name
            </summary>
            <param name="assetName">The asset name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuild`1">
            <summary>
                The build interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuild`1.Build">
            <summary>
                Builds this instance
            </summary>
            <returns>The origin</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuilder`1">
            <summary>
                The builder interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder">
            <summary>
                Builders
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAdd`3">
            <summary>
                The add interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAdd`3.Add``1(`2)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2">
            <summary>
                The add animation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2.AddAnimation(`1)">
            <summary>
                Adds the animation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddComponent`2">
            <summary>
                The add component class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(System.Func{``0,`1})">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(``0)">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddFrame`2">
            <summary>
                The add frame interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddFrame`2.AddFrame(`1)">
            <summary>
                Adds the frame using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAngularVelocity`2">
            <summary>
                The angular velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAngularVelocity`2.AngularVelocity(`1)">
            <summary>
                Angular the velocity using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAudio`2">
            <summary>
                The audio interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAudio`2.Audio(`1)">
            <summary>
                Audioes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAuthor`2">
            <summary>
                The author interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAuthor`2.Author(`1)">
            <summary>
                Authors the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2">
            <summary>
                The auto tilling interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2.AutoTilling(`1)">
            <summary>
                Autoes the tilling using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBackground`2">
            <summary>
                The background interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBackground`2.Background(`1)">
            <summary>
                Backgrounds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBodyType`2">
            <summary>
                The body type interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBodyType`2.BodyType(`1)">
            <summary>
                Bodies the type using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IConfiguration`2">
            <summary>
                The configuration interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IConfiguration`2.Configuration(`1)">
            <summary>
                Configurations the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ICreate`2">
            <summary>
                The create interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ICreate`2.Create(`1)">
            <summary>
                Creates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDebug`2">
            <summary>
                The debug interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDebug`2.Debug(`1)">
            <summary>
                Debugs the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDelete`1">
            <summary>
                The delete interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDelete`1.Delete">
            <summary>
                Deletes this instance
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDensity`2">
            <summary>
                The density interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDensity`2.Density(`1)">
            <summary>
                Densities the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDepth`2">
            <summary>
                The depth interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDepth`2.Depth(`1)">
            <summary>
                Depths the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDescription`2">
            <summary>
                The description interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDescription`2.Description(`1)">
            <summary>
                Descriptions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFile`2">
            <summary>
                The file interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFile`2.File(`1)">
            <summary>
                Files the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFilePath`2">
            <summary>
                The file path interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFilePath`2.FilePath(`1)">
            <summary>
                Files the path using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2">
            <summary>
                The fixed rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2.FixedRotation(`1)">
            <summary>
                Fixeds the rotation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFriction`2">
            <summary>
                The friction interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFriction`2.Friction(`1)">
            <summary>
                Frictions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGeneral`2">
            <summary>
                The general interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGeneral`2.General(`1)">
            <summary>
                Generals the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGraphic`2">
            <summary>
                The graphic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGraphic`2.Graphic(`1)">
            <summary>
                Graphics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravity`3">
            <summary>
                The gravity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravity`3.Gravity(`1,`2)">
            <summary>
                Gravities the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravityScale`2">
            <summary>
                The gravity scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravityScale`2.GravityScale(`1)">
            <summary>
                Gravities the scale using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IHas`2">
            <summary>
                The has interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IHas`2.Has(`1)">
            <summary>
                Hases the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIcon`2">
            <summary>
                The icon interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIcon`2.Icon(`1)">
            <summary>
                Icons the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIs`3">
            <summary>
                The is interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIs`3.Is``1(`2)">
            <summary>
                Ises the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsActive`2">
            <summary>
                The is active interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsActive`2.IsActive(`1)">
            <summary>
                Ises the active using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2">
            <summary>
                The is dynamic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic">
            <summary>
                Ises the dynamic
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic(`1)">
            <summary>
                Ises the dynamic using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsStatic`2">
            <summary>
                The is static interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic">
            <summary>
                Ises the static
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic(`1)">
            <summary>
                Ises the static using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2">
            <summary>
                The is trigger interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger">
            <summary>
                Ises the trigger
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger(`1)">
            <summary>
                Ises the trigger using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3">
            <summary>
                The linear velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3.LinearVelocity(`1,`2)">
            <summary>
                Linears the velocity using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManager`3">
            <summary>
                The manager interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManager`3.Manager``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManagerOf`3">
            <summary>
                The manager of interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManagerOf`3.ManagerOf``1(`2)">
            <summary>
                Managers the of using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMass`2">
            <summary>
                The mass interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMass`2.Mass(`1)">
            <summary>
                Masses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMute`2">
            <summary>
                The mute interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMute`2.Mute(`1)">
            <summary>
                Mutes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IName`2">
            <summary>
                The name interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IName`2.Name(`1)">
            <summary>
                Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IOrder`2">
            <summary>
                The order interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IOrder`2.Order(`1)">
            <summary>
                Orders the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPhysic`2">
            <summary>
                The physic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPhysic`2.Physic(`1)">
            <summary>
                Physics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2">
            <summary>
                The play on awake interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2.PlayOnAwake(`1)">
            <summary>
                Plays the on awake using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPosition2D`3">
            <summary>
                The position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPosition2D`3.Position(`1,`2)">
            <summary>
                Positions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3">
            <summary>
                The relative position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3.RelativePosition(`1,`2)">
            <summary>
                Relatives the position using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IResolution`3">
            <summary>
                The resolution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IResolution`3.Resolution(`1,`2)">
            <summary>
                Resolutions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRestitution`2">
            <summary>
                The restitution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRestitution`2.Restitution(`1)">
            <summary>
                Restitutions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRotation`2">
            <summary>
                The rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRotation`2.Rotation(`1)">
            <summary>
                Rotations the angle
            </summary>
            <param name="angle">The angle</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRun">
            <summary>
                The run interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRun.Run">
            <summary>
                Runs this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScale2D`3">
            <summary>
                The scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScale2D`3.Scale(`1,`2)">
            <summary>
                Scales the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScreenMode`2">
            <summary>
                The screen mode interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScreenMode`2.ScreenMode(`1)">
            <summary>
                Screens the mode using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISet`3">
            <summary>
                The set interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISet`3.Set``1(`2)">
            <summary>
                Sets the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2">
            <summary>
                The set audio clip interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2.SetAudioClip(`1)">
            <summary>
                Sets the audio clip using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetMax`3">
            <summary>
                The set max interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetMax`3.SetMax``1(`2)">
            <summary>
                Sets the max using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetTexture`2">
            <summary>
                The texture interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetTexture`2.SetTexture(`1)">
            <summary>
                Textures the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISettings`2">
            <summary>
                The settings interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISettings`2.Settings(`1)">
            <summary>
                Settingses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISize`3">
            <summary>
                The size interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISize`3.Size(`1,`2)">
            <summary>
                Sizes the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISpeed`2">
            <summary>
                The speed interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISpeed`2.Speed(`1)">
            <summary>
                Speeds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2">
            <summary>
                The splash screen interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2.SplashScreen(`1)">
            <summary>
                Splashes the screen using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IStyle`2">
            <summary>
                The style interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IStyle`2.Style(`1)">
            <summary>
                Styles the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITime`2">
            <summary>
                The time interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITime`2.Time(`1)">
            <summary>
                Times the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITransform`2">
            <summary>
                The transform interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITransform`2.Transform(`1)">
            <summary>
                Transforms the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IUpdate`2">
            <summary>
                The update interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IUpdate`2.Update(`1)">
            <summary>
                Updates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IVolume`2">
            <summary>
                The volume interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IVolume`2.Volume(`1)">
            <summary>
                Volumes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWhere`2">
            <summary>
                The where interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWhere`2.Where(`1)">
            <summary>Wheres the specified value.</summary>
            <param name="value">The value.</param>
            <returns>
                <br />
            </returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWindow`2">
            <summary>
                The window interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWindow`2.Window(`1)">
            <summary>
                Windows the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWith`3">
            <summary>
                Simple comment
            </summary>
            <typeparam name="TBuilder">the builder</typeparam>
            <typeparam name="TArgument">the argument</typeparam>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWith`3.With``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithName`2">
            <summary>Define the word "Name" </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithName`2.WithName(`1)">
            <summary>Withes the name.</summary>
            <param name="value">The value.</param>
            <returns>Return the value that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithTag`2">
            <summary>
                Define the word "Tag"
            </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithTag`2.WithTag(`1)">
            <summary>Withes the tag.</summary>
            <param name="value">The value.</param>
            <returns>return the object that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Color">
            <summary>
                Color for debug drawing. Each value has the range [0,1].
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.r">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.g">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.b">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Color" /> class
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.Set(System.Single,System.Single,System.Single)">
            <summary>
                Sets the r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleController">
            <summary>
                The console controller class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.ConsoleController" /> class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._filePath">
            <summary>
                The file path
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._dirPath">
            <summary>
                The dir path
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.Print(Alis.Core.Aspect.Logging.Message)">
            <summary>
                Prints the to console using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleLogConfig">
            <summary>
                The console log config class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.InfoMessageColor">
            <summary>
                Info text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.LogMessageColor">
            <summary>
                Log text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.TraceMessageColor">
            <summary>
                Trace text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.WarningMessageColor">
            <summary>
                Warning text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ErrorMessageColor">
            <summary>
                Error text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ExceptionMessageColor">
            <summary>
                Exception text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.EventMessageColor">
            <summary>
                Event text color
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleLogConfig.GetColorMessageByType(Alis.Core.Aspect.Logging.MessageType)">
            <summary>
                Gets the color message by type using the specified message type
            </summary>
            <param name="messageType">The message type</param>
            <exception cref="T:System.ArgumentOutOfRangeException">null</exception>
            <returns>The console color</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.FileController">
            <summary>
                The file controller class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Logger">
            <summary>
                The logger class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace">
            <summary>
                Traces the message
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace(System.String)">
            <summary>
                Traces the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info">
            <summary>
                Info
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info(System.String)">
            <summary>
                Info the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Log(System.String)">
            <summary>
                Logs the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event(System.String)">
            <summary>
                Events the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event">
            <summary>
                Events
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Warning(System.String)">
            <summary>
                Warnings the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Error(System.String)">
            <summary>
                Errors the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.String)">
            <summary>
                Exceptions the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.Exception)">
            <summary>
                Exceptions the exception
            </summary>
            <param name="exception">The exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.LogLevel">
            <summary>
                The log level enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Info">
            <summary>
                The info log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Log">
            <summary>
                The log log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Normal">
            <summary>
                The normal log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Critical">
            <summary>
                The critical log level
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Message">
            <summary>
                The message class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Message.#ctor(Alis.Core.Aspect.Logging.MessageType,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Message" /> class
            </summary>
            <param name="messageType">The message type</param>
            <param name="content">The content</param>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.DateTime">
            <summary>
                Gets or sets the value of the date time
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.MessageType">
            <summary>
                Gets or sets the value of the message type
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Level">
            <summary>
                Gets or sets the value of the level
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Content">
            <summary>
                Gets or sets the value of the content
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.StackTrace">
            <summary>
                Gets or sets the value of the stack trace
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Method">
            <summary>
                Gets or sets the value of the method
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.File">
            <summary>
                Gets or sets the value of the file
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Line">
            <summary>
                Gets or sets the value of the line
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.MessageType">
            <summary>
                The message type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Trace">
            <summary>
                The trace message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Info">
            <summary>
                The info message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Log">
            <summary>
                The log message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Event">
            <summary>
                The event message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Warning">
            <summary>
                The warning message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Error">
            <summary>
                The error message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Exception">
            <summary>
                The exception message type
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Exceptions.ArgumentExceptionDestinationTooShort">
            <summary>
                The argument exception destination too short class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException">
            <summary>
                The insufficient number of elements exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException" /> class
            </summary>
            <param name="i">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle.CircleF">
            <summary>
                The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle.CircleI">
            <summary>
                The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF">
            <summary>
                RectangleI is an utility class for manipulating 2D rectangles
                with float coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the rectangle from its coordinates
            </summary>
            <param name="left">Left coordinate of the rectangle</param>
            <param name="top">Top coordinate of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Contains(System.Single,System.Single)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Explicit(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)~Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI">
            <summary>
                Explicit casting to another rectangle type
            </summary>
            <param name="r">Rectangle being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI">
            <summary>
                RectangleI is an utility class for manipulating 2D rectangles
                with integer coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the rectangle from its coordinates
            </summary>
            <param name="left">Left coordinate of the rectangle</param>
            <param name="top">Top coordinate of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.#ctor(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Contains(System.Int32,System.Int32)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Explicit(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)~Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF">
            <summary>
                Explicit casting to another rectangle type
            </summary>
            <param name="r">Rectangle being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube.CubeF">
            <summary>
                The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube.CubeI">
            <summary>
                The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere.SphereF">
            <summary>
                The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere.SphereI">
            <summary>
                The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.MathF">
            <summary>
            The math class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.E">
            <summary>Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.PI">
            <summary>Represents the ratio of the circumference of a circle to its diameter, specified by the constant, p.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.Tau">
            <summary>Represents the number of radians in one turn, specified by the constant, τ.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Sqrt(System.Single)">
            <summary>
            Sqrts the x
            </summary>
            <param name="x">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Abs(System.Single)">
            <summary>
            Abses the value
            </summary>
            <param name="value">The value</param>
            <returns>The float</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.MaxIterations">
            <summary>
            The max iterations
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Cos(System.Single)">
            <summary>
            Coses the x
            </summary>
            <param name="x">The </param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Sin(System.Single)">
            <summary>
            Sins the x
            </summary>
            <param name="x">The </param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Acos(System.Single)">
            <summary>
            Acoses the x
            </summary>
            <param name="x">The </param>
            <returns>The angle</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4x4">
            <summary>
                The matrix
            </summary>
            <summary>
                The matrix
            </summary>
            <summary>
                The matrix
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4x4.CanonicalBasis">
            <summary>
                The canonical basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.CanonicalBasis.Row0">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.CanonicalBasis.Row1">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.CanonicalBasis.Row2">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.BillboardEpsilon">
            <summary>
                The billboard epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.BillboardMinAngle">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.DecomposeEpsilon">
            <summary>
                The decompose epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M11">
            <summary>The first element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M12">
            <summary>The second element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M13">
            <summary>The third element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M14">
            <summary>The fourth element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M21">
            <summary>The first element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M22">
            <summary>The second element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M23">
            <summary>The third element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M24">
            <summary>The fourth element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M31">
            <summary>The first element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M32">
            <summary>The second element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M33">
            <summary>The third element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M34">
            <summary>The fourth element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M41">
            <summary>The first element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M42">
            <summary>The second element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M43">
            <summary>The third element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M44">
            <summary>The fourth element of the fourth row.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a 4x4 matrix from the specified components.</summary>
            <param name="m11">The value to assign to the first element in the first row.</param>
            <param name="m12">The value to assign to the second element in the first row.</param>
            <param name="m13">The value to assign to the third element in the first row.</param>
            <param name="m14">The value to assign to the fourth element in the first row.</param>
            <param name="m21">The value to assign to the first element in the second row.</param>
            <param name="m22">The value to assign to the second element in the second row.</param>
            <param name="m23">The value to assign to the third element in the second row.</param>
            <param name="m24">The value to assign to the third element in the second row.</param>
            <param name="m31">The value to assign to the first element in the third row.</param>
            <param name="m32">The value to assign to the second element in the third row.</param>
            <param name="m33">The value to assign to the third element in the third row.</param>
            <param name="m34">The value to assign to the fourth element in the third row.</param>
            <param name="m41">The value to assign to the first element in the fourth row.</param>
            <param name="m42">The value to assign to the second element in the fourth row.</param>
            <param name="m43">The value to assign to the third element in the fourth row.</param>
            <param name="m44">The value to assign to the fourth element in the fourth row.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.#ctor(Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Creates a <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4x4" /> object from a specified <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3x2" /> object.</summary>
            <param name="value">A 3x2 matrix.</param>
            <remarks>
                This constructor creates a 4x4 matrix whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M13" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M14" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M23" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M24" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M31" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M32" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M34" />, and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M43" /> components are
                zero, and whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M33" /> and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.M44" /> components are one.
            </remarks>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4x4.Identity">
            <summary>Gets the multiplicative identity matrix.</summary>
            <value>Gets the multiplicative identity matrix.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4x4.IsIdentity">
            <summary>Indicates whether the current matrix is the identity matrix.</summary>
            <value><see langword="true" /> if the current matrix is the identity matrix; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4x4.Translation">
            <summary>Gets or sets the translation component of this matrix.</summary>
            <value>The translation component of the current instance.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a customized orthographic projection matrix.</summary>
            <param name="left">The minimum X-value of the view volume.</param>
            <param name="right">The maximum X-value of the view volume.</param>
            <param name="bottom">The minimum Y-value of the view volume.</param>
            <param name="top">The maximum Y-value of the view volume.</param>
            <param name="zNearPlane">The minimum Z-value of the view volume.</param>
            <param name="zFarPlane">The maximum Z-value of the view volume.</param>
            <returns>The orthographic projection matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4x4,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4x4,Alis.Core.Aspect.Math.Matrix.Matrix4x4)" /> method defines the operation of the addition operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4x4" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.op_Equality(Alis.Core.Aspect.Math.Matrix.Matrix4x4,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Returns a value that indicates whether the specified matrices are equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to care</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>Two matrices are equal if all their corresponding elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.op_Inequality(Alis.Core.Aspect.Math.Matrix.Matrix4x4,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Returns a value that indicates whether the specified matrices are not equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.Add(Alis.Core.Aspect.Math.Matrix.Matrix4x4,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.CreateRotationZ(System.Single)">
            <summary>Creates a matrix for rotating points around the Z axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Z-axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.Transform(Alis.Core.Aspect.Math.Matrix.Matrix4x4,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Transforms the specified matrix by applying the specified Quaternion rotation.</summary>
            <param name="value">The matrix to transform.</param>
            <param name="rotation">The rotation t apply.</param>
            <returns>The transformed matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4x4" /> object and the corresponding elements of each matrix are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.Equals(Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Returns a value that indicates whether this instance and another 4x4 matrix are equal.</summary>
            <param name="other">The other matrix.</param>
            <returns><see langword="true" /> if the two matrices are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.GetDeterminant">
            <summary>Calculates the determinant of the current 4x4 matrix.</summary>
            <returns>The determinant.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4x4.ToString">
            <summary>Returns a string that represents this matrix.</summary>
            <returns>The string representation of this matrix.</returns>
            <remarks>
                The numeric values in the returned string are formatted by using the conventions of the current culture. For
                example, for the en-US culture, the returned string might appear as
                <c>
                    { {M11:1.1 M12:1.2 M13:1.3 M14:1.4} {M21:2.1 M22:2.2 M23:2.3 M24:2.4} {M31:3.1 M32:3.2 M33:3.3 M34:3.4}
                    {M41:4.1
                    M42:4.2 M43:4.3 M44:4.4} }
                </c>
                .
            </remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4x4.VectorBasis">
            <summary>
                The vector basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.VectorBasis.Element0">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.VectorBasis.Element1">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4x4.VectorBasis.Element2">
            <summary>
                The element
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix2X2F">
            <summary>
                A 2-by-2 matrix. Stored in column-major order.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ex">
            <summary>
                The col
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ey">
            <summary>
                The col
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Construct this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct this matrix using scalars.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single)">
            <summary>
                Construct this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initialize this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(System.Single)">
            <summary>
                Initialize this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetIdentity">
            <summary>
                Set this to the identity matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetZero">
            <summary>
                Set this matrix to all zeros.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetAngle">
            <summary>
                Extract the angle from this matrix (assumed to be a rotation matrix).
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetInverse">
            <summary>
                Compute the inverse of this matrix, such that inv(A) * A = identity.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Solve(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient
                than computing the inverse in one-shot cases.
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Identity">
            <summary>
                Gets the value of the identity
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix2X2F,Alis.Core.Aspect.Math.Matrix.Matrix2X2F)">
            <summary>
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Inverse">
            <summary>
                Gets the value of the inverse
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix3x2">
            <summary>
            The matrix 3x class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Equals(Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>
            Describes whether this instance equals
            </summary>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Equals(System.Object)">
            <summary>
            Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.RotationEpsilon">
            <summary>
            The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2._identity">
            <summary>
            The matrix 3x
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.M11">
            <summary>The first element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.M12">
            <summary>The second element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.M21">
            <summary>The first element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.M22">
            <summary>The second element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.M31">
            <summary>The first element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3x2.M32">
            <summary>The second element of the third row.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a 3x2 matrix from the specified components.</summary>
            <param name="m11">The value to assign to the first element in the first row.</param>
            <param name="m12">The value to assign to the second element in the first row.</param>
            <param name="m21">The value to assign to the first element in the second row.</param>
            <param name="m22">The value to assign to the second element in the second row.</param>
            <param name="m31">The value to assign to the first element in the third row.</param>
            <param name="m32">The value to assign to the second element in the third row.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Identity">
            <summary>Gets the multiplicative identity matrix.</summary>
            <value>The multiplicative identify matrix.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix3x2.IsIdentity">
            <summary>Gets a value that indicates whether the current matrix is the identity matrix.</summary>
            <value><see langword="true" /> if the current matrix is the identity matrix; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Translation">
            <summary>Gets or sets the translation component of this matrix.</summary>
            <value>The translation component of the current instance.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)" /> method defines the operation of the addition operator for <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3x2" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Equality(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Returns a value that indicates whether the specified matrices are equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns><see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two matrices are equal if all their corresponding elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Inequality(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Returns a value that indicates whether the specified matrices are not equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns><see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3x2,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_Subtraction(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from its corresponding element in <paramref name="value1" />.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Subtract(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)" /> method defines the operation of the subtraction operator for <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3x2" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.op_UnaryNegation(Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Add(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateScale(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix from the specified vector scale.</summary>
            <param name="scales">The scale to use.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateScale(System.Single,System.Single)">
            <summary>Creates a scaling matrix from the specified X and Y components.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateScale(System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix that is offset by a given center point.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateScale(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix from the specified vector scale with an offset from the specified center point.</summary>
            <param name="scales">The scale to use.</param>
            <param name="centerPoint">The center offset.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateScale(System.Single)">
            <summary>Creates a scaling matrix that scales uniformly with the given scale.</summary>
            <param name="scale">The uniform scale to use.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateScale(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.</summary>
            <param name="scale">The uniform scale to use.</param>
            <param name="centerPoint">The center offset.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateTranslation(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a translation matrix from the specified 2-dimensional vector.</summary>
            <param name="position">The translation position.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.CreateTranslation(System.Single,System.Single)">
            <summary>Creates a translation matrix from the specified X and Y components.</summary>
            <param name="xPosition">The X position.</param>
            <param name="yPosition">The Y position.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Invert(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2@)">
            <summary>Tries to invert the specified matrix. The return value indicates whether the operation succeeded.</summary>
            <param name="matrix">The matrix to invert.</param>
            <param name="result">When this method returns, contains the inverted matrix if the operation succeeded.</param>
            <returns><see langword="true" /> if <paramref name="matrix" /> was converted successfully; otherwise,  <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Lerp(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2,System.Single)">
            <summary>Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.</summary>
            <param name="matrix1">The first matrix.</param>
            <param name="matrix2">The second matrix.</param>
            <param name="amount">The relative weighting of <paramref name="matrix2" />.</param>
            <returns>The interpolated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3x2,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Negate(Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.Subtract(Alis.Core.Aspect.Math.Matrix.Matrix3x2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from its corresponding element in <paramref name="value1" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.GetDeterminant">
            <summary>Calculates the determinant for this matrix.</summary>
            <returns>The determinant.</returns>
            <remarks>The determinant is calculated by expanding the matrix with a third column whose values are (0,0,1).</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3x2.ToString">
            <summary>Returns a string that represents this matrix.</summary>
            <returns>The string representation of this matrix.</returns>
            <remarks>The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as <c>{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }</c>.</remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> is a struct representing a glsl mat3 value
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ex">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ey">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ez">
            <summary>
                The ez
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Construct this matrix using columns.</summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="c3">The c3.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> from its components
            </summary>
            <remarks>
                Arguments are in row-major order
            </remarks>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.array">
            <summary>
                The array
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve33(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve22(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases. Solve only the upper 2-by-2 matrix equation.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetInverse22(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the inverse of this matrix as a 2-by-2.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetSymInverse33(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the symmetric inverse of this matrix as a 3-by-3.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Dot(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Dots the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Cross(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Crosses the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The vector</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Rotation">
            <summary>Rotation</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Sine">
            Sine and cosine
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Cosine">
            Sine and cosine
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.#ctor(System.Single)">
            <summary>Initialize from an angle in radians</summary>
            <param name="angle">Angle in radians</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.Set(System.Single)">
            <summary>Set using an angle in radians.</summary>
            <param name="angle"></param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.SetIdentity">
            <summary>Set to the identity rotation</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetAngle">
            <summary>Get the angle in radians</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetXAxis">
            <summary>Get the x-axis</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetYAxis">
            <summary>Get the y-axis</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Transform">
            <summary>
                A transform contains translation and rotation. It is used to represent the position and orientation of rigid
                frames.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Position">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Scale">
            <summary>
                The scale
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Rotation">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Transform" /> class
            </summary>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="scale">The scale</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.SetIdentity">
            <summary>Set this to the identity transform.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.Set(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Set this based on the position and angle.</summary>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Constant">
            <summary>
                The math constants class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Euler">
            <summary>
                The euler
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.E">
            <summary>Represents the mathematical constant e(2.71828175).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log10E">
            <summary>Represents the log base ten of e(0.4342945).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log2E">
            <summary>Represents the log base two of e(1.442695).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Pi">
            <summary>Represents the value of pi(3.14159274).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver2">
            <summary>Represents the value of pi divided by two(1.57079637).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver4">
            <summary>Represents the value of pi divided by four(0.7853982).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.TwoPi">
            <summary>Represents the value of pi times two(6.28318548).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Tau">
            <summary>Represents the value of pi times two(6.28318548). This is an alias of TwoPi.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.HashCode">
            <summary>
            The hash code
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.s_seed">
            <summary>
            The generate global seed
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime1">
            <summary>
            The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime2">
            <summary>
            The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime3">
            <summary>
            The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime4">
            <summary>
            The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime5">
            <summary>
            The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v1">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v2">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v3">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v4">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._queue1">
            <summary>
            The queue
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._queue2">
            <summary>
            The queue
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._queue3">
            <summary>
            The queue
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._length">
            <summary>
            The length
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.GenerateGlobalSeed">
            <summary>
            Generates the global seed
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``1(``0)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <param name="value1">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``2(``0,``1)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``3(``0,``1,``2)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``4(``0,``1,``2,``3)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``5(``0,``1,``2,``3,``4)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <typeparam name="T6">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <param name="value6">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <typeparam name="T6">The </typeparam>
            <typeparam name="T7">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <param name="value6">The value</param>
            <param name="value7">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <typeparam name="T6">The </typeparam>
            <typeparam name="T7">The </typeparam>
            <typeparam name="T8">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <param name="value6">The value</param>
            <param name="value7">The value</param>
            <param name="value8">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Initialize(System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            Initializes the v 1
            </summary>
            <param name="v1">The </param>
            <param name="v2">The </param>
            <param name="v3">The </param>
            <param name="v4">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Round(System.UInt32,System.UInt32)">
            <summary>
            Rounds the hash
            </summary>
            <param name="hash">The hash</param>
            <param name="input">The input</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.QueueRound(System.UInt32,System.UInt32)">
            <summary>
            Queues the round using the specified hash
            </summary>
            <param name="hash">The hash</param>
            <param name="queuedValue">The queued value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.MixState(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Mixes the state using the specified v 1
            </summary>
            <param name="v1">The </param>
            <param name="v2">The </param>
            <param name="v3">The </param>
            <param name="v4">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.RotateLeft(System.UInt32,System.Int32)">
            <summary>
            Rotates the left using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="offset">The offset</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.MixEmptyState">
            <summary>
            Mixes the empty state
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.MixFinal(System.UInt32)">
            <summary>
            Mixes the final using the specified hash
            </summary>
            <param name="hash">The hash</param>
            <returns>The hash</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Add``1(``0)">
            <summary>
            Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Add``1(``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <param name="comparer">The comparer</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Add(System.Int32)">
            <summary>
            Adds the value
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.ToHashCode">
            <summary>
            Returns the hash code
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Helper">
            <summary>Contains commonly used precalculated values and mathematical operations.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two
                normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the
                coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the
                coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Single,System.Single,System.Single)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Distance(System.Single,System.Single)">
            <summary>Calculates the absolute value of the difference of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)">
            <summary>Linearly interpolates between two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>value1 + (value2 - value1) * amount</code>. Passing amount a value of 0 will cause value1 to be returned, a
                value
                of 1 will cause value2 to be returned. See <see cref="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)" /> for a less efficient version with
                more
                precision around edge cases.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)">
            <summary>
                Linearly interpolates between two values. This method is a less efficient, more precise version of
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" />. See remarks for more info.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>((1 - amount) * value1) + (value2 * amount)</code>. Passing amount a value of 0 will cause value1 to be
                returned,
                a value of 1 will cause value2 to be returned. This method does not have the floating point precision issue that
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> has. i.e. If there is a big gap between value1 and value2 in magnitude (e.g.
                value1=10000000000000000, value2=1), right at the edge of the interpolation range (amount=1),
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> will return 0 (whereas it should return 1). This also holds for value1=10^17,
                value2=10;
                value1=10^18,value2=10^2... so on. For an in depth explanation of the issue, see below references: Relevant
                Wikipedia
                Article: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support Relevant StackOverflow
                Answer:
                http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Single,System.Single)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Int32,System.Int32)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Single,System.Single)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Int32,System.Int32)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>Interpolates between two values using a cubic equation.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToDegrees(System.Single)">
            <summary>Converts radians to degrees.</summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = 180 / pi</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToRadians(System.Single)">
            <summary>Converts degrees to radians.</summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = pi / 180</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.WrapAngle(System.Single)">
            <summary>Reduces a given angle to a value between π and -π.</summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.IsPowerOfTwo(System.Int32)">
            <summary>Determines if value is powered by two.</summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Quaternion">
            <summary>
            The quaternion
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.SlerpEpsilon">
            <summary>
            The slerp epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.X">
            <summary>The X value of the vector component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.Y">
            <summary>The Y value of the vector component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.Z">
            <summary>The Z value of the vector component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.W">
            <summary>The rotation component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.Count">
            <summary>
            The count
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Constructs a quaternion from the specified components.</summary>
            <param name="x">The value to assign to the X component of the quaternion.</param>
            <param name="y">The value to assign to the Y component of the quaternion.</param>
            <param name="z">The value to assign to the Z component of the quaternion.</param>
            <param name="w">The value to assign to the W component of the quaternion.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.#ctor(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Creates a quaternion from the specified vector and rotation parts.</summary>
            <param name="vectorPart">The vector part of the quaternion.</param>
            <param name="scalarPart">The rotation part of the quaternion.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Util.Quaternion.Zero">
            <summary>Gets a quaternion that represents a zero.</summary>
            <value>A quaternion whose values are <c>(0, 0, 0, 0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Util.Quaternion.Identity">
            <summary>Gets a quaternion that represents no rotation.</summary>
            <value>A quaternion whose values are <c>(0, 0, 0, 1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Util.Quaternion.IsIdentity">
            <summary>Gets a value that indicates whether the current instance is the identity quaternion.</summary>
            <value><see langword="true" /> if the current instance is the identity quaternion; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Addition(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Adds each element in one quaternion with its corresponding element in a second quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The quaternion that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Addition(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the addition operator for <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Division(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Divides one quaternion by a second quaternion.</summary>
            <param name="value1">The dividend.</param>
            <param name="value2">The divisor.</param>
            <returns>The quaternion that results from dividing <paramref name="value1" /> by <paramref name="value2" />.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Division(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the division operation for <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Equality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns a value that indicates whether two quaternions are equal.</summary>
            <param name="value1">The first quaternion to compare.</param>
            <param name="value2">The second quaternion to compare.</param>
            <returns><see langword="true" /> if the two quaternions are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two quaternions are equal if each of their corresponding components is equal.
            The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Equality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the equality operator for <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Inequality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns a value that indicates whether two quaternions are not equal.</summary>
            <param name="value1">The first quaternion to compare.</param>
            <param name="value2">The second quaternion to compare.</param>
            <returns><see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Multiply(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the quaternion that results from multiplying two quaternions together.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The product quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Multiply(Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.</summary>
            <param name="value1">The source quaternion.</param>
            <param name="value2">The scalar value.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Subtraction(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Subtracts each element in a second quaternion from its corresponding element in a first quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The quaternion containing the values that result from subtracting each element in <paramref name="value2" /> from its corresponding element in <paramref name="value1" />.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Subtraction(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the subtraction operator for <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_UnaryNegation(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Reverses the sign of each component of the quaternion.</summary>
            <param name="value">The quaternion to negate.</param>
            <returns>The negated quaternion.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_UnaryNegation(Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the unary negation operator for <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Add(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Adds each element in one quaternion with its corresponding element in a second quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The quaternion that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Concatenate(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Concatenates two quaternions.</summary>
            <param name="value1">The first quaternion rotation in the series.</param>
            <param name="value2">The second quaternion rotation in the series.</param>
            <returns>A new quaternion representing the concatenation of the <paramref name="value1" /> rotation followed by the <paramref name="value2" /> rotation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Conjugate(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the conjugate of a specified quaternion.</summary>
            <param name="value">The quaternion.</param>
            <returns>A new quaternion that is the conjugate of <see langword="value" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.CreateFromAxisAngle(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Creates a quaternion from a unit vector and an angle to rotate around the vector.</summary>
            <param name="axis">The unit vector to rotate around.</param>
            <param name="angle">The angle, in radians, to rotate around the vector.</param>
            <returns>The newly created quaternion.</returns>
            <remarks><paramref name="axis" /> vector must be normalized before calling this method or the resulting <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> will be incorrect.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.CreateFromRotationMatrix(Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Creates a quaternion from the specified rotation matrix.</summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>Creates a new quaternion from the given yaw, pitch, and roll.</summary>
            <param name="yaw">The yaw angle, in radians, around the Y axis.</param>
            <param name="pitch">The pitch angle, in radians, around the X axis.</param>
            <param name="roll">The roll angle, in radians, around the Z axis.</param>
            <returns>The resulting quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Divide(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Divides one quaternion by a second quaternion.</summary>
            <param name="value1">The dividend.</param>
            <param name="value2">The divisor.</param>
            <returns>The quaternion that results from dividing <paramref name="value1" /> by <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Dot(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Calculates the dot product of two quaternions.</summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Inverse(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the inverse of a quaternion.</summary>
            <param name="value">The quaternion.</param>
            <returns>The inverted quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Lerp(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.</summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="amount">The relative weight of <paramref name="quaternion2" /> in the interpolation.</param>
            <returns>The interpolated quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Multiply(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the quaternion that results from multiplying two quaternions together.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The product quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Multiply(Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.</summary>
            <param name="value1">The source quaternion.</param>
            <param name="value2">The scalar value.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Negate(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Reverses the sign of each component of the quaternion.</summary>
            <param name="value">The quaternion to negate.</param>
            <returns>The negated quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Normalize(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Divides each component of a specified <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> by its length.</summary>
            <param name="value">The quaternion to normalize.</param>
            <returns>The normalized quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Slerp(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>Interpolates between two quaternions, using spherical linear interpolation.</summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="amount">The relative weight of the second quaternion in the interpolation.</param>
            <returns>The interpolated quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Subtract(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Subtracts each element in a second quaternion from its corresponding element in a first quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The quaternion containing the values that result from subtracting each element in <paramref name="value2" /> from its corresponding element in <paramref name="value1" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns <see langword="false" />.</returns>
            <remarks>The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> object and the corresponding components of each matrix are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Equals(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns a value that indicates whether this instance and another quaternion are equal.</summary>
            <param name="other">The other quaternion.</param>
            <returns><see langword="true" /> if the two quaternions are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two quaternions are equal if each of their corresponding components is equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Length">
            <summary>Calculates the length of the quaternion.</summary>
            <returns>The computed length of the quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.LengthSquared">
            <summary>Calculates the squared length of the quaternion.</summary>
            <returns>The length squared of the quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.ToString">
            <summary>Returns a string that represents this quaternion.</summary>
            <returns>The string representation of this quaternion.</returns>
            <remarks>The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as <c>{X:1.1 Y:2.2 Z:3.3 W:4.4}</c>.</remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.RandomUtils">
            <summary>
            The random utils class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.RandomUtils.random">
            <summary>
            The random
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.RandomUtils.GetInt32(System.Int32,System.Int32)">
            <summary>
            Gets the random int using the specified min value
            </summary>
            <param name="minValue">The min value</param>
            <param name="maxValue">The max value</param>
            <exception cref="T:System.ArgumentException">minValue must be less than or equal to maxValue.</exception>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.RandomUtils.GetInt32(System.Int32)">
            <summary>
            Gets the random int using the specified value
            </summary>
            <param name="value">The value</param>
            <exception cref="T:System.ArgumentException">value must be greater than or equal to 0.</exception>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> object whose two elements have the same value.</summary>
            <param name="value">The value to assign to both elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.#ctor(System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.Y" /> field.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.Zero">
            <summary>Returns a vector whose 2 elements are equal to zero.</summary>
            <value>A vector whose two elements are equal to zero (that is, it returns the vector <c>(0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.One">
            <summary>Gets a vector whose 2 elements are equal to one.</summary>
            <value>A vector whose two elements are equal to one (that is, it returns the vector <c>(1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.UnitX">
            <summary>Gets the vector (1,0).</summary>
            <value>The vector <c>(1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.UnitY">
            <summary>Gets the vector (0,1).</summary>
            <value>The vector <c>(0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Division(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Division(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> objects are equal if each value in <paramref name="left" /> is equal to the
                corresponding value in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)" /> method defines the subtraction operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2)" /> method defines the unary negation operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Abs(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Add(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Clamp(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Distance(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Divide(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Divide(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Dot(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Lerp(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
            <remarks>
                <format type="text/markdown"><![CDATA[
            The behavior of this method changed in .NET 5.0. For more information, see [Behavior change for Vector2.Lerp and Vector4.Lerp](/dotnet/core/compatibility/3.1-5.0#behavior-change-for-vector2lerp-and-vector4lerp).
            ]]></format>
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Max(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Min(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Multiply(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Multiply(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Negate(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Normalize(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Reflect(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Subtract(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Transform(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Transforms a vector by a specified 3x2 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Transform(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Transform(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix3x2)">
            <summary>Transforms a vector normal by the given 3x2 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least two elements. The method copies the vector's elements starting at
                index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the two vector elements. In
                other words, elements <paramref name="index" /> and <paramref name="index" /> + 1 must already exist in
                <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> object and their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.Y" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Equals(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.Y" /> elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Length">
            <summary>Returns the length of the vector.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> is a struct represent a glsl bvec2 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2B.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Vector2i is an utility class for manipulating 2 dimensional
                vectors with integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; returns the opposite of a vector
            </summary>
            <param name="v">Vector to negate</param>
            <returns>-v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(System.Int32,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Division(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Vector2u is an utility class for manipulating 2 dimensional
                vectors with unsigned integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(System.UInt32,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Division(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.Z">
            <summary>The Z component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> object whose three elements have the same value.</summary>
            <param name="value">The value to assign to all three elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> class
            </summary>
            <param name="value">The value</param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Y" /> field.</param>
            <param name="z">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Z" /> field.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.Zero">
            <summary>Gets a vector whose 3 elements are equal to zero.</summary>
            <value>A vector whose three elements are equal to zero (that is, it returns the vector <c>(0,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.One">
            <summary>Gets a vector whose 3 elements are equal to one.</summary>
            <value>A vector whose three elements are equal to one (that is, it returns the vector <c>(1,1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.UnitX">
            <summary>Gets the vector (1,0,0).</summary>
            <value>The vector <c>(1,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.UnitY">
            <summary>Gets the vector (0,1,0).</summary>
            <value>The vector <c>(0,1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.UnitZ">
            <summary>Gets the vector (0,0,1).</summary>
            <value>The vector <c>(0,0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Division(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Division(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Equality(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> objects are equal if each element in <paramref name="right" /> is equal to the
                corresponding element in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)" /> method defines the subtraction operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3)" /> method defines the unary negation operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Abs(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Add(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Clamp(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Cross(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Computes the cross product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Distance(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Divide(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Divide(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Dot(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Lerp(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Max(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Min(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Multiply(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Multiply(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Negate(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Normalize(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Reflect(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Subtract(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Transform(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Transform(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Matrix.Matrix4x4)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least three elements. The method copies the vector's elements starting
                at index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the three vector elements.
                In other words, elements <paramref name="index" />, <paramref name="index" /> + 1, and <paramref name="index" /> +
                2 must already exist in <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> object and their corresponding elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Equals(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>
                Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.X" />, <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Y" />, and
                <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Z" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Length">
            <summary>Returns the length of this vector object.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> is a struct represent a glsl bvec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3B.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> is a struct represent a glsl ivec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4" /> is a struct represent a glsl vec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> is a struct represent a glsl bvec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4B.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> is a struct represent a glsl ivec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4I.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream">
            <summary>
                Structure that contains InputStream callbacks
                (directly maps to a CSFML sfInputStream)
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.ReadCallbackType">
            <summary>
                Type of callback to read data from the current stream
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.SeekCallbackType">
            <summary>
                Type of callback to seek the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.TellCallbackType">
            <summary>
                Type of callback to return the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSizeCallbackType">
            <summary>
                Type of callback to return the current stream's size
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Read">
            <summary>
                Function that is called to read data from the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Seek">
            <summary>
                Function that is called to seek the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Tell">
            <summary>
                Function that is called to return the positon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSize">
            <summary>
                Function that is called to return the size
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor">
            <summary>
                Adapts a System.IO.Stream to be usable as a SFML InputStream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStream">
            <summary>
                The my input stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStreamPtr">
            <summary>
                The my input stream ptr
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.#ctor(System.IO.Stream)">
            <summary>
                Construct from a System.IO.Stream
            </summary>
            <param name="stream">Stream to adapt</param>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.InputStreamPtr">
            <summary>
                The pointer to the CSFML InputStream structure
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Read(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
                Called to read from the stream
            </summary>
            <param name="data">Where to copy the read bytes</param>
            <param name="size">Size to read, in bytes</param>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Seek(System.Int64,System.IntPtr)">
            <summary>
                Called to set the read position in the stream
            </summary>
            <param name="position">New read position</param>
            <param name="userData">User data -- unused</param>
            <returns>Actual position</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Tell(System.IntPtr)">
            <summary>
                Get the current read position in the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Current position in the stream</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.GetSize(System.IntPtr)">
            <summary>
                Called to get the total size of the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes in the stream</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Security.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Thread.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Time.TimeStep">
            <summary>This is an internal class.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTime">
            <summary>Time step (Delta time)</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTimeRatio">
            <summary>dt * inv_dt0</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTime">
            <summary>Inverse time step (0 if dt == 0).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTimeZero">
            <summary>
                The inverted delta time
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.PositionIterations">
            <summary>
                The position iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.VelocityIterations">
            <summary>
                The velocity iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.WarmStarting">
            <summary>
                The warm starting
            </summary>
        </member>
    </members>
</doc>
