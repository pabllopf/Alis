<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core.Audio</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.Audio.AudioBackendType">
            <summary>
                The audio type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioBackendType.OS">
            <summary>
                The os audio type
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioBackendType.SFML">
            <summary>
                The sfml audio type
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.AudioClipBase">
            <summary>
                The audio clip base class
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase"/> class
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioClipBase.music">
            <summary>
                The music
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioClipBase.player">
            <summary>
                The player
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase" /> class
            </summary>
            <param name="fullPathAudio">The full path audio</param>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#ctor(System.String,Alis.Core.Audio.AudioBackendType)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase" /> class
            </summary>
            <param name="fullPathAudio">The full path audio</param>
            <param name="audioBackendType">The audio backend type</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.SampleRate">
            <summary>
                Gets or sets the value of the sample rate
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.ChannelCount">
            <summary>
                Gets or sets the value of the channel count
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.Duration">
            <summary>
                Gets or sets the value of the duration
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.Pitch">
            <summary>
                Gets or sets the value of the pitch
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.IsMute">
            <summary>
                Gets or sets the value of the is mute
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.IsPlaying">
            <summary>
                Gets or sets the value of the is playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.FullPathAudioFile">
            <summary>
                Gets or sets the value of the full path audio file
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.AudioBackendType">
            <summary>
                Gets the value of the audio backend type
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.IsLooping">
            <summary>
                Gets or sets the value of the is loopping
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.Volume">
            <summary>
                Gets or sets the value of the volume
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.Play">
            <summary>
                Plays this instance
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.Stop">
            <summary>
                Stops this instance
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.Resume">
            <summary>
                Resumes this instance
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Alis.Core.Audio.IAudioRecorder">
            <summary>
                The audio recorder interface
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.IAudioSource`1">
            <summary>
                The audio source interface
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.AudioClip">
            <summary>
                Gets or sets the value of the audio clip base
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.IsPlaying">
            <summary>
                Gets the value of the is playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.PlayOnAwake">
            <summary>
                Gets or sets the value of the play on awake
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.Mute">
            <summary>
                Gets or sets the value of the mute
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.Loop">
            <summary>
                Gets or sets the value of the loop
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.Volume">
            <summary>
                Gets or sets the value of the volume
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.IAudioSource`1.Play">
            <summary>
                Plays this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.IAudioSource`1.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.IAudioSource`1.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.ObjectBase">
            <summary>
                The ObjectBase class is an abstract base for every
                SFML object. It's meant for internal use only
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Audio.ObjectBase"/> class
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.ObjectBase.myCPointer">
            <summary>
                The zero
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.#ctor(System.IntPtr)">
            <summary>
                Construct the object from a pointer to the C library object
            </summary>
            <param name="cPointer">Internal pointer to the object in the C libraries</param>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Audio.ObjectBase"/> class
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.ObjectBase.CPointer">
            <summary>
                Access to the internal pointer of the object.
                For internal use only
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call?</param>
        </member>
        <member name="M:Alis.Core.Audio.ObjectBase.Destroy(System.Boolean)">
            <summary>
                Destroy the object (implementation is left to each derived class)
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call?</param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Interfaces.IPlayer">
            <summary>
                The player interface
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Interfaces.IPlayer.Playing">
            <summary>
                Gets the value of the playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Interfaces.IPlayer.Paused">
            <summary>
                Gets the value of the paused
            </summary>
        </member>
        <member name="E:Alis.Core.Audio.OS.Interfaces.IPlayer.PlaybackFinished">
            <summary>
                playback
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Play(System.String)">
            <summary>
                Plays the file name
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Pause">
            <summary>
                Pauses this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Player">
            <summary>
                The player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="F:Alis.Core.Audio.OS.Player._internalPlayer">
            <summary>
                The internal player
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.OS.Player" /> class
            </summary>
            <exception cref="T:System.Exception">No implementation exist for the current OS</exception>
        </member>
        <member name="E:Alis.Core.Audio.OS.Player.PlaybackFinished">
            <summary>
                Internally, sets Playing flag to false. Additional handlers can be attached to it to handle any custom logic.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Player.Playing">
            <summary>
                Indicates that the audio is currently playing.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Player.Paused">
            <summary>
                Indicates that the audio playback is currently paused.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Play(System.String)">
            <summary>
                Will stop any current playback and will start playing the specified audio file. The fileName parameter can be an
                absolute path or a path relative to the directory where the library is located. Sets Playing flag to true. Sets
                Paused flag to false.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Pause">
            <summary>
                Pauses any ongong playback. Sets Paused flag to true. Doesn't modify Playing flag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Resume">
            <summary>
                Resumes any paused playback. Sets Paused flag to false. Doesn't modify Playing flag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Stop">
            <summary>
                Stops any current playback and clears the buffer. Sets Playing and Paused flags to false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.SetVolume(System.Byte)">
            <summary>
                Sets the playing volume as percent
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.OnPlaybackFinished(System.Object,System.EventArgs)">
            <summary>
                Ons the playback finished using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.LinuxPlayer">
            <summary>
                The linux player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Players.UnixPlayerBase" />
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.LinuxPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Percent can't exceed 100</exception>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.LinuxPlayer.GetBashCommand(System.String)">
            <summary>
                Gets the bash command using the specified file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.MacPlayer">
            <summary>
                The mac player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Players.UnixPlayerBase" />
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.MacPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Percent can't exceed 100</exception>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.MacPlayer.GetBashCommand(System.String)">
            <summary>
                Gets the bash command using the specified file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.UnixPlayerBase">
            <summary>
                The unix player base class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.UnixPlayerBase._process">
            <summary>
                The process
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.UnixPlayerBase.PauseProcessCommand">
            <summary>
                The pause process command
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.UnixPlayerBase.ResumeProcessCommand">
            <summary>
                The resume process command
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.UnixPlayerBase.Playing">
            <summary>
                Gets or sets the value of the playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.UnixPlayerBase.Paused">
            <summary>
                Gets or sets the value of the paused
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Play(System.String)">
            <summary>
                Plays the file name
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Pause">
            <summary>
                Pauses this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.GetBashCommand(System.String)">
            <summary>
                Gets the bash command using the specified file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.StartBashProcess(System.String)">
            <summary>
                Starts the bash process using the specified command
            </summary>
            <param name="command">The command</param>
            <returns>The process</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.HandlePlaybackFinished(System.Object,System.EventArgs)">
            <summary>
                Handles the playback finished using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.WindowsPlayer">
            <summary>
                The windows player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.WindowsPlayer._fileName">
            <summary>
                The file name
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.WindowsPlayer._playbackTimer">
            <summary>
                The playback timer
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.WindowsPlayer._playStopwatch">
            <summary>
                The play stopwatch
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.WindowsPlayer.Playing">
            <summary>
                Gets or sets the value of the playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.WindowsPlayer.Paused">
            <summary>
                Gets or sets the value of the paused
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Play(System.String)">
            <summary>
                Plays the file name
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Pause">
            <summary>
                Pauses this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.mciSendString(System.String,System.Text.StringBuilder,System.Int32,System.IntPtr)">
            <summary>
                Mcis the send string using the specified command
            </summary>
            <param name="command">The command</param>
            <param name="stringReturn">The string return</param>
            <param name="returnLength">The return length</param>
            <param name="hwndCallback">The hwnd callback</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.mciGetErrorString(System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
                Mcis the get error string using the specified error code
            </summary>
            <param name="errorCode">The error code</param>
            <param name="errorText">The error text</param>
            <param name="errorTextSize">The error text size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.waveOutSetVolume(System.IntPtr,System.UInt32)">
            <summary>
                Waves the out set volume using the specified hwo
            </summary>
            <param name="hwo">The hwo</param>
            <param name="dwVolume">The dw volume</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.HandlePlaybackFinished(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
                Handles the playback finished using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.ExecuteMsiCommand(System.String)">
            <summary>
                Executes the msi command using the specified command string
            </summary>
            <param name="commandString">The command string</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:Alis.Core.Audio.OS.Utils.FileUtil">
            <summary>
                The file util class
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Utils.FileUtil.TempDirName">
            <summary>
                The temp dir name
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Utils.FileUtil.CheckFileToPlay(System.String)">
            <summary>
                Checks the file to play using the specified original file name
            </summary>
            <param name="originalFileName">The original file name</param>
            <returns>The file name to return</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Utils.FileUtil.ClearTempFiles">
            <summary>
                Clears the temp files
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.Properties.NativeAudio">
            <summary>
            The native audio class
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.Properties.NativeAudio.resourceMan">
            <summary>
            The resource man
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.Properties.NativeAudio.resourceCulture">
            <summary>
            The resource culture
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.Properties.NativeAudio.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Audio.Properties.NativeAudio"/> class
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.ResourceManager">
            <summary>
            Gets the value of the resource manager
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.Culture">
            <summary>
            Gets or sets the value of the culture
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.alpine_x64_csfml_audio">
            <summary>
            Gets the value of the alpine x64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.debian_arm64_csfml_audio">
            <summary>
            Gets the value of the debian arm64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.debian_x64_csfml_audio">
            <summary>
            Gets the value of the debian x64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.fedora_x64_csfml_audio">
            <summary>
            Gets the value of the fedora x64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.osx_arm64_csfml_audio">
            <summary>
            Gets the value of the osx arm64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.osx_x64_csfml_audio">
            <summary>
            Gets the value of the osx x64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.win_x64_csfml_audio">
            <summary>
            Gets the value of the win x64 csfml audio
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.Properties.NativeAudio.win_x86_csfml_audio">
            <summary>
            Gets the value of the win x86 csfml audio
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.Listener">
            <summary>
                The audio listener is the point in the scene
                from where all the sounds are heard
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Listener.GlobalVolume">
            <summary>
                The volume is a number between 0 and 100; it is combined with
                the individual volume of each sound / music.
                The default value for the volume is 100 (maximum).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Listener.Position">
            <summary>
                3D position of the listener (default is (0, 0, 0))
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Listener.Direction">
            <summary>
                The direction (also called "at vector") is the vector
                pointing forward from the listener's perspective. Together
                with the up vector, it defines the 3D orientation of the
                listener in the scene. The direction vector doesn't
                have to be normalized.
                The default listener's direction is (0, 0, -1).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Listener.UpVector">
            <summary>
                The up vector is the vector that points upward from the
                listener's perspective. Together with the direction, it
                defines the 3D orientation of the listener in the scene.
                The up vector doesn't have to be normalized.
                The default listener's up vector is (0, 1, 0). It is usually
                not necessary to change it, especially in 2D scenarios.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_setGlobalVolume(System.Single)">
            <summary>
                Sfs the listener set global volume using the specified volume
            </summary>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_getGlobalVolume">
            <summary>
                Sfs the listener get global volume
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_setPosition(Alis.Core.Aspect.Math.Vector3)">
            <summary>
                Sfs the listener set position using the specified position
            </summary>
            <param name="position">The position</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_getPosition">
            <summary>
                Sfs the listener get position
            </summary>
            <returns>The vector 3f</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_setDirection(Alis.Core.Aspect.Math.Vector3)">
            <summary>
                Sfs the listener set direction using the specified direction
            </summary>
            <param name="direction">The direction</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_getDirection">
            <summary>
                Sfs the listener get direction
            </summary>
            <returns>The vector 3f</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_setUpVector(Alis.Core.Aspect.Math.Vector3)">
            <summary>
                Sfs the listener set up vector using the specified up vector
            </summary>
            <param name="upVector">The up vector</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Listener.sfListener_getUpVector">
            <summary>
                Sfs the listener get up vector
            </summary>
            <returns>The vector 3f</returns>
        </member>
        <member name="T:Alis.Core.Audio.SFML.Music">
            <summary>
                Streamed music played from an audio file
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.Music.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.#ctor(System.String)">
            <summary>
                Constructs a music from an audio file
            </summary>
            <param name="filename">Path of the music file to open</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.#ctor(System.IO.Stream)">
            <summary>
                Constructs a music from a custom stream
            </summary>
            <param name="stream">Source stream to read from</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.#ctor(System.Byte[])">
            <summary>
                Constructs a music from an audio file in memory
            </summary>
            <param name="bytes">Byte array containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.SampleRate">
            <summary>
                Sample rate of the music.
                The sample rate is the number of audio samples played per
                second. The higher, the better the quality.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.ChannelCount">
            <summary>
                Number of channels (1 = mono, 2 = stereo)
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Status">
            <summary>
                Current status of the music (see SoundStatus enum)
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Duration">
            <summary>
                Total duration of the music
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Loop">
            <summary>
                Flag if the music should loop after reaching the end.
                If set, the music will restart from beginning after
                reaching the end and so on, until it is stopped or
                Loop = false is set.
                The default looping state for music is false.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Pitch">
            <summary>
                Pitch of the music.
                The pitch represents the perceived fundamental frequency
                of a sound; thus you can make a sound more acute or grave
                by changing its pitch. A side effect of changing the pitch
                is to modify the playing speed of the sound as well.
                The default value for the pitch is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Volume">
            <summary>
                Volume of the music.
                The volume is a value between 0 (mute) and 100 (full volume).
                The default value for the volume is 100.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Position">
            <summary>
                3D position of the music in the audio scene.
                Only sounds with one channel (mono sounds) can be
                spatialized.
                The default position of a sound is (0, 0, 0).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.RelativeToListener">
            <summary>
                Make the music's position relative to the listener or absolute.
                Making a sound relative to the listener will ensure that it will always
                be played the same way regardless the position of the listener.
                This can be useful for non-spatialized sounds, sounds that are
                produced by the listener, or sounds attached to it.
                The default value is false (position is absolute).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.MinDistance">
            <summary>
                Minimum distance of the music.
                The "minimum distance" of a sound is the maximum
                distance at which it is heard at its maximum volume. Further
                than the minimum distance, it will start to fade out according
                to its attenuation factor. A value of 0 ("inside the head
                of the listener") is an invalid value and is forbidden.
                The default value of the minimum distance is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.Attenuation">
            <summary>
                Attenuation factor of the music.
                The attenuation is a multiplicative factor which makes
                the music more or less loud according to its distance
                from the listener. An attenuation of 0 will produce a
                non-attenuated sound, i.e. its volume will always be the same
                whether it is heard from near or from far. On the other hand,
                an attenuation value such as 100 will make the sound fade out
                very quickly as it gets further from the listener.
                The default value of the attenuation is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.PlayingOffset">
            <summary>
                Current playing position of the music.
                The playing position can be changed when the music is
                either paused or playing.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Music.LoopPoints">
            <summary>
                Current loop points of the music.
                Since setting performs some adjustments on the
                provided values and rounds them to internal samples, getting this
                value later is not guaranteed to return the same times passed
                into it. However, it is guaranteed to return times that will map
                to the valid internal samples of this Music if they are later
                set again.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.Play">
            <summary>
                Start or resume playing the audio stream.
                This function starts the stream if it was stopped, resumes
                it if it was paused, and restarts it from beginning if it
                was it already playing.
                This function uses its own thread so that it doesn't block
                the rest of the program while the stream is played.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.Pause">
            <summary>
                Pause the audio stream.
                This function pauses the stream if it was playing,
                otherwise (stream already paused or stopped) it has no effect.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.Stop">
            <summary>
                Stop playing the audio stream.
                This function stops the stream if it was playing or paused,
                and does nothing if it was already stopped.
                It also resets the playing position (unlike Pause()).
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_createFromFile(System.String)">
            <summary>
                Sfs the music create from file using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_createFromStream(System.IntPtr)">
            <summary>
                Sfs the music create from stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_createFromMemory(System.IntPtr,System.UInt64)">
            <summary>
                Sfs the music create from memory using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_destroy(System.IntPtr)">
            <summary>
                Sfs the music destroy using the specified music stream
            </summary>
            <param name="musicStream">The music stream</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_play(System.IntPtr)">
            <summary>
                Sfs the music play using the specified music
            </summary>
            <param name="music">The music</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_pause(System.IntPtr)">
            <summary>
                Sfs the music pause using the specified music
            </summary>
            <param name="music">The music</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_stop(System.IntPtr)">
            <summary>
                Sfs the music stop using the specified music
            </summary>
            <param name="music">The music</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getStatus(System.IntPtr)">
            <summary>
                Sfs the music get status using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The sound status</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getDuration(System.IntPtr)">
            <summary>
                Sfs the music get duration using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The systems time</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getLoopPoints(System.IntPtr)">
            <summary>
                Sfs the music get loop points using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The time span</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setLoopPoints(System.IntPtr,Alis.Core.Audio.SFML.Music.TimeSpan)">
            <summary>
                Sfs the music set loop points using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="timePoints">The time points</param>
            <returns>The time span</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getChannelCount(System.IntPtr)">
            <summary>
                Sfs the music get channel count using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getSampleRate(System.IntPtr)">
            <summary>
                Sfs the music get sample rate using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setPitch(System.IntPtr,System.Single)">
            <summary>
                Sfs the music set pitch using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="pitch">The pitch</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setLoop(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the music set loop using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="loop">The loop</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setVolume(System.IntPtr,System.Single)">
            <summary>
                Sfs the music set volume using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setPosition(System.IntPtr,Alis.Core.Aspect.Math.Vector3)">
            <summary>
                Sfs the music set position using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="position">The position</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setRelativeToListener(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the music set relative to listener using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="relative">The relative</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setMinDistance(System.IntPtr,System.Single)">
            <summary>
                Sfs the music set min distance using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="minDistance">The min distance</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setAttenuation(System.IntPtr,System.Single)">
            <summary>
                Sfs the music set attenuation using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="attenuation">The attenuation</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_setPlayingOffset(System.IntPtr,Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the music set playing offset using the specified music
            </summary>
            <param name="music">The music</param>
            <param name="timeOffset">The time offset</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getLoop(System.IntPtr)">
            <summary>
                Describes whether sf music get loop
            </summary>
            <param name="music">The music</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getPitch(System.IntPtr)">
            <summary>
                Sfs the music get pitch using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getVolume(System.IntPtr)">
            <summary>
                Sfs the music get volume using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getPosition(System.IntPtr)">
            <summary>
                Sfs the music get position using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The vector 3f</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_isRelativeToListener(System.IntPtr)">
            <summary>
                Describes whether sf music is relative to listener
            </summary>
            <param name="music">The music</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getMinDistance(System.IntPtr)">
            <summary>
                Sfs the music get min distance using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getAttenuation(System.IntPtr)">
            <summary>
                Sfs the music get attenuation using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Music.sfMusic_getPlayingOffset(System.IntPtr)">
            <summary>
                Sfs the music get playing offset using the specified music
            </summary>
            <param name="music">The music</param>
            <returns>The systems time</returns>
        </member>
        <member name="T:Alis.Core.Audio.SFML.Music.TimeSpan">
            <summary>
                The time span
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.Music.TimeSpan.offset">
            <summary>
                The offset
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.Music.TimeSpan.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.Sound">
            <summary>
                Regular sound that can be played in the audio environment
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.Sound.myBuffer">
            <summary>
                The my buffer
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.#ctor">
            <summary>
                Default constructor (invalid sound)
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.#ctor(Alis.Core.Audio.SFML.SoundBuffer)">
            <summary>
                Construct the sound with a buffer
            </summary>
            <param name="buffer">Sound buffer containing the audio data to play with the sound</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.#ctor(Alis.Core.Audio.SFML.Sound)">
            <summary>
                Construct the sound from another source
            </summary>
            <param name="copy">Sound to copy</param>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.SoundBuffer">
            <summary>
                Buffer containing the sound data to play through the sound.
                It is important to note that the sound buffer is not copied,
                thus the SoundBuffer instance must remain alive as long
                as it is attached to the sound.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.Status">
            <summary>
                Current status of the sound (see SoundStatus enum)
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.Loop">
            <summary>
                Flag if the sound should loop after reaching the end.
                If set, the sound will restart from beginning after
                reaching the end and so on, until it is stopped or
                Loop = false is set.
                The default looping state for sounds is false.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.Pitch">
            <summary>
                Pitch of the sound.
                The pitch represents the perceived fundamental frequency
                of a sound; thus you can make a sound more acute or grave
                by changing its pitch. A side effect of changing the pitch
                is to modify the playing speed of the sound as well.
                The default value for the pitch is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.Volume">
            <summary>
                Volume of the sound.
                The volume is a value between 0 (mute) and 100 (full volume).
                The default value for the volume is 100.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.PlayingOffset">
            <summary>
                Current playing position of the sound.
                The playing position can be changed when the sound is
                either paused or playing.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.Position">
            <summary>
                3D position of the sound in the audio scene.
                Only sounds with one channel (mono sounds) can be
                spatialized.
                The default position of a sound is (0, 0, 0).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.RelativeToListener">
            <summary>
                Make the music's position relative to the listener or absolute.
                Making a sound relative to the listener will ensure that it will always
                be played the same way regardless the position of the listener.
                This can be useful for non-spatialized sounds, sounds that are
                produced by the listener, or sounds attached to it.
                The default value is false (position is absolute).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.MinDistance">
            <summary>
                Minimum distance of the sound.
                The "minimum distance" of a sound is the maximum
                distance at which it is heard at its maximum volume. Further
                than the minimum distance, it will start to fade out according
                to its attenuation factor. A value of 0 ("inside the head
                of the listener") is an invalid value and is forbidden.
                The default value of the minimum distance is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.Sound.Attenuation">
            <summary>
                Attenuation factor of the music.
                The attenuation is a multiplicative factor which makes
                the music more or less loud according to its distance
                from the listener. An attenuation of 0 will produce a
                non-attenuated sound, i.e. its volume will always be the same
                whether it is heard from near or from far. On the other hand,
                an attenuation value such as 100 will make the sound fade out
                very quickly as it gets further from the listener.
                The default value of the attenuation is 1.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.Play">
            <summary>
                Start or resume playing the sound.
                This function starts the stream if it was stopped, resumes
                it if it was paused, and restarts it from beginning if it
                was it already playing.
                This function uses its own thread so that it doesn't block
                the rest of the program while the sound is played.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.Pause">
            <summary>
                Pause the sound.
                This function pauses the sound if it was playing,
                otherwise (sound already paused or stopped) it has no effect.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.Stop">
            <summary>
                Stop playing the sound.
                This function stops the sound if it was playing or paused,
                and does nothing if it was already stopped.
                It also resets the playing position (unlike pause()).
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_create">
            <summary>
                Sfs the sound create
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_copy(System.IntPtr)">
            <summary>
                Sfs the sound copy using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_destroy(System.IntPtr)">
            <summary>
                Sfs the sound destroy using the specified sound
            </summary>
            <param name="sound">The sound</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_play(System.IntPtr)">
            <summary>
                Sfs the sound play using the specified sound
            </summary>
            <param name="sound">The sound</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_pause(System.IntPtr)">
            <summary>
                Sfs the sound pause using the specified sound
            </summary>
            <param name="sound">The sound</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_stop(System.IntPtr)">
            <summary>
                Sfs the sound stop using the specified sound
            </summary>
            <param name="sound">The sound</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setBuffer(System.IntPtr,System.IntPtr)">
            <summary>
                Sfs the sound set buffer using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="buffer">The buffer</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getBuffer(System.IntPtr)">
            <summary>
                Sfs the sound get buffer using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setLoop(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the sound set loop using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="loop">The loop</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getLoop(System.IntPtr)">
            <summary>
                Describes whether sf sound get loop
            </summary>
            <param name="sound">The sound</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getStatus(System.IntPtr)">
            <summary>
                Sfs the sound get status using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The sound status</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setPitch(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound set pitch using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="pitch">The pitch</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setVolume(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound set volume using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setPosition(System.IntPtr,Alis.Core.Aspect.Math.Vector3)">
            <summary>
                Sfs the sound set position using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="position">The position</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setRelativeToListener(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the sound set relative to listener using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="relative">The relative</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setMinDistance(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound set min distance using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="minDistance">The min distance</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setAttenuation(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound set attenuation using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="attenuation">The attenuation</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_setPlayingOffset(System.IntPtr,Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the sound set playing offset using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <param name="timeOffset">The time offset</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getPitch(System.IntPtr)">
            <summary>
                Sfs the sound get pitch using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getVolume(System.IntPtr)">
            <summary>
                Sfs the sound get volume using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getPosition(System.IntPtr)">
            <summary>
                Sfs the sound get position using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The vector 3f</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_isRelativeToListener(System.IntPtr)">
            <summary>
                Describes whether sf sound is relative to listener
            </summary>
            <param name="sound">The sound</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getMinDistance(System.IntPtr)">
            <summary>
                Sfs the sound get min distance using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getAttenuation(System.IntPtr)">
            <summary>
                Sfs the sound get attenuation using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Sound.sfSound_getPlayingOffset(System.IntPtr)">
            <summary>
                Sfs the sound get playing offset using the specified sound
            </summary>
            <param name="sound">The sound</param>
            <returns>The systems time</returns>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundBuffer">
            <summary>
                Storage for audio samples defining a sound
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.#ctor(System.String)">
            <summary>
                Construct a sound buffer from a file
                Here is a complete list of all the supported audio formats:
                ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,
                w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.
            </summary>
            <param name="filename">Path of the sound file to load</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.#ctor(System.IO.Stream)">
            <summary>
                Construct a sound buffer from a custom stream.
                Here is a complete list of all the supported audio formats:
                ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,
                w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.
            </summary>
            <param name="stream">Source stream to read from</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.#ctor(System.Byte[])">
            <summary>
                Construct a sound buffer from a file in memory.
                Here is a complete list of all the supported audio formats:
                ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,
                w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.
            </summary>
            <param name="bytes">Byte array containing the file contents</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.#ctor(System.Int16[],System.UInt32,System.UInt32)">
            <summary>
                Construct a sound buffer from an array of samples
            </summary>
            <param name="samples">Array of samples</param>
            <param name="channelCount">Channel count</param>
            <param name="sampleRate">Sample rate</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException" />
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.#ctor(Alis.Core.Audio.SFML.SoundBuffer)">
            <summary>
                Construct a sound buffer from another sound buffer
            </summary>
            <param name="copy">Sound buffer to copy</param>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundBuffer.SampleRate">
            <summary>
                Sample rate of the sound buffer.
                The sample rate is the number of audio samples played per
                second. The higher, the better the quality.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundBuffer.ChannelCount">
            <summary>
                Number of channels (1 = mono, 2 = stereo)
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundBuffer.Duration">
            <summary>
                Total duration of the buffer
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundBuffer.Samples">
            <summary>
                Array of audio samples stored in the buffer.
                The format of the returned samples is 16 bits signed integer
                (sf::Int16).
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.SaveToFile(System.String)">
            <summary>
                Save the sound buffer to an audio file.
                Here is a complete list of all the supported audio formats:
                ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam,
                w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.
            </summary>
            <param name="filename">Path of the sound file to write</param>
            <returns>True if saving has been successful</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_createFromFile(System.String)">
            <summary>
                Sfs the sound buffer create from file using the specified filename
            </summary>
            <param name="filename">The filename</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_createFromStream(System.IntPtr)">
            <summary>
                Sfs the sound buffer create from stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_createFromMemory(System.IntPtr,System.UInt64)">
            <summary>
                Sfs the sound buffer create from memory using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_createFromSamples(System.Int16*,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Sfs the sound buffer create from samples using the specified samples
            </summary>
            <param name="samples">The samples</param>
            <param name="sampleCount">The sample count</param>
            <param name="channelsCount">The channels count</param>
            <param name="sampleRate">The sample rate</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_copy(System.IntPtr)">
            <summary>
                Sfs the sound buffer copy using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_destroy(System.IntPtr)">
            <summary>
                Sfs the sound buffer destroy using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_saveToFile(System.IntPtr,System.String)">
            <summary>
                Describes whether sf sound buffer save to file
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <param name="filename">The filename</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_getSamples(System.IntPtr)">
            <summary>
                Sfs the sound buffer get samples using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_getSampleCount(System.IntPtr)">
            <summary>
                Sfs the sound buffer get sample count using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_getSampleRate(System.IntPtr)">
            <summary>
                Sfs the sound buffer get sample rate using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_getChannelCount(System.IntPtr)">
            <summary>
                Sfs the sound buffer get channel count using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBuffer.sfSoundBuffer_getDuration(System.IntPtr)">
            <summary>
                Sfs the sound buffer get duration using the specified sound buffer
            </summary>
            <param name="soundBuffer">The sound buffer</param>
            <returns>The systems time</returns>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundBufferRecorder">
            <summary>
                Specialized SoundRecorder which saves the captured
                audio data into a sound buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundBufferRecorder.mySamplesArray">
            <summary>
                The list
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundBufferRecorder.mySoundBuffer">
            <summary>
                The my sound buffer
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundBufferRecorder.SoundBuffer">
            <summary>
                Sound buffer containing the captured audio data
                The sound buffer is valid only after the capture has ended.
                This function provides a reference to the internal
                sound buffer, but you should make a copy of it if you want
                to make any modifications to it.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBufferRecorder.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBufferRecorder.OnStart">
            <summary>
                Called when a new capture starts
            </summary>
            <returns>False to abort recording audio data, true to continue</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBufferRecorder.OnProcessSamples(System.Int16[])">
            <summary>
                Process a new chunk of recorded samples
            </summary>
            <param name="samples">Array of samples to process</param>
            <returns>False to stop recording audio data, true to continue</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundBufferRecorder.OnStop">
            <summary>
                Called when the current capture stops
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundRecorder">
            <summary>
                Base class intended for capturing sound data
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundRecorder.myProcessCallback">
            <summary>
                The my process callback
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundRecorder.myStartCallback">
            <summary>
                The my start callback
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundRecorder.myStopCallback">
            <summary>
                The my stop callback
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundRecorder.SampleRate">
            <summary>
                Sample rate of the sound recorder.
            </summary>
            <remarks>
                The sample rate defines the number of audio samples
                captured per second. The higher, the better the quality
                (for example, 44100 samples/sec is CD quality).
            </remarks>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundRecorder.ChannelCount">
            <summary>
                Get/Set the channel count of the audio capture device
            </summary>
            <remarks>
                This method allows you to specify the number of channels
                used for recording. Currently only 16-bit mono (1) and
                16-bit stereo (2) are supported.
            </remarks>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundRecorder.IsAvailable">
            <summary>
                Check if the system supports audio capture.
            </summary>
            <remarks>
                This function should always be called before using
                the audio capture features. If it returns false, then
                any attempt to use the SoundRecorder or one of its derived
                classes will fail.
            </remarks>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundRecorder.AvailableDevices">
            <summary>
                Get the list of the names of all available audio capture devices
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundRecorder.DefaultDevice">
            <summary>
                Get the name of the default audio capture device
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.Start">
            <summary>
                Start the capture using the default sample rate (44100 Hz).
                Please note that only one capture can happen at the same time.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.Start(System.UInt32)">
            <summary>
                Start the capture.
                The sampleRate parameter defines the number of audio samples
                captured per second. The higher, the better the quality
                (for example, 44100 samples/sec is CD quality).
                This function uses its own thread so that it doesn't block
                the rest of the program while the capture runs.
                Please note that only one capture can happen at the same time.
            </summary>
            <param name="sampleRate"> Sound frequency; the more samples, the higher the quality (44100 by default = CD quality)</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.Stop">
            <summary>
                Stop the capture
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.OnStart">
            <summary>
                Start capturing audio data.
                This virtual function may be overridden by a derived class
                if something has to be done every time a new capture
                starts. If not, this function can be ignored; the default
                implementation does nothing.
            </summary>
            <returns>False to abort recording audio data, true to continue</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.OnProcessSamples(System.Int16[])">
            <summary>
                Process a new chunk of recorded samples.
                This virtual function is called every time a new chunk of
                recorded data is available. The derived class can then do
                whatever it wants with it (storing it, playing it, sending
                it over the network, etc.).
            </summary>
            <param name="samples">Array of samples to process</param>
            <returns>False to stop recording audio data, true to continue</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.OnStop">
            <summary>
                Stop capturing audio data.
                This virtual function may be overridden by a derived class
                if something has to be done every time the capture
                ends. If not, this function can be ignored; the default
                implementation does nothing.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.SetProcessingInterval(Alis.Core.Audio.SFML.Time)">
            <summary>
                The processing interval controls the period
                between calls to the onProcessSamples function. You may
                want to use a small interval if you want to process the
                recorded data in real time, for example.
                Note: this is only a hint, the actual period may vary.
                So don't rely on this parameter to implement precise timing.
                The default processing interval is 100 ms.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.SetDevice(System.String)">
            <summary>
                Set the audio capture device
            </summary>
            <param name="name">The name of the audio capture device</param>
            <returns>True, if it was able to set the requested device</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.GetDevice">
            <summary>
                Get the name of the current audio capture device
            </summary>
            <returns>The name of the current audio capture device</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.ProcessSamples(System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
                Function called directly by the C library ; convert
                arguments and forward them to the internal virtual function
            </summary>
            <param name="samples">Pointer to the array of samples</param>
            <param name="nbSamples">Number of samples in the array</param>
            <param name="userData">User data -- unused</param>
            <returns>False to stop recording audio data, true to continue</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_create(Alis.Core.Audio.SFML.SoundRecorder.StartCallback,Alis.Core.Audio.SFML.SoundRecorder.ProcessCallback,Alis.Core.Audio.SFML.SoundRecorder.StopCallback,System.IntPtr)">
            <summary>
                Sfs the sound recorder create using the specified on start
            </summary>
            <param name="onStart">The on start</param>
            <param name="onProcess">The on process</param>
            <param name="onStop">The on stop</param>
            <param name="userData">The user data</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_destroy(System.IntPtr)">
            <summary>
                Sfs the sound recorder destroy using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_start(System.IntPtr,System.UInt32)">
            <summary>
                Describes whether sf sound recorder start
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <param name="sampleRate">The sample rate</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_stop(System.IntPtr)">
            <summary>
                Sfs the sound recorder stop using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_getSampleRate(System.IntPtr)">
            <summary>
                Sfs the sound recorder get sample rate using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_isAvailable">
            <summary>
                Describes whether sf sound recorder is available
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_setProcessingInterval(System.IntPtr,Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the sound recorder set processing interval using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <param name="interval">The interval</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_getAvailableDevices(System.UInt32@)">
            <summary>
                Sfs the sound recorder get available devices using the specified count
            </summary>
            <param name="count">The count</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_getDefaultDevice">
            <summary>
                Sfs the sound recorder get default device
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_setDevice(System.IntPtr,System.String)">
            <summary>
                Describes whether sf sound recorder set device
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <param name="name">The name</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_getDevice(System.IntPtr)">
            <summary>
                Sfs the sound recorder get device using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_setChannelCount(System.IntPtr,System.UInt32)">
            <summary>
                Sfs the sound recorder set channel count using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <param name="channelCount">The channel count</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundRecorder.sfSoundRecorder_getChannelCount(System.IntPtr)">
            <summary>
                Sfs the sound recorder get channel count using the specified sound recorder
            </summary>
            <param name="soundRecorder">The sound recorder</param>
            <returns>The uint</returns>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundRecorder.StartCallback">
            <summary>
                The start callback
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundRecorder.ProcessCallback">
            <summary>
                The process callback
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundRecorder.StopCallback">
            <summary>
                The stop callback
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundStatus">
            <summary>
                Enumeration of all possible sound states
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStatus.Stopped">
            <summary>Sound is not playing</summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStatus.Paused">
            <summary>Sound is paused</summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStatus.Playing">
            <summary>Sound is playing</summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundStream">
            <summary>
                Abstract base class for streamed audio sources
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStream.myGetDataCallback">
            <summary>
                The my get data callback
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStream.mySeekCallback">
            <summary>
                The my seek callback
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStream.myTempBuffer">
            <summary>
                The my temp buffer
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.SampleRate">
            <summary>
                Sample rate of the stream
                The sample rate is the number of audio samples played per
                second. The higher, the better the quality.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.ChannelCount">
            <summary>
                Number of channels (1 = mono, 2 = stereo)
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.Status">
            <summary>
                Current status of the sound stream (see SoundStatus enum)
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.Loop">
            <summary>
                Flag if the music should loop after reaching the end.
                If set, the music will restart from beginning after
                reaching the end and so on, until it is stopped or
                Loop = false is set.
                The default looping state for music is false.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.Pitch">
            <summary>
                Pitch of the stream.
                The pitch represents the perceived fundamental frequency
                of a sound; thus you can make a sound more acute or grave
                by changing its pitch. A side effect of changing the pitch
                is to modify the playing speed of the sound as well.
                The default value for the pitch is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.Volume">
            <summary>
                Volume of the stream.
                The volume is a value between 0 (mute) and 100 (full volume).
                The default value for the volume is 100.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.Position">
            <summary>
                3D position of the stream in the audio scene.
                Only sounds with one channel (mono sounds) can be
                spatialized.
                The default position of a sound is (0, 0, 0).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.RelativeToListener">
            <summary>
                Make the stream's position relative to the listener or absolute.
                Making a sound relative to the listener will ensure that it will always
                be played the same way regardless the position of the listener.
                This can be useful for non-spatialized sounds, sounds that are
                produced by the listener, or sounds attached to it.
                The default value is false (position is absolute).
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.MinDistance">
            <summary>
                Minimum distance of the music.
                The "minimum distance" of a sound is the maximum
                distance at which it is heard at its maximum volume. Further
                than the minimum distance, it will start to fade out according
                to its attenuation factor. A value of 0 ("inside the head
                of the listener") is an invalid value and is forbidden.
                The default value of the minimum distance is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.Attenuation">
            <summary>
                Attenuation factor of the stream.
                The attenuation is a multiplicative factor which makes
                the music more or less loud according to its distance
                from the listener. An attenuation of 0 will produce a
                non-attenuated sound, i.e. its volume will always be the same
                whether it is heard from near or from far. On the other hand,
                an attenuation value such as 100 will make the sound fade out
                very quickly as it gets further from the listener.
                The default value of the attenuation is 1.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.SFML.SoundStream.PlayingOffset">
            <summary>
                Current playing position of the stream.
                The playing position can be changed when the music is
                either paused or playing.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.Play">
            <summary>
                Start or resume playing the audio stream.
                This function starts the stream if it was stopped, resumes
                it if it was paused, and restarts it from beginning if it
                was it already playing.
                This function uses its own thread so that it doesn't block
                the rest of the program while the stream is played.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.Pause">
            <summary>
                Pause the audio stream.
                This function pauses the stream if it was playing,
                otherwise (stream already paused or stopped) it has no effect.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.Stop">
            <summary>
                Stop playing the audio stream.
                This function stops the stream if it was playing or paused,
                and does nothing if it was already stopped.
                It also resets the playing position (unlike pause()).
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.Initialize(System.UInt32,System.UInt32)">
            <summary>
                Set the audio stream parameters, you must call it before Play()
            </summary>
            <param name="channelCount">Number of channels</param>
            <param name="sampleRate">Sample rate, in samples per second</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.OnGetData(System.Int16[]@)">
            <summary>
                Virtual function called each time new audio data is needed to feed the stream
            </summary>
            <param name="samples">Array of samples to fill for the stream</param>
            <returns>True to continue playback, false to stop</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.OnSeek(Alis.Core.Audio.SFML.Time)">
            <summary>
                Virtual function called to seek into the stream
            </summary>
            <param name="timeOffset">New position</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.Destroy(System.Boolean)">
            <summary>
                Handle the destruction of the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.GetData(Alis.Core.Audio.SFML.SoundStream.Chunk@,System.IntPtr)">
            <summary>
                Called each time new audio data is needed to feed the stream
            </summary>
            <param name="dataChunk">Data chunk to fill with new audio samples</param>
            <param name="userData">User data -- unused</param>
            <returns>True to continue playback, false to stop</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.Seek(Alis.Core.Audio.SFML.Time,System.IntPtr)">
            <summary>
                Called to seek in the stream
            </summary>
            <param name="timeOffset">New position</param>
            <param name="userData">User data -- unused</param>
            <returns>If false is returned, the playback is aborted</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_create(Alis.Core.Audio.SFML.SoundStream.GetDataCallbackType,Alis.Core.Audio.SFML.SoundStream.SeekCallbackType,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
                Sfs the sound stream create using the specified on get data
            </summary>
            <param name="onGetData">The on get data</param>
            <param name="onSeek">The on seek</param>
            <param name="channelCount">The channel count</param>
            <param name="sampleRate">The sample rate</param>
            <param name="userData">The user data</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_destroy(System.IntPtr)">
            <summary>
                Sfs the sound stream destroy using the specified sound stream stream
            </summary>
            <param name="soundStreamStream">The sound stream stream</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_play(System.IntPtr)">
            <summary>
                Sfs the sound stream play using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_pause(System.IntPtr)">
            <summary>
                Sfs the sound stream pause using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_stop(System.IntPtr)">
            <summary>
                Sfs the sound stream stop using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getStatus(System.IntPtr)">
            <summary>
                Sfs the sound stream get status using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The sound status</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getChannelCount(System.IntPtr)">
            <summary>
                Sfs the sound stream get channel count using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getSampleRate(System.IntPtr)">
            <summary>
                Sfs the sound stream get sample rate using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setLoop(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the sound stream set loop using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="loop">The loop</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setPitch(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound stream set pitch using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="pitch">The pitch</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setVolume(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound stream set volume using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setPosition(System.IntPtr,Alis.Core.Aspect.Math.Vector3)">
            <summary>
                Sfs the sound stream set position using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="position">The position</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setRelativeToListener(System.IntPtr,System.Boolean)">
            <summary>
                Sfs the sound stream set relative to listener using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="relative">The relative</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setMinDistance(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound stream set min distance using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="minDistance">The min distance</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setAttenuation(System.IntPtr,System.Single)">
            <summary>
                Sfs the sound stream set attenuation using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="attenuation">The attenuation</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_setPlayingOffset(System.IntPtr,Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the sound stream set playing offset using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <param name="timeOffset">The time offset</param>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getLoop(System.IntPtr)">
            <summary>
                Describes whether sf sound stream get loop
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getPitch(System.IntPtr)">
            <summary>
                Sfs the sound stream get pitch using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getVolume(System.IntPtr)">
            <summary>
                Sfs the sound stream get volume using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getPosition(System.IntPtr)">
            <summary>
                Sfs the sound stream get position using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The vector 3f</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_isRelativeToListener(System.IntPtr)">
            <summary>
                Describes whether sf sound stream is relative to listener
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getMinDistance(System.IntPtr)">
            <summary>
                Sfs the sound stream get min distance using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getAttenuation(System.IntPtr)">
            <summary>
                Sfs the sound stream get attenuation using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.SoundStream.sfSoundStream_getPlayingOffset(System.IntPtr)">
            <summary>
                Sfs the sound stream get playing offset using the specified sound stream
            </summary>
            <param name="soundStream">The sound stream</param>
            <returns>The systems time</returns>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundStream.Chunk">
            <summary>
                Structure mapping the C library arguments passed to the data callback
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStream.Chunk.samples">
            <summary>
                The samples
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.SoundStream.Chunk.sampleCount">
            <summary>
                The sample count
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundStream.GetDataCallbackType">
            <summary>
                The get data callback type
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.SoundStream.SeekCallbackType">
            <summary>
                The seek callback type
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.SFML.Time">
            <summary>
                This class represents a time value
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.SFML.Time.Zero">
            <summary>
                Predefined "zero" time value
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.FromSeconds(System.Single)">
            <summary>
                Construct a time value from a number of seconds
            </summary>
            <param name="seconds">Number of seconds</param>
            <returns>Time value constructed from the amount of seconds</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.FromMilliseconds(System.Int32)">
            <summary>
                Construct a time value from a number of milliseconds
            </summary>
            <param name="milliseconds">Number of milliseconds</param>
            <returns>Time value constructed from the amount of milliseconds</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.FromMicroseconds(System.Int64)">
            <summary>
                Construct a time value from a number of microseconds
            </summary>
            <param name="microseconds">Number of microseconds</param>
            <returns>Time value constructed from the amount of microseconds</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.AsSeconds">
            <summary>
                Returns the time value as a number of seconds
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.AsMilliseconds">
            <summary>
                Returns the time value as a number of milliseconds
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.AsMicroseconds">
            <summary>
                Returns the time value as a number of microseconds
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Equality(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Compare two times and checks if they are equal
            </summary>
            <returns>Times are equal</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Inequality(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Compare two times and checks if they are not equal
            </summary>
            <returns>Times are not equal</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.Equals(System.Object)">
            <summary>
                Compare time and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and time are equal</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.Equals(Alis.Core.Audio.SFML.Time)">
            <summary>
                Compare two times and checks if they are equal
            </summary>
            <param name="other">Time to check</param>
            <returns>times are equal</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_LessThan(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of &lt; operator to compare two time values
            </summary>
            <returns>True if left is lesser than right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_LessThanOrEqual(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of &lt;= operator to compare two time values
            </summary>
            <returns>True if left is lesser or equal than right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_GreaterThan(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of &gt; operator to compare two time values
            </summary>
            <returns>True if left is greater than right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_GreaterThanOrEqual(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of &gt;= operator to compare two time values
            </summary>
            <returns>True if left is greater or equal than right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Subtraction(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of binary - operator to subtract two time values
            </summary>
            <returns>Difference of the two times values</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Addition(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of binary + operator to add two time values
            </summary>
            <returns>Sum of the two times values</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Multiply(Alis.Core.Audio.SFML.Time,System.Single)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Multiply(Alis.Core.Audio.SFML.Time,System.Int64)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Multiply(System.Single,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Multiply(System.Int64,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of binary * operator to scale a time value
            </summary>
            <returns>left multiplied by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Division(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of binary / operator to scale a time value
            </summary>
            <returns>left divided by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Division(Alis.Core.Audio.SFML.Time,System.Single)">
            <summary>
                Overload of binary / operator to scale a time value
            </summary>
            <returns>left divided by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Division(Alis.Core.Audio.SFML.Time,System.Int64)">
            <summary>
                Overload of binary / operator to scale a time value
            </summary>
            <returns>left divided by the right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.op_Modulus(Alis.Core.Audio.SFML.Time,Alis.Core.Audio.SFML.Time)">
            <summary>
                Overload of binary % operator to compute remainder of a time value
            </summary>
            <returns>left modulo of right</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="F:Alis.Core.Audio.SFML.Time.microseconds">
            <summary>
                The microseconds
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.sfSeconds(System.Single)">
            <summary>
                Sfs the seconds using the specified amount
            </summary>
            <param name="amount">The amount</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.sfMilliseconds(System.Int32)">
            <summary>
                Sfs the milliseconds using the specified amount
            </summary>
            <param name="amount">The amount</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.sfMicroseconds(System.Int64)">
            <summary>
                Sfs the microseconds using the specified amount
            </summary>
            <param name="amount">The amount</param>
            <returns>The time</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.sfTime_asSeconds(Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the time as seconds using the specified time
            </summary>
            <param name="time">The time</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.sfTime_asMilliseconds(Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the time as milliseconds using the specified time
            </summary>
            <param name="time">The time</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.SFML.Time.sfTime_asMicroseconds(Alis.Core.Audio.SFML.Time)">
            <summary>
                Sfs the time as microseconds using the specified time
            </summary>
            <param name="time">The time</param>
            <returns>The long</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.AlisObject">
            <summary>
                The object base class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Name">
            <summary>
                The name
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Tag">
            <summary>
                The tag
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode(System.Object)">
            <summary>
                The object base class
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.Equals(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode">
            <summary>
                Get hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.ToString">
            <summary>
                To string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Attributes.SuppressUnmanagedCodeSecurityAttribute">
            <summary>Allows managed code to call into unmanaged code without a stack walk. This class cannot be inherited.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass">
             <summary>
             A class used by managed classes to managed unmanaged DLLs.
             This will extract and load DLLs from embedded binary resources.
             
             This can be used with pinvoke, as well as manually loading DLLs your own way. If you use pinvoke, you don't need to load the DLLs, just
             extract them. When the DLLs are extracted, the %PATH% environment variable is updated to point to the temporary folder.
            
             To Use
             <list type="">
             <item>Add all of the DLLs as binary file resources to the project Propeties. Double click Properties/Resources.resx,
             Add Resource, Add Existing File. The resource name will be similar but not exactly the same as the DLL file name.</item>
             <item>In a static constructor of your application, call EmbeddedDllClass.ExtractEmbeddedDlls() for each DLL that is needed</item>
             <example>
                           EmbeddedDllClass.ExtractEmbeddedDlls("libFrontPanel-pinv.dll", Properties.Resources.libFrontPanel_pinv);
             </example>
             <item>Optional: In a static constructor of your application, call EmbeddedDllClass.LoadDll() to load the DLLs you have extracted. This is not necessary for pinvoke</item>
             <example>
                           EmbeddedDllClass.LoadDll("myscrewball.dll");
             </example>
             <item>Continue using standard Pinvoke methods for the desired functions in the DLL</item>
             </list>
             </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.tempFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.dirName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.ExtractEmbeddedDlls(System.String,System.Byte[])">
            <summary>
            Extract DLLs from resources to temporary folder
            </summary>
            <param name="dllName">name of DLL file to create (including dll suffix)</param>
            <param name="resourceBytes">The resource name (fully qualified)</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.LoadLibrary(System.String)">
            <summary>
            Loads the library using the specified lp file name
            </summary>
            <param name="lpFileName">The lp file name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.LoadDll(System.String)">
            <summary>
            managed wrapper around LoadLibrary
            </summary>
            <param name="dllName"></param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentDontExits">
            <summary>
                The component dont exits class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentInstancieIsTheSame">
            <summary>
                The component instancie is the same class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentTypeAlredyExist">
            <summary>
                The component type alredy exist class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.GameObjectIsFull">
            <summary>
                The game object is full class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.IndexOutOfBounds">
            <summary>
                The index out of bounds class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LimitOfComponents">
            <summary>
                The limit of components class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException">
            <summary>
                Exception thrown by SFML whenever loading a resource fails
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor">
            <summary>
                Default constructor (unknown error)
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.MaxSceneGame">
            <summary>
                The max scene game class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.NullArgumentException">
            <summary>
                The null argument exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Settings.Csfml">
            <summary>
                The csfml class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Audio">
            <summary>
                The audio
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Graphics">
            <summary>
                The graphics
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.System">
            <summary>
                The system
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Window">
            <summary>
                The window
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Data.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuild`1">
            <summary>
                The build interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuild`1.Build">
            <summary>
                Builds this instance
            </summary>
            <returns>The origin</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuilder`1">
            <summary>
                The builder interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder">
            <summary>
                Builders
            </summary>
            <returns>The</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder``1">
            <summary>
                Builder static
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAdd`3">
            <summary>
                The add interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAdd`3.Add``1(`2)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2">
            <summary>
                The add animation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2.AddAnimation(`1)">
            <summary>
                Adds the animation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddComponent`2">
            <summary>
                The add component class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(System.Func{``0,`1})">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(``0)">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddFrame`2">
            <summary>
                The add frame interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddFrame`2.AddFrame(`1)">
            <summary>
                Adds the frame using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAudio`2">
            <summary>
                The audio interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAudio`2.Audio(`1)">
            <summary>
                Audioes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAuthor`2">
            <summary>
                The author interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAuthor`2.Author(`1)">
            <summary>
                Authors the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2">
            <summary>
            The auto tilling interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2.AutoTilling(`1)">
            <summary>
            Autoes the tilling using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBackground`2">
            <summary>
                The background interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBackground`2.Background(`1)">
            <summary>
                Backgrounds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBodyType`2">
            <summary>
            The body type interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBodyType`2.BodyType(`1)">
            <summary>
            Bodies the type using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IConfiguration`2">
            <summary>
                The configuration interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IConfiguration`2.Configuration(`1)">
            <summary>
                Configurations the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ICreate`2">
            <summary>
                The create interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ICreate`2.Create(`1)">
            <summary>
                Creates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDebug`2">
            <summary>
                The debug interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDebug`2.Debug(`1)">
            <summary>
                Debugs the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDelete`1">
            <summary>
                The delete interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDelete`1.Delete">
            <summary>
                Deletes this instance
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDensity`2">
            <summary>
            The density interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDensity`2.Density(`1)">
            <summary>
            Densities the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDepth`2">
            <summary>
                The depth interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDepth`2.Depth(`1)">
            <summary>
                Depths the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDescription`2">
            <summary>
                The description interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDescription`2.Description(`1)">
            <summary>
                Descriptions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFile`2">
            <summary>
                The file interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFile`2.File(`1)">
            <summary>
                Files the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFilePath`2">
            <summary>
                The file path interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFilePath`2.FilePath(`1)">
            <summary>
                Files the path using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2">
            <summary>
            The fixed rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2.FixedRotation(`1)">
            <summary>
            Fixeds the rotation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFriction`2">
            <summary>
            The friction interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFriction`2.Friction(`1)">
            <summary>
            Frictions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGeneral`2">
            <summary>
                The general interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGeneral`2.General(`1)">
            <summary>
                Generals the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGraphic`2">
            <summary>
                The graphic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGraphic`2.Graphic(`1)">
            <summary>
                Graphics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravityScale`2">
            <summary>
            The gravity scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravityScale`2.GravityScale(`1)">
            <summary>
            Gravities the scale using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IHas`2">
            <summary>
                The has interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IHas`2.Has(`1)">
            <summary>
                Hases the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIcon`2">
            <summary>
                The icon interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIcon`2.Icon(`1)">
            <summary>
                Icons the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIs`3">
            <summary>
                The is interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIs`3.Is``1(`2)">
            <summary>
                Ises the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsActive`2">
            <summary>
                The is active interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsActive`2.IsActive(`1)">
            <summary>
                Ises the active using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2">
            <summary>
                The is dynamic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic">
            <summary>
                Ises the dynamic
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic(`1)">
            <summary>
                Ises the dynamic using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsStatic`2">
            <summary>
                The is static interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic">
            <summary>
                Ises the static
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic(`1)">
            <summary>
                Ises the static using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2">
            <summary>
                The is trigger interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger">
            <summary>
                Ises the trigger
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger(`1)">
            <summary>
                Ises the trigger using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3">
            <summary>
            The linear velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3.LinearVelocity(`1,`2)">
            <summary>
            Linears the velocity using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManager`3">
            <summary>
                The manager interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManager`3.Manager``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManagerOf`3">
            <summary>
                The manager of interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManagerOf`3.ManagerOf``1(`2)">
            <summary>
                Managers the of using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMass`2">
            <summary>
            The mass interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMass`2.Mass(`1)">
            <summary>
            Masses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMute`2">
            <summary>
                The mute interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMute`2.Mute(`1)">
            <summary>
                Mutes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IName`2">
            <summary>
                The name interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IName`2.Name(`1)">
            <summary>
                Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IOrder`2">
            <summary>
                The order interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IOrder`2.Order(`1)">
            <summary>
                Orders the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2">
            <summary>
                The play on awake interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2.PlayOnAwake(`1)">
            <summary>
                Plays the on awake using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPosition2D`3">
            <summary>
                The position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPosition2D`3.Position(`1,`2)">
            <summary>
                Positions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3">
            <summary>
            The relative position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3.RelativePosition(`1,`2)">
            <summary>
            Relatives the position using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IResolution`3">
            <summary>
                The resolution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IResolution`3.Resolution(`1,`2)">
            <summary>
                Resolutions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRestitution`2">
            <summary>
            The restitution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRestitution`2.Restitution(`1)">
            <summary>
            Restitutions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRotation`2">
            <summary>
                The rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRotation`2.Rotation(`1)">
            <summary>
                Rotations the angle
            </summary>
            <param name="angle">The angle</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRun">
            <summary>
                The run interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRun.Run">
            <summary>
                Runs this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScale2D`3">
            <summary>
                The scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScale2D`3.Scale(`1,`2)">
            <summary>
                Scales the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScreenMode`2">
            <summary>
                The screen mode interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScreenMode`2.ScreenMode(`1)">
            <summary>
                Screens the mode using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISet`3">
            <summary>
                The set interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISet`3.Set``1(`2)">
            <summary>
                Sets the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2">
            <summary>
                The set audio clip interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2.SetAudioClip(`1)">
            <summary>
                Sets the audio clip using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetMax`3">
            <summary>
                The set max interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetMax`3.SetMax``1(`2)">
            <summary>
                Sets the max using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetTexture`2">
            <summary>
                The texture interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetTexture`2.SetTexture(`1)">
            <summary>
                Textures the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISettings`2">
            <summary>
                The settings interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISettings`2.Settings(`1)">
            <summary>
                Settingses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISize`3">
            <summary>
                The size interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISize`3.Size(`1,`2)">
            <summary>
                Sizes the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISpeed`2">
            <summary>
                The speed interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISpeed`2.Speed(`1)">
            <summary>
                Speeds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2">
            <summary>
                The splash screen interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2.SplashScreen(`1)">
            <summary>
                Splashes the screen using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IStyle`2">
            <summary>
                The style interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IStyle`2.Style(`1)">
            <summary>
                Styles the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITime`2">
            <summary>
                The time interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITime`2.Time(`1)">
            <summary>
                Times the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITransform`2">
            <summary>
                The transform interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITransform`2.Transform(`1)">
            <summary>
                Transforms the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IUpdate`2">
            <summary>
                The update interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IUpdate`2.Update(`1)">
            <summary>
                Updates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IVolume`2">
            <summary>
                The volume interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IVolume`2.Volume(`1)">
            <summary>
                Volumes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWhere`2">
            <summary>
                The where interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWhere`2.Where(`1)">
            <summary>Wheres the specified value.</summary>
            <param name="value">The value.</param>
            <returns>
                <br />
            </returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWindow`2">
            <summary>
                The window interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWindow`2.Window(`1)">
            <summary>
                Windows the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWith`3">
            <summary>
                Simple comment
            </summary>
            <typeparam name="TBuilder">the builder</typeparam>
            <typeparam name="TArgument">the argument</typeparam>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWith`3.With``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithName`2">
            <summary>Define the word "Name" </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithName`2.WithName(`1)">
            <summary>Withes the name.</summary>
            <param name="value">The value.</param>
            <returns>Return the value that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithTag`2">
            <summary>
                Define the word "Tag"
            </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithTag`2.WithTag(`1)">
            <summary>Withes the tag.</summary>
            <param name="value">The value.</param>
            <returns>return the object that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Color">
            <summary>
                Color for debug drawing. Each value has the range [0,1].
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.r">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.g">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.b">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Color" /> class
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.Set(System.Single,System.Single,System.Single)">
            <summary>
                Sets the r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleController">
            <summary>
            The console controller class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController.messages">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController.filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController.dirPath">
            <summary>
            The dir path
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.ConsoleController"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.Print(Alis.Core.Aspect.Logging.Message)">
            <summary>
            Prints the to console using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.SaveToFile(Alis.Core.Aspect.Logging.Message)">
            <summary>
            Saves the to file using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.DateTimeConverter">
            <summary>
            The date time converter class
            </summary>
            <seealso cref="T:System.Text.Json.Serialization.JsonConverter`1"/>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.DateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Reads the reader
            </summary>
            <param name="reader">The reader</param>
            <param name="typeToConvert">The type to convert</param>
            <param name="options">The options</param>
            <returns>The date time</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.DateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Writes the writer
            </summary>
            <param name="writer">The writer</param>
            <param name="value">The value</param>
            <param name="options">The options</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleLogConfig">
            <summary>
            The console log config class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.InfoMessageColor">
            <summary>
            Info text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.LogMessageColor">
            <summary>
            Log text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.TraceMessageColor">
            <summary>
            Trace text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.WarningMessageColor">
            <summary>
            Warning text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ErrorMessageColor">
            <summary>
            Error text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ExceptionMessageColor">
            <summary>
            Exception text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.EventMessageColor">
            <summary>
            Event text color
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleLogConfig.GetColorMessageByType(Alis.Core.Aspect.Logging.MessageType)">
            <summary>
            Gets the color message by type using the specified message type
            </summary>
            <param name="messageType">The message type</param>
            <exception cref="T:System.ArgumentOutOfRangeException">null</exception>
            <returns>The console color</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.FileController">
            <summary>
            The file controller class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Logger">
            <summary>
                The logger class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace">
            <summary>
            Traces the message
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace(System.String)">
            <summary>
            Traces the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info(System.String)">
            <summary>
            Infoes the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Log(System.String)">
            <summary>
            Logs the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event(System.String)">
            <summary>
            Events the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Warning(System.String)">
            <summary>
            Warnings the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Error(System.String)">
            <summary>
            Errors the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.String)">
            <summary>
            Exceptions the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.Exception)">
            <summary>
            Exceptions the exception
            </summary>
            <param name="exception">The exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.LogLevel">
            <summary>
                The log level enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Info">
            <summary>
                The info log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Log">
            <summary>
                The log log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Normal">
            <summary>
                The normal log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Critical">
            <summary>
                The critical log level
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Message">
            <summary>
            The message class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Message.#ctor(Alis.Core.Aspect.Logging.MessageType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Message"/> class
            </summary>
            <param name="messageType">The message type</param>
            <param name="content">The content</param>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.DateTime">
            <summary>
            Gets or sets the value of the date time
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.MessageType">
            <summary>
            Gets or sets the value of the message type
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Level">
            <summary>
            Gets or sets the value of the level
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Content">
            <summary>
            Gets or sets the value of the content
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.StackTrace">
            <summary>
            Gets or sets the value of the stack trace
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Method">
            <summary>
            Gets or sets the value of the method
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.File">
            <summary>
            Gets or sets the value of the file
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Line">
            <summary>
            Gets or sets the value of the line
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.MessageType">
            <summary>
            The message type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Trace">
            <summary>
            The trace message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Info">
            <summary>
            The info message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Log">
            <summary>
            The log message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Event">
            <summary>
            The event message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Warning">
            <summary>
            The warning message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Error">
            <summary>
            The error message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Exception">
            <summary>
            The exception message type
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Constant">
            <summary>
                The math constants class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Pi">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.TwoPi">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.MaxFloat">
            <summary>
                The max value
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Euler">
            <summary>
                The euler
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.E">
            <summary>Represents the mathematical constant e(2.71828175).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Log10E">
            <summary>Represents the log base ten of e(0.4342945).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Log2E">
            <summary>Represents the log base two of e(1.442695).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.PiOver2">
            <summary>Represents the value of pi divided by two(1.57079637).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.PiOver4">
            <summary>Represents the value of pi divided by four(0.7853982).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Tau">
            <summary>Represents the value of pi times two(6.28318548). This is an alias of TwoPi.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle">
            <summary>
            The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle">
            <summary>
            The rectangle
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle"/> class
            </summary>
            <param name="left">The left</param>
            <param name="top">The top</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.#ctor(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle,Alis.Core.Aspect.Math.Figures.D2.Rectangle@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle,Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle,Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Square">
            <summary>
            The square
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube">
            <summary>
            The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.HyperRectangle">
            <summary>
            The hyper rectangle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere">
            <summary>
            The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix22">
            <summary>
            The matrix 22
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix33">
            <summary>
            The matrix 33
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix44">
            <summary>
            The matrix 44
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector2">
            <summary>
            The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector2.X">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector2.Y">
            <summary>
            The 
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector2"/> class
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Operator - overload ; returns the opposite of a vector
            </summary>
            <param name="v">Vector to negate</param>
            <returns>-v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Division(Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Equality(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Inequality(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Equals(Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector2.Zero">
            <summary>
            Gets the value of the zero
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector3">
            <summary>
            The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector3.X">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector3.Y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector3.Z">
            <summary>
            The 
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector3"/> class
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Multiply(Alis.Core.Aspect.Math.Vector3,System.Single)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Division(Alis.Core.Aspect.Math.Vector3,System.Single)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Equality(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Inequality(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.ToString">
            <summary>
            Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.Equals(System.Object)">
            <summary>
            Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.Equals(Alis.Core.Aspect.Math.Vector3)">
            <summary>
            Describes whether this instance equals
            </summary>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector4">
            <summary>
            The vector
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream">
            <summary>
                Structure that contains InputStream callbacks
                (directly maps to a CSFML sfInputStream)
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.ReadCallbackType">
            <summary>
                Type of callback to read data from the current stream
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.SeekCallbackType">
            <summary>
                Type of callback to seek the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.TellCallbackType">
            <summary>
                Type of callback to return the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSizeCallbackType">
            <summary>
                Type of callback to return the current stream's size
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Read">
            <summary>
                Function that is called to read data from the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Seek">
            <summary>
                Function that is called to seek the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Tell">
            <summary>
                Function that is called to return the positon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSize">
            <summary>
                Function that is called to return the size
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor">
            <summary>
                Adapts a System.IO.Stream to be usable as a SFML InputStream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStream">
            <summary>
                The my input stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStreamPtr">
            <summary>
                The my input stream ptr
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.#ctor(System.IO.Stream)">
            <summary>
                Construct from a System.IO.Stream
            </summary>
            <param name="stream">Stream to adapt</param>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.InputStreamPtr">
            <summary>
                The pointer to the CSFML InputStream structure
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Read(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
                Called to read from the stream
            </summary>
            <param name="data">Where to copy the read bytes</param>
            <param name="size">Size to read, in bytes</param>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Seek(System.Int64,System.IntPtr)">
            <summary>
                Called to set the read position in the stream
            </summary>
            <param name="position">New read position</param>
            <param name="userData">User data -- unused</param>
            <returns>Actual position</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Tell(System.IntPtr)">
            <summary>
                Get the current read position in the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Current position in the stream</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.GetSize(System.IntPtr)">
            <summary>
                Called to get the total size of the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes in the stream</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Security.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Thread.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Time.TimeStep">
            <summary>
                The time step
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.Dt">
            <summary>
                The dt
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvDt">
            <summary>
                The inv dt
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DtRatio">
            <summary>
                The dt ratio
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.VelocityIterations">
            <summary>
                The velocity iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.PositionIterations">
            <summary>
                The position iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.WarmStarting">
            <summary>
                The warm starting
            </summary>
        </member>
    </members>
</doc>
