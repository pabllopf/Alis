<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core.Aspect.Math</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.Aspect.Math.Constant">
            <summary>
                The math constants class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Pi">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.TwoPi">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.MaxFloat">
            <summary>
                The max value
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Euler">
            <summary>
                The euler
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.E">
            <summary>Represents the mathematical constant e(2.71828175).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Log10E">
            <summary>Represents the log base ten of e(0.4342945).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Log2E">
            <summary>Represents the log base two of e(1.442695).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.PiOver2">
            <summary>Represents the value of pi divided by two(1.57079637).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.PiOver4">
            <summary>Represents the value of pi divided by four(0.7853982).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Constant.Tau">
            <summary>Represents the value of pi times two(6.28318548). This is an alias of TwoPi.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle">
            <summary>
            The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle">
            <summary>
            The rectangle
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle"/> class
            </summary>
            <param name="left">The left</param>
            <param name="top">The top</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.#ctor(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle,Alis.Core.Aspect.Math.Figures.D2.Rectangle@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle,Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle,Alis.Core.Aspect.Math.Figures.D2.Rectangle)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Square">
            <summary>
            The square
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube">
            <summary>
            The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.HyperRectangle">
            <summary>
            The hyper rectangle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere">
            <summary>
            The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.InsufficientNumberOfElementsException">
            <summary>
            The insufficient number of elements exception class
            </summary>
            <seealso cref="T:System.Exception"/>
        </member>
        <member name="M:Alis.Core.Aspect.Math.InsufficientNumberOfElementsException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.InsufficientNumberOfElementsException"/> class
            </summary>
            <param name="i">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix2X2">
            <summary>
            The matrix 22
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix3X2">
            <summary>
            The matrix
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix3X3">
            <summary>
            The matrix 33
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix4X4">
            <summary>
            The matrix
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Quaternion">
            <summary>
            The quaternion
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector">
            <summary>
            The vector
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.ThrowInsufficientNumberOfElementsException(System.Int32)">
            <summary>
            Throws the insufficient number of elements exception using the specified i
            </summary>
            <param name="i">The </param>
            <exception cref="T:Alis.Core.Aspect.Math.InsufficientNumberOfElementsException"></exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.ThrowArgumentException_DestinationTooShort">
            <summary>
            Throws the argument exception destination too short
            </summary>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector2">
            <summary>
            The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector2.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector2.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:System.Numerics.Vector2" /> object whose two elements have the same value.</summary>
            <param name="value">The value to assign to both elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.#ctor(System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:System.Numerics.Vector2.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:System.Numerics.Vector2.Y" /> field.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector2.Zero">
            <summary>Returns a vector whose 2 elements are equal to zero.</summary>
            <value>A vector whose two elements are equal to zero (that is, it returns the vector <c>(0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector2.One">
            <summary>Gets a vector whose 2 elements are equal to one.</summary>
            <value>A vector whose two elements are equal to one (that is, it returns the vector <c>(1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector2.UnitX">
            <summary>Gets the vector (1,0).</summary>
            <value>The vector <c>(1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector2.UnitY">
            <summary>Gets the vector (0,1).</summary>
            <value>The vector <c>(0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>The <see cref="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)" /> method defines the addition operation for <see cref="T:System.Numerics.Vector2" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Division(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Division(Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Equality(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Inequality(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector2)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector2)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Abs(Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Add(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Clamp(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Distance(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.DistanceSquared(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Divide(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Divide(Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Dot(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Lerp(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
            <remarks><format type="text/markdown"><![CDATA[
            The behavior of this method changed in .NET 5.0. For more information, see [Behavior change for Vector2.Lerp and Vector4.Lerp](/dotnet/core/compatibility/3.1-5.0#behavior-change-for-vector2lerp-and-vector4lerp).
            ]]></format></remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Max(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Min(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Multiply(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Multiply(Alis.Core.Aspect.Math.Vector2,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Multiply(System.Single,Alis.Core.Aspect.Math.Vector2)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Negate(Alis.Core.Aspect.Math.Vector2)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Normalize(Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Reflect(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.SquareRoot(Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Subtract(Alis.Core.Aspect.Math.Vector2,Alis.Core.Aspect.Math.Vector2)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns <see langword="false" />.</returns>
            <remarks>The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a <see cref="T:System.Numerics.Vector2" /> object and their <see cref="F:System.Numerics.Vector2.X" /> and <see cref="F:System.Numerics.Vector2.Y" /> elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Equals(Alis.Core.Aspect.Math.Vector2)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two vectors are equal if their <see cref="F:System.Numerics.Vector2.X" /> and <see cref="F:System.Numerics.Vector2.Y" /> elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.Length">
            <summary>Returns the length of the vector.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:System.Numerics.Vector2.LengthSquared"/>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector2.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:System.Numerics.Vector2.Length" /> method.</remarks>
            <altmember cref="M:System.Numerics.Vector2.Length"/>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector3">
            <summary>
            The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector3.X">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector3.Y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector3.Z">
            <summary>
            The 
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector3"/> class
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Multiply(Alis.Core.Aspect.Math.Vector3,System.Single)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Division(Alis.Core.Aspect.Math.Vector3,System.Single)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Equality(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.op_Inequality(Alis.Core.Aspect.Math.Vector3,Alis.Core.Aspect.Math.Vector3)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.ToString">
            <summary>
            Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.Equals(System.Object)">
            <summary>
            Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector3.Equals(Alis.Core.Aspect.Math.Vector3)">
            <summary>
            Describes whether this instance equals
            </summary>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector4">
            <summary>
            The vector
            </summary>
        </member>
    </members>
</doc>
