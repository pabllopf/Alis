<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core.Network</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.Network.BufferPool">
            <summary>
                This buffer pool is instance thread safe
                Use GetBuffer to get a MemoryStream (with a publically accessible buffer)
                Calling Close on this MemoryStream will clear its internal buffer and return the buffer to the pool for reuse
                MemoryStreams can grow larger than the DEFAULT_BUFFER_SIZE (or whatever you passed in)
                and the underlying buffers will be returned to the pool at their larger sizes
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool._bufferPoolStack">
            <summary>
                The buffer pool stack
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool._bufferSize">
            <summary>
                The buffer size
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.BufferPool" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.BufferPool" /> class
            </summary>
            <param name="bufferSize">The buffer size</param>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.DefaultBufferSize">
            <summary>
                The default buffer size
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.GetBuffer">
            <summary>
                Gets a MemoryStream built from a buffer plucked from a thread safe pool
                The pool grows automatically.
                Closing the memory stream clears the buffer and returns it to the pool
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.ReturnBuffer(System.Byte[])">
            <summary>
                Returns the buffer using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
        </member>
        <member name="T:Alis.Core.Network.BufferPool.PublicBufferMemoryStream">
            <summary>
                This memory stream is not instance thread safe (not to be confused with the BufferPool which is instance thread
                safe)
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.PublicBufferMemoryStream._bufferPoolInternal">
            <summary>
                The buffer pool internal
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.PublicBufferMemoryStream._buffer">
            <summary>
                The buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.PublicBufferMemoryStream._ms">
            <summary>
                The ms
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.#ctor(System.Byte[],Alis.Core.Network.BufferPool)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.BufferPool.PublicBufferMemoryStream" /> class
            </summary>
            <param name="buffer">The buffer</param>
            <param name="bufferPool">The buffer pool</param>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Length">
            <summary>
                Gets the value of the length
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanRead">
            <summary>
                Gets the value of the can read
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanSeek">
            <summary>
                Gets the value of the can seek
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanTimeout">
            <summary>
                Gets the value of the can timeout
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanWrite">
            <summary>
                Gets the value of the can write
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Capacity">
            <summary>
                Gets or sets the value of the capacity
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Position">
            <summary>
                Gets or sets the value of the position
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ReadTimeout">
            <summary>
                Gets or sets the value of the read timeout
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteTimeout">
            <summary>
                Gets or sets the value of the write timeout
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
                Begins the read using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="callback">The callback</param>
            <param name="state">The state</param>
            <returns>The async result</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
                Begins the write using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="callback">The callback</param>
            <param name="state">The state</param>
            <returns>The async result</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Close">
            <summary>
                Closes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Copies the to using the specified destination
            </summary>
            <param name="destination">The destination</param>
            <param name="bufferSize">The buffer size</param>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.EndRead(System.IAsyncResult)">
            <summary>
                Ends the read using the specified async result
            </summary>
            <param name="asyncResult">The async result</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.EndWrite(System.IAsyncResult)">
            <summary>
                Ends the write using the specified async result
            </summary>
            <param name="asyncResult">The async result</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Flush">
            <summary>
                Flushes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.FlushAsync(System.Threading.CancellationToken)">
            <summary>
                Flushes the cancellation token
            </summary>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.GetBuffer">
            <summary>
                Gets the buffer
            </summary>
            <returns>The byte array</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.EnlargeBufferIfRequired(System.Int32)">
            <summary>
                Enlarges the buffer if required using the specified count
            </summary>
            <param name="count">The count</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException">
                Tried to create a buffer ({requiredSize:#,##0} bytes) that was
                larger than the max allowed size ({int.MaxValue:#,##0})
            </exception>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteByte(System.Byte)">
            <summary>
                Writes the byte using the specified value
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Writes the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Writes the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.InitializeLifetimeService">
            <summary>
                Initializes the lifetime service
            </summary>
            <returns>The object</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Reads the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ReadByte">
            <summary>
                Reads the byte
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
                Seeks the offset
            </summary>
            <param name="offset">The offset</param>
            <param name="loc">The loc</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.SetLength(System.Int64)">
            <summary>
                Note: This will not make the MemoryStream any smaller, only larger
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ToArray">
            <summary>
                Returns the array
            </summary>
            <returns>The byte array</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
            <summary>
                Describes whether this instance try get buffer
            </summary>
            <param name="buffer">The buffer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteTo(System.IO.Stream)">
            <summary>
                Writes the to using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.EntityTooLargeException">
            <summary>
                The entity too large exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.EntityTooLargeException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.EntityTooLargeException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.EntityTooLargeException.#ctor(System.String)">
            <summary>
                Http header too large to fit in buffer
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.EntityTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.EntityTooLargeException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException">
            <summary>
                The invalid http response code exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
            <param name="responseCode">The response code</param>
            <param name="responseDetails">The response details</param>
            <param name="responseHeader">The response header</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="P:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.ResponseCode">
            <summary>
                Gets or sets the value of the response code
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.ResponseHeader">
            <summary>
                Gets or sets the value of the response header
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.ResponseDetails">
            <summary>
                Gets or sets the value of the response details
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException">
            <summary>
                The sec web socket key missing exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.ServerListenerSocketException">
            <summary>
                The server listener socket exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.ServerListenerSocketException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.ServerListenerSocketException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.ServerListenerSocketException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.ServerListenerSocketException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.ServerListenerSocketException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.ServerListenerSocketException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException">
            <summary>
                The web socket buffer overflow exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException">
            <summary>
                The web socket handshake failed exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException">
            <summary>
                The web socket version not supported exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.HttpHelper">
            <summary>
                The http helper class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.HttpHelper.HttpGetHeaderRegex">
            <summary>
                The http get header regex
            </summary>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.CalculateWebSocketKey">
            <summary>
                Calculates a random WebSocket key that can be used to initiate a WebSocket handshake
            </summary>
            <returns>A random websocket key</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.ComputeSocketAcceptString(System.String)">
            <summary>
                Computes a WebSocket accept string from a given key
            </summary>
            <param name="secWebSocketKey">The web socket key to base the accept string on</param>
            <returns>A web socket accept string</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.ReadHttpHeaderAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads an http header as per the HTTP spec
            </summary>
            <param name="stream">The stream to read UTF8 text from</param>
            <param name="token">The cancellation token</param>
            <returns>The HTTP header</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.IsWebSocketUpgradeRequest(System.String)">
            <summary>
                Decodes the header to detect is this is a web socket upgrade response
            </summary>
            <param name="header">The HTTP header</param>
            <returns>True if this is an http WebSocket upgrade response</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.GetPathFromHeader(System.String)">
            <summary>
                Gets the path from the HTTP header
            </summary>
            <param name="httpHeader">The HTTP header to read</param>
            <returns>The path</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.GetSubProtocols(System.String)">
            <summary>
                Gets the sub protocols using the specified http header
            </summary>
            <param name="httpHeader">The http header</param>
            <exception cref="T:Alis.Core.Network.Exceptions.EntityTooLargeException">Sec-WebSocket-Protocol exceeded the maximum of length of {MAX_LEN}</exception>
            <returns>A list of string</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.ReadHttpResponseCode(System.String)">
            <summary>
                Reads the HTTP response code from the http response string
            </summary>
            <param name="response">The response string</param>
            <returns>the response code</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.WriteHttpHeaderAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Writes an HTTP response string to the stream
            </summary>
            <param name="response">The response (without the new line characters)</param>
            <param name="stream">The stream to write to</param>
            <param name="token">The cancellation token</param>
        </member>
        <member name="T:Alis.Core.Network.IBufferPool">
            <summary>
                The buffer pool interface
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IBufferPool.GetBuffer">
            <summary>
                Gets a MemoryStream built from a buffer plucked from a thread safe pool
                The pool grows automatically.
                Closing the memory stream clears the buffer and returns it to the pool
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.BinaryReaderWriter">
            <summary>
                The binary reader writer class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadExactly(System.Int32,System.IO.Stream,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the exactly using the specified length
            </summary>
            <param name="length">The length</param>
            <param name="stream">The stream</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
            <exception cref="T:System.IO.InternalBufferOverflowException">
                Unable to read {length} bytes into buffer (offset: {buffer.Offset}
                size: {buffer.Count}). Use a larger read buffer
            </exception>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadUShortExactly(System.IO.Stream,System.Boolean,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the u short exactly using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the ushort</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadULongExactly(System.IO.Stream,System.Boolean,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the u long exactly using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the ulong</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadLongExactly(System.IO.Stream,System.Boolean,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the long exactly using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the long</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteInt(System.Int32,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the int using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteULong(System.UInt64,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the u long using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteLong(System.Int64,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the long using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteUShort(System.UInt16,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the u short using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.Events">
            <summary>
                Use the Guid to locate this EventSource in PerfView using the Additional Providers box (without wildcard
                characters)
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.Events.Log">
            <summary>
                The events
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ClientConnectingToIpAddress(System.Guid,System.String,System.Int32)">
            <summary>
                Clients the connecting to ip address using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="ipAddress">The ip address</param>
            <param name="port">The port</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ClientConnectingToHost(System.Guid,System.String,System.Int32)">
            <summary>
                Clients the connecting to host using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="host">The host</param>
            <param name="port">The port</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.AttemtingToSecureSslConnection(System.Guid)">
            <summary>
                Attemtings the to secure ssl connection using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ConnectionSecured(System.Guid)">
            <summary>
                Connections the secured using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ConnectionNotSecure(System.Guid)">
            <summary>
                Connections the not secure using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.SslCertificateError(System.Net.Security.SslPolicyErrors)">
            <summary>
                Ssls the certificate error using the specified ssl policy errors
            </summary>
            <param name="sslPolicyErrors">The ssl policy errors</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.HandshakeSent(System.Guid,System.String)">
            <summary>
                Handshakes the sent using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="httpHeader">The http header</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ReadingHttpResponse(System.Guid)">
            <summary>
                Readings the http response using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ReadHttpResponseError(System.Guid,System.String)">
            <summary>
                Reads the http response error using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.InvalidHttpResponseCode(System.Guid,System.String)">
            <summary>
                Invalids the http response code using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="response">The response</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.HandshakeFailure(System.Guid,System.String)">
            <summary>
                Handshakes the failure using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ClientHandshakeSuccess(System.Guid)">
            <summary>
                Clients the handshake success using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ServerHandshakeSuccess(System.Guid)">
            <summary>
                Servers the handshake success using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.AcceptWebSocketStarted(System.Guid)">
            <summary>
                Accepts the web socket started using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.SendingHandshakeResponse(System.Guid,System.String)">
            <summary>
                Sendings the handshake response using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="response">The response</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketVersionNotSupported(System.Guid,System.String)">
            <summary>
                Webs the socket version not supported using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.BadRequest(System.Guid,System.String)">
            <summary>
                Bads the request using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.UsePerMessageDeflate(System.Guid)">
            <summary>
                Uses the per message deflate using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.NoMessageCompression(System.Guid)">
            <summary>
                Noes the message compression using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.KeepAliveIntervalZero(System.Guid)">
            <summary>
                Keeps the alive interval zero using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.PingPongManagerStarted(System.Guid,System.Int32)">
            <summary>
                Pings the pong manager started using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="keepAliveIntervalSeconds">The keep alive interval seconds</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.PingPongManagerEnded(System.Guid)">
            <summary>
                Pings the pong manager ended using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.KeepAliveIntervalExpired(System.Guid,System.Int32)">
            <summary>
                Keeps the alive interval expired using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="keepAliveIntervalSeconds">The keep alive interval seconds</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputAutoTimeout(System.Guid,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.String)">
            <summary>
                Closes the output auto timeout using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputAutoTimeoutCancelled(System.Guid,System.Int32,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.String)">
            <summary>
                Closes the output auto timeout cancelled using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="timeoutSeconds">The timeout seconds</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputAutoTimeoutError(System.Guid,System.String,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.String)">
            <summary>
                Closes the output auto timeout error using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeException">The close exception</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.TryGetBufferNotSupported(System.Guid,System.String)">
            <summary>
                Tries the get buffer not supported using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="streamType">The stream type</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.SendingFrame(System.Guid,Alis.Core.Network.Internal.WebSocketOpCode,System.Boolean,System.Int32,System.Boolean)">
            <summary>
                Sendings the frame using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="numBytes">The num bytes</param>
            <param name="isPayloadCompressed">The is payload compressed</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ReceivedFrame(System.Guid,Alis.Core.Network.Internal.WebSocketOpCode,System.Boolean,System.Int32)">
            <summary>
                Receiveds the frame using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="numBytes">The num bytes</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputNoHandshake(System.Guid,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the output no handshake using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseHandshakeStarted(System.Guid,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the handshake started using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseHandshakeRespond(System.Guid,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the handshake respond using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseHandshakeComplete(System.Guid)">
            <summary>
                Closes the handshake complete using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseFrameReceivedInUnexpectedState(System.Guid,System.Net.WebSockets.WebSocketState,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the frame received in unexpected state using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketDispose(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Webs the socket dispose using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketDisposeCloseTimeout(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Webs the socket dispose close timeout using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketDisposeError(System.Guid,System.Net.WebSockets.WebSocketState,System.String)">
            <summary>
                Webs the socket dispose error using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.InvalidStateBeforeClose(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Invalids the state before close using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.InvalidStateBeforeCloseOutput(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Invalids the state before close output using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrame">
            <summary>
                The web socket frame class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrame.#ctor(System.Boolean,Alis.Core.Network.Internal.WebSocketOpCode,System.Int32,System.ArraySegment{System.Byte})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketFrame" /> class
            </summary>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="count">The count</param>
            <param name="maskKey">The mask key</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrame.#ctor(System.Boolean,Alis.Core.Network.Internal.WebSocketOpCode,System.Int32,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.ArraySegment{System.Byte})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketFrame" /> class
            </summary>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="count">The count</param>
            <param name="closeStatus">The close status</param>
            <param name="closeStatusDescription">The close status description</param>
            <param name="maskKey">The mask key</param>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.IsFinBitSet">
            <summary>
                Gets the value of the is fin bit set
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.OpCode">
            <summary>
                Gets the value of the op code
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.Count">
            <summary>
                Gets the value of the count
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.CloseStatus">
            <summary>
                Gets the value of the close status
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.CloseStatusDescription">
            <summary>
                Gets the value of the close status description
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.MaskKey">
            <summary>
                Gets the value of the mask key
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrameCommon">
            <summary>
                The web socket frame common class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketFrameCommon.MaskKeyLength">
            <summary>
                The mask key length
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameCommon.ToggleMask(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})">
            <summary>
                Mutate payload with the mask key
                This is a reversible process
                If you apply this to masked data it will be unmasked and visa versa
            </summary>
            <param name="maskKey">The 4 byte mask key</param>
            <param name="payload">The payload to mutate</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrameReader">
            <summary>
                Reads a WebSocket frame
                see http://tools.ietf.org/html/rfc6455 for specification
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.CalculateNumBytesToRead(System.Int32,System.Int32)">
            <summary>
                Calculates the num bytes to read using the specified num bytes letf to read
            </summary>
            <param name="numBytesLetfToRead">The num bytes letf to read</param>
            <param name="bufferSize">The buffer size</param>
            <returns>The num bytes letf to read</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.ReadFromCursorAsync(System.IO.Stream,System.ArraySegment{System.Byte},Alis.Core.Network.Internal.WebSocketReadCursor,System.Threading.CancellationToken)">
            <summary>
                The last read could not be completed because the read buffer was too small.
                We need to continue reading bytes off the stream.
                Not to be confused with a continuation frame
            </summary>
            <param name="fromStream">The stream to read from</param>
            <param name="intoBuffer">The buffer to read into</param>
            <param name="readCursor">The previous partial websocket frame read plus cursor information</param>
            <param name="cancellationToken">the cancellation token</param>
            <returns>A websocket frame</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.ReadAsync(System.IO.Stream,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Read a WebSocket frame from the stream
            </summary>
            <param name="fromStream">The stream to read from</param>
            <param name="intoBuffer">The buffer to read into</param>
            <param name="cancellationToken">the cancellation token</param>
            <returns>A websocket frame</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.DecodeCloseFrame(System.Boolean,Alis.Core.Network.Internal.WebSocketOpCode,System.Int32,System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})">
            <summary>
                Extracts close status and close description information from the web socket frame
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.ReadLength(System.Byte,System.ArraySegment{System.Byte},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads the length of the payload according to the contents of byte2
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrameWriter">
            <summary>
                The web socket frame writer class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameWriter.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketFrameWriter" /> class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketFrameWriter.Random">
            <summary>
                This is used for data masking so that web proxies don't cache the data
                Therefore, there are no cryptographic concerns
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameWriter.Write(Alis.Core.Network.Internal.WebSocketOpCode,System.ArraySegment{System.Byte},System.IO.MemoryStream,System.Boolean,System.Boolean)">
            <summary>
                No async await stuff here because we are dealing with a memory stream
            </summary>
            <param name="opCode">The web socket opcode</param>
            <param name="fromPayload">Array segment to get payload data from</param>
            <param name="toStream">Stream to write to</param>
            <param name="isLastFrame">True is this is the last frame in this message (usually true)</param>
            <param name="isClient"></param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketImplementation">
            <summary>
                Main implementation of the WebSocket abstract class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._guid">
            <summary>
                The guid
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._includeExceptionInCloseResponse">
            <summary>
                The include exception in close response
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._internalReadCts">
            <summary>
                The internal read cts
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._isClient">
            <summary>
                The is client
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._pingPongManager">
            <summary>
                The ping pong manager
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._recycledStreamFactory">
            <summary>
                The recycled stream factory
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._semaphore">
            <summary>
                The semaphore slim
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._stream">
            <summary>
                The stream
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._usePerMessageDeflate">
            <summary>
                The use per message deflate
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._closeStatus">
            <summary>
                The close status
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._closeStatusDescription">
            <summary>
                The close status description
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._continuationFrameMessageType">
            <summary>
                The binary
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._isContinuationFrame">
            <summary>
                The is continuation frame
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._readCursor">
            <summary>
                The read cursor
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._tryGetBufferFailureLogged">
            <summary>
                The try get buffer failure logged
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.#ctor(System.Guid,System.Func{System.IO.MemoryStream},System.IO.Stream,System.TimeSpan,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketImplementation" /> class
            </summary>
            <param name="guid">The guid</param>
            <param name="recycledStreamFactory">The recycled stream factory</param>
            <param name="stream">The stream</param>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="secWebSocketExtensions">The sec web socket extensions</param>
            <param name="includeExceptionInCloseResponse">The include exception in close response</param>
            <param name="isClient">The is client</param>
            <param name="subProtocol">The sub protocol</param>
            <exception cref="T:System.InvalidOperationException">KeepAliveInterval must be Zero or positive</exception>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.CloseStatus">
            <summary>
                Gets the value of the close status
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.CloseStatusDescription">
            <summary>
                Gets the value of the close status description
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.State">
            <summary>
                Gets the value of the state
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.SubProtocol">
            <summary>
                Gets the value of the sub protocol
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.KeepAliveInterval">
            <summary>
                Gets the value of the keep alive interval
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation.PingPongPayloadLen">
            <summary>
                The max ping pong payload len
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Receive web socket result
            </summary>
            <param name="buffer">The buffer to copy data into</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The web socket result details</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Send data to the web socket
            </summary>
            <param name="buffer">the buffer containing data to send</param>
            <param name="messageType">The message type. Can be Text or Binary</param>
            <param name="endOfMessage">
                True if this message is a standalone message (this is the norm)
                If it is a multi-part message then false (and true for the last message)
            </param>
            <param name="cancellationToken">the cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.SendPingAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Call this automatically from server side each keepAliveInterval period
                NOTE: ping payload must be 125 bytes or less
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.Abort">
            <summary>
                Aborts the WebSocket without sending a Close frame
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>
                Polite close (use the close handshake)
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>
                Fire and forget close
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.Dispose">
            <summary>
                Dispose will send a close frame if the connection is still open
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.OnPong(Alis.Core.Network.PongEventArgs)">
            <summary>
                Called when a Pong frame is received
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.BuildClosePayload(System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
                As per the spec, write the close status followed by the close reason
            </summary>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">Optional extra close details</param>
            <returns>The payload to sent in the close frame</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.SendPongAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            NOTE: pong payload must be 125 bytes or less
            Pong should contain the same payload as the ping
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.RespondToCloseFrame(Alis.Core.Network.Internal.WebSocketFrame,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Called when a Close frame is received
                Send a response close frame if applicable
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.GetBuffer(System.IO.MemoryStream)">
            <summary>
                Note that the way in which the stream buffer is accessed can lead to significant performance problems
                You want to avoid a call to stream.ToArray to avoid extra memory allocation
                MemoryStream can be configured to have its internal buffer accessible.
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.WriteStreamToNetwork(System.IO.MemoryStream,System.Threading.CancellationToken)">
            <summary>
                Puts data on the wire
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.GetOppCode(System.Net.WebSockets.WebSocketMessageType)">
            <summary>
                Turns a spec websocket frame opcode into a WebSocketMessageType
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.CloseOutputAutoTimeoutAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Exception)">
            <summary>
                Automatic WebSocket close in response to some invalid data from the remote websocket host
            </summary>
            <param name="closeStatus">The close status to use</param>
            <param name="statusDescription">A description of why we are closing</param>
            <param name="ex">The exception (for logging)</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketOpCode">
            <summary>
                The web socket op code enum
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.ContinuationFrame">
            <summary>
                The continuation frame web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.TextFrame">
            <summary>
                The text frame web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.BinaryFrame">
            <summary>
                The binary frame web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.ConnectionClose">
            <summary>
                The connection close web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.Ping">
            <summary>
                The ping web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.Pong">
            <summary>
                The pong web socket op code
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketReadCursor">
            <summary>
                The web socket read cursor class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketReadCursor.#ctor(Alis.Core.Network.Internal.WebSocketFrame,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketReadCursor" /> class
            </summary>
            <param name="frame">The frame</param>
            <param name="numBytesRead">The num bytes read</param>
            <param name="numBytesLeftToRead">The num bytes left to read</param>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketReadCursor.WebSocketFrame">
            <summary>
                Gets the value of the web socket frame
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketReadCursor.NumBytesRead">
            <summary>
                Gets the value of the num bytes read
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketReadCursor.NumBytesLeftToRead">
            <summary>
                Gets the value of the num bytes left to read
            </summary>
        </member>
        <member name="T:Alis.Core.Network.IPingPongManager">
            <summary>
                Ping Pong Manager used to facilitate ping pong WebSocket messages
            </summary>
        </member>
        <member name="E:Alis.Core.Network.IPingPongManager.Pong">
            <summary>
                Raised when a Pong frame is received
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IPingPongManager.SendPing(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Sends a ping frame
            </summary>
            <param name="payload">The payload (must be 125 bytes of less)</param>
            <param name="cancellation">The cancellation token</param>
        </member>
        <member name="T:Alis.Core.Network.IWebSocketClientFactory">
            <summary>
                Web socket client factory used to open web socket client connections
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketClientFactory.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Connect with default options
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketClientFactory.ConnectAsync(System.Uri,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with options specified
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketClientFactory.ConnectAsync(System.IO.Stream,System.String,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with a stream that has already been opened and HTTP websocket upgrade request sent
                This function will check the handshake response from the server and proceed if successful
                Use this function if you have specific requirements to open a conenction like using special http headers and
                cookies
                You will have to build your own HTTP websocket upgrade request
                You may not even choose to use TCP/IP and this function will allow you to do that
            </summary>
            <param name="responseStream">The full duplex response stream from the server</param>
            <param name="secWebSocketKey">The secWebSocketKey you used in the handshake request</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Network.IWebSocketServerFactory">
            <summary>
                Web socket server factory used to open web socket server connections
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketServerFactory.ReadHttpHeaderFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade
            </summary>
            <param name="stream">The network stream</param>
            <param name="token">The optional cancellation token</param>
            <returns>Http data read from the stream</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with default options
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,Alis.Core.Network.WebSocketServerOptions,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with options specified
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="options">The web socket options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="T:Alis.Core.Network.PingPongManager">
            <summary>
                Ping Pong Manager used to facilitate ping pong WebSocket messages
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._cancellationToken">
            <summary>
                The cancellation token
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._guid">
            <summary>
                The guid
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._keepAliveInterval">
            <summary>
                The keep alive interval
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._pingTask">
            <summary>
                The ping task
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._stopwatch">
            <summary>
                The stopwatch
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._webSocket">
            <summary>
                The web socket
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._pingSentTicks">
            <summary>
                The ping sent ticks
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.#ctor(System.Guid,System.Net.WebSockets.WebSocket,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
                Initialises a new instance of the PingPongManager to facilitate ping pong WebSocket messages.
                If you are manually creating an instance of this class then it is advisable to set keepAliveInterval to
                TimeSpan.Zero when you create the WebSocket instance (using a factory) otherwise you may be automatically
                be sending duplicate Ping messages (see keepAliveInterval below)
            </summary>
            <param name="guid"></param>
            <param name="webSocket">The web socket used to listen to ping messages and send pong messages</param>
            <param name="keepAliveInterval">
                The time between automatically sending ping messages.
                Set this to TimeSpan.Zero if you with to manually control sending ping messages.
            </param>
            <param name="cancellationToken">
                The token used to cancel a pending ping send AND the automatic sending of ping messages
                if keepAliveInterval is positive
            </param>
        </member>
        <member name="E:Alis.Core.Network.PingPongManager.Pong">
            <summary>
                Raised when a Pong frame is received
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.SendPing(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Sends a ping frame
            </summary>
            <param name="payload">The payload (must be 125 bytes of less)</param>
            <param name="cancellation">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.OnPong(Alis.Core.Network.PongEventArgs)">
            <summary>
                Ons the pong using the specified e
            </summary>
            <param name="e">The </param>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.PingForever">
            <summary>
                Pings the forever
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.WebSocketImpl_Pong(System.Object,Alis.Core.Network.PongEventArgs)">
            <summary>
                Webs the socket impl pong using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Network.PongEventArgs">
            <summary>
                Pong EventArgs
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PongEventArgs.#ctor(System.ArraySegment{System.Byte})">
            <summary>
                Initialises a new instance of the PongEventArgs class
            </summary>
            <param name="payload">The pong payload must be 125 bytes or less (can be zero bytes)</param>
        </member>
        <member name="P:Alis.Core.Network.PongEventArgs.Payload">
            <summary>
                The data extracted from a Pong WebSocket frame
            </summary>
        </member>
        <member name="T:Alis.Core.Network.WebSocketClientFactory">
            <summary>
                Web socket client factory used to open web socket client connections
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketClientFactory._bufferFactory">
            <summary>
                The buffer factory
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketClientFactory._bufferPool">
            <summary>
                The buffer pool
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.#ctor">
            <summary>
                Initialises a new instance of the WebSocketClientFactory class without caring about internal buffers
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.#ctor(System.Func{System.IO.MemoryStream})">
            <summary>
                Initialises a new instance of the WebSocketClientFactory class with control over internal buffer creation
            </summary>
            <param name="bufferFactory">
                Used to get a memory stream. Feel free to implement your own buffer pool. MemoryStreams
                will be disposed when no longer needed and can be returned to the pool.
            </param>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Connect with default options
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.Uri,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with options specified
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.IO.Stream,System.String,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with a stream that has already been opened and HTTP websocket upgrade request sent
                This function will check the handshake response from the server and proceed if successful
                Use this function if you have specific requirements to open a conenction like using special http headers and
                cookies
                You will have to build your own HTTP websocket upgrade request
                You may not even choose to use TCP/IP and this function will allow you to do that
            </summary>
            <param name="responseStream">The full duplex response stream from the server</param>
            <param name="secWebSocketKey">The secWebSocketKey you used in the handshake request</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.Guid,System.IO.Stream,System.String,System.TimeSpan,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Connects the guid
            </summary>
            <param name="guid">The guid</param>
            <param name="responseStream">The response stream</param>
            <param name="secWebSocketKey">The sec web socket key</param>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="secWebSocketExtensions">The sec web socket extensions</param>
            <param name="includeExceptionInCloseResponse">The include exception in close response</param>
            <param name="token">The token</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException">Handshake unexpected failure </exception>
            <returns>A task containing the web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.GetSubProtocolFromHeader(System.String)">
            <summary>
                Gets the sub protocol from header using the specified response
            </summary>
            <param name="response">The response</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ThrowIfInvalidAcceptString(System.Guid,System.String,System.String)">
            <summary>
                Throws the if invalid accept string using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="response">The response</param>
            <param name="secWebSocketKey">The sec web socket key</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException"></exception>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ThrowIfInvalidResponseCode(System.String)">
            <summary>
                Throws the if invalid response code using the specified response header
            </summary>
            <param name="responseHeader">The response header</param>
            <exception cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException"></exception>
            <exception cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException">null null </exception>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.TlsAuthenticateAsClient(System.Net.Security.SslStream,System.String)">
            <summary>
                Override this if you need more fine grained control over the TLS handshake like setting the SslProtocol or adding a
                client certificate
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.GetStream(System.Guid,System.Boolean,System.Boolean,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Override this if you need more control over how the stream used for the websocket is created. It does not event
                need to be a TCP stream
            </summary>
            <param name="loggingGuid">For logging purposes only</param>
            <param name="isSecure">Make a secure connection</param>
            <param name="noDelay">
                Set to true to send a message immediately with the least amount of latency (typical usage for
                chat)
            </param>
            <param name="host">The destination host (can be an IP address)</param>
            <param name="port">The destination port</param>
            <param name="cancellationToken">Used to cancel the request</param>
            <returns>A connected and open stream</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
                Invoked by the RemoteCertificateValidationDelegate
                If you want to ignore certificate errors (for debugging) then return true
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.GetAdditionalHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Gets the additional headers using the specified additional headers
            </summary>
            <param name="additionalHeaders">The additional headers</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.PerformHandshake(System.Guid,System.Uri,System.IO.Stream,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Performs the handshake using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="uri">The uri</param>
            <param name="stream">The stream</param>
            <param name="options">The options</param>
            <param name="token">The token</param>
            <returns>A task containing the web socket</returns>
        </member>
        <member name="T:Alis.Core.Network.WebSocketClientOptions">
            <summary>
                Client WebSocket init options
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientOptions.#ctor">
            <summary>
                Initialises a new instance of the WebSocketClientOptions class
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.KeepAliveInterval">
            <summary>
                How often to send ping requests to the Server
                This is done to prevent proxy servers from closing your connection
                The default is TimeSpan.Zero meaning that it is disabled.
                WebSocket servers usually send ping messages so it is not normally necessary for the client to send them (hence the
                TimeSpan.Zero default)
                You can manually control ping pong messages using the PingPongManager class.
                If you do that it is advisible to set this KeepAliveInterval to zero for the WebSocketClientFactory
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.NoDelay">
            <summary>
                Set to true to send a message immediately with the least amount of latency (typical usage for chat)
                This will disable Nagle's algorithm which can cause high tcp latency for small packets sent infrequently
                However, if you are streaming large packets or sending large numbers of small packets frequently it is advisable to
                set NoDelay to false
                This way data will be bundled into larger packets for better throughput
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.AdditionalHttpHeaders">
            <summary>
                Add any additional http headers to this dictionary
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.IncludeExceptionInCloseResponse">
            <summary>
                Include the full exception (with stack trace) in the close response
                when an exception is encountered and the WebSocket connection is closed
                The default is false
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.SecWebSocketExtensions">
            <summary>
                WebSocket Extensions as an HTTP header value
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.SecWebSocketProtocol">
            <summary>
                A comma separated list of sub protocols in preference order (first one being the most preferred)
                The server will return the first supported sub protocol (or none if none are supported)
                Can be null
            </summary>
        </member>
        <member name="T:Alis.Core.Network.WebSocketHttpContext">
            <summary>
                The WebSocket HTTP Context used to initiate a WebSocket handshake
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketHttpContext.#ctor(System.Boolean,System.Collections.Generic.IList{System.String},System.String,System.String,System.IO.Stream)">
            <summary>
                Initialises a new instance of the WebSocketHttpContext class
            </summary>
            <param name="isWebSocketRequest">True if this is a valid WebSocket request</param>
            <param name="webSocketRequestedProtocols"></param>
            <param name="httpHeader">The raw http header extracted from the stream</param>
            <param name="path">The Path extracted from the http header</param>
            <param name="stream">The stream AFTER the header has already been read</param>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.IsWebSocketRequest">
            <summary>
                True if this is a valid WebSocket request
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.WebSocketRequestedProtocols">
            <summary>
                Gets the value of the web socket requested protocols
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.HttpHeader">
            <summary>
                The raw http header extracted from the stream
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.Path">
            <summary>
                The Path extracted from the http header
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.Stream">
            <summary>
                The stream AFTER the header has already been read
            </summary>
        </member>
        <member name="T:Alis.Core.Network.WebSocketServerFactory">
            <summary>
                Web socket server factory used to open web socket server connections
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketServerFactory._bufferFactory">
            <summary>
                The buffer factory
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketServerFactory._bufferPool">
            <summary>
                The buffer pool
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.#ctor">
            <summary>
                Initialises a new instance of the WebSocketServerFactory class without caring about internal buffers
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.#ctor(System.Func{System.IO.MemoryStream})">
            <summary>
                Initialises a new instance of the WebSocketClientFactory class with control over internal buffer creation
            </summary>
            <param name="bufferFactory"></param>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.ReadHttpHeaderFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade
            </summary>
            <param name="stream">The network stream</param>
            <param name="token">The optional cancellation token</param>
            <returns>Http data read from the stream</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with default options
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,Alis.Core.Network.WebSocketServerOptions,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with options specified
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="options">The web socket options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.CheckWebSocketVersion(System.String)">
            <summary>
                Checks the web socket version using the specified http header
            </summary>
            <param name="httpHeader">The http header</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException"></exception>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException">Cannot find "Sec-WebSocket-Version" in http header</exception>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.PerformHandshakeAsync(System.Guid,System.String,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Performs the handshake using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="httpHeader">The http header</param>
            <param name="subProtocol">The sub protocol</param>
            <param name="stream">The stream</param>
            <param name="token">The token</param>
            <exception cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException">Unable to read "Sec-WebSocket-Key" from http header</exception>
        </member>
        <member name="T:Alis.Core.Network.WebSocketServerOptions">
            <summary>
                Server WebSocket init options
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerOptions.#ctor">
            <summary>
                Initialises a new instance of the WebSocketServerOptions class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerOptions.#ctor(System.Double,System.Boolean,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.WebSocketServerOptions" /> class
            </summary>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="includeExceptionInCloseResponse">The include exception in close response</param>
            <param name="subProtocol">The sub protocol</param>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerOptions.#ctor(System.TimeSpan,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.WebSocketServerOptions" /> class
            </summary>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="subProtocol">The sub protocol</param>
        </member>
        <member name="P:Alis.Core.Network.WebSocketServerOptions.KeepAliveInterval">
            <summary>
                How often to send ping requests to the Client
                The default is 60 seconds
                This is done to prevent proxy servers from closing your connection
                A timespan of zero will disable the automatic ping pong mechanism
                You can manually control ping pong messages using the PingPongManager class.
                If you do that it is advisable to set this KeepAliveInterval to zero in the WebSocketServerFactory
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketServerOptions.IncludeExceptionInCloseResponse">
            <summary>
                Include the full exception (with stack trace) in the close response
                when an exception is encountered and the WebSocket connection is closed
                The default is false
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketServerOptions.SubProtocol">
            <summary>
                Specifies the sub protocol to send back to the client in the opening handshake
                Can be null (the most common use case)
                The client can specify multiple preferred protocols in the opening handshake header
                The server should use the first supported one or set this to null if none of the requested sub protocols are
                supported
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.AlisObject">
            <summary>
                The object base class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Name">
            <summary>
                The name
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Tag">
            <summary>
                The tag
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode(System.Object)">
            <summary>
                The object base class
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.Equals(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode">
            <summary>
                Get hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.ToString">
            <summary>
                To string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Attributes.SuppressUnmanagedCodeSecurityAttribute">
            <summary>Allows managed code to call into unmanaged code without a stack walk. This class cannot be inherited.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass">
            <summary>
                A class used by managed classes to managed unmanaged DLLs.
                This will extract and load DLLs from embedded binary resources.
                This can be used with pinvoke, as well as manually loading DLLs your own way. If you use pinvoke, you don't need to
                load the DLLs, just
                extract them. When the DLLs are extracted, the %PATH% environment variable is updated to point to the temporary
                folder.
                To Use
                <list type="">
                    <item>
                        Add all of the DLLs as binary file resources to the project Propeties. Double click
                        Properties/Resources.resx,
                        Add Resource, Add Existing File. The resource name will be similar but not exactly the same as the DLL file
                        name.
                    </item>
                    <item>
                        In a static constructor of your application, call EmbeddedDllClass.ExtractEmbeddedDlls() for each DLL
                        that is needed
                    </item>
                    <example>
                        EmbeddedDllClass.ExtractEmbeddedDlls("libFrontPanel-pinv.dll", Properties.Resources.libFrontPanel_pinv);
                    </example>
                    <item>
                        Optional: In a static constructor of your application, call EmbeddedDllClass.LoadDll() to load the DLLs
                        you have extracted. This is not necessary for pinvoke
                    </item>
                    <example>
                        EmbeddedDllClass.LoadDll("myscrewball.dll");
                    </example>
                    <item>Continue using standard Pinvoke methods for the desired functions in the DLL</item>
                </list>
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.TempFolder">
            <summary>
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.DirName">
            <summary>
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.ExtractEmbeddedDlls(System.String,System.Byte[])">
            <summary>
                Extract DLLs from resources to temporary folder
            </summary>
            <param name="dllName">name of DLL file to create (including dll suffix)</param>
            <param name="resourceBytes">The resource name (fully qualified)</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.LoadLibrary(System.String)">
            <summary>
                Loads the library using the specified lp file name
            </summary>
            <param name="lpFileName">The lp file name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.LoadDll(System.String)">
            <summary>
                managed wrapper around LoadLibrary
            </summary>
            <param name="dllName"></param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentDontExits">
            <summary>
                The component dont exits class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentInstancieIsTheSame">
            <summary>
                The component instancie is the same class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.ComponentTypeAlredyExist">
            <summary>
                The component type alredy exist class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.GameObjectIsFull">
            <summary>
                The game object is full class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.IndexOutOfBounds">
            <summary>
                The index out of bounds class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LimitOfComponents">
            <summary>
                The limit of components class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException">
            <summary>
                Exception thrown by SFML whenever loading a resource fails
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor">
            <summary>
                Default constructor (unknown error)
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.SceneGame">
            <summary>
                The max scene game class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.NullArgumentException">
            <summary>
                The null argument exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Base.Settings.Csfml">
            <summary>
                The csfml class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Audio">
            <summary>
                The audio
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Graphics">
            <summary>
                The graphics
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.System">
            <summary>
                The system
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Window">
            <summary>
                The window
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Data.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuild`1">
            <summary>
                The build interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuild`1.Build">
            <summary>
                Builds this instance
            </summary>
            <returns>The origin</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuilder`1">
            <summary>
                The builder interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder">
            <summary>
                Builders
            </summary>
            <returns>The</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder``1">
            <summary>
                Builder static
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAdd`3">
            <summary>
                The add interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAdd`3.Add``1(`2)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2">
            <summary>
                The add animation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2.AddAnimation(`1)">
            <summary>
                Adds the animation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddComponent`2">
            <summary>
                The add component class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(System.Func{``0,`1})">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(``0)">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddFrame`2">
            <summary>
                The add frame interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddFrame`2.AddFrame(`1)">
            <summary>
                Adds the frame using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAudio`2">
            <summary>
                The audio interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAudio`2.Audio(`1)">
            <summary>
                Audioes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAuthor`2">
            <summary>
                The author interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAuthor`2.Author(`1)">
            <summary>
                Authors the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2">
            <summary>
                The auto tilling interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2.AutoTilling(`1)">
            <summary>
                Autoes the tilling using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBackground`2">
            <summary>
                The background interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBackground`2.Background(`1)">
            <summary>
                Backgrounds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBodyType`2">
            <summary>
                The body type interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBodyType`2.BodyType(`1)">
            <summary>
                Bodies the type using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IConfiguration`2">
            <summary>
                The configuration interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IConfiguration`2.Configuration(`1)">
            <summary>
                Configurations the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ICreate`2">
            <summary>
                The create interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ICreate`2.Create(`1)">
            <summary>
                Creates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDebug`2">
            <summary>
                The debug interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDebug`2.Debug(`1)">
            <summary>
                Debugs the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDelete`1">
            <summary>
                The delete interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDelete`1.Delete">
            <summary>
                Deletes this instance
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDensity`2">
            <summary>
                The density interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDensity`2.Density(`1)">
            <summary>
                Densities the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDepth`2">
            <summary>
                The depth interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDepth`2.Depth(`1)">
            <summary>
                Depths the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDescription`2">
            <summary>
                The description interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDescription`2.Description(`1)">
            <summary>
                Descriptions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFile`2">
            <summary>
                The file interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFile`2.File(`1)">
            <summary>
                Files the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFilePath`2">
            <summary>
                The file path interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFilePath`2.FilePath(`1)">
            <summary>
                Files the path using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2">
            <summary>
                The fixed rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2.FixedRotation(`1)">
            <summary>
                Fixeds the rotation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFriction`2">
            <summary>
                The friction interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFriction`2.Friction(`1)">
            <summary>
                Frictions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGeneral`2">
            <summary>
                The general interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGeneral`2.General(`1)">
            <summary>
                Generals the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGraphic`2">
            <summary>
                The graphic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGraphic`2.Graphic(`1)">
            <summary>
                Graphics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravityScale`2">
            <summary>
                The gravity scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravityScale`2.GravityScale(`1)">
            <summary>
                Gravities the scale using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IHas`2">
            <summary>
                The has interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IHas`2.Has(`1)">
            <summary>
                Hases the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIcon`2">
            <summary>
                The icon interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIcon`2.Icon(`1)">
            <summary>
                Icons the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIs`3">
            <summary>
                The is interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIs`3.Is``1(`2)">
            <summary>
                Ises the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsActive`2">
            <summary>
                The is active interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsActive`2.IsActive(`1)">
            <summary>
                Ises the active using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2">
            <summary>
                The is dynamic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic">
            <summary>
                Ises the dynamic
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic(`1)">
            <summary>
                Ises the dynamic using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsStatic`2">
            <summary>
                The is static interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic">
            <summary>
                Ises the static
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic(`1)">
            <summary>
                Ises the static using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2">
            <summary>
                The is trigger interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger">
            <summary>
                Ises the trigger
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger(`1)">
            <summary>
                Ises the trigger using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3">
            <summary>
                The linear velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3.LinearVelocity(`1,`2)">
            <summary>
                Linears the velocity using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManager`3">
            <summary>
                The manager interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManager`3.Manager``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManagerOf`3">
            <summary>
                The manager of interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManagerOf`3.ManagerOf``1(`2)">
            <summary>
                Managers the of using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMass`2">
            <summary>
                The mass interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMass`2.Mass(`1)">
            <summary>
                Masses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMute`2">
            <summary>
                The mute interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMute`2.Mute(`1)">
            <summary>
                Mutes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IName`2">
            <summary>
                The name interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IName`2.Name(`1)">
            <summary>
                Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IOrder`2">
            <summary>
                The order interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IOrder`2.Order(`1)">
            <summary>
                Orders the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2">
            <summary>
                The play on awake interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2.PlayOnAwake(`1)">
            <summary>
                Plays the on awake using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPosition2D`3">
            <summary>
                The position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPosition2D`3.Position(`1,`2)">
            <summary>
                Positions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3">
            <summary>
                The relative position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3.RelativePosition(`1,`2)">
            <summary>
                Relatives the position using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IResolution`3">
            <summary>
                The resolution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IResolution`3.Resolution(`1,`2)">
            <summary>
                Resolutions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRestitution`2">
            <summary>
                The restitution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRestitution`2.Restitution(`1)">
            <summary>
                Restitutions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRotation`2">
            <summary>
                The rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRotation`2.Rotation(`1)">
            <summary>
                Rotations the angle
            </summary>
            <param name="angle">The angle</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRun">
            <summary>
                The run interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRun.Run">
            <summary>
                Runs this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScale2D`3">
            <summary>
                The scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScale2D`3.Scale(`1,`2)">
            <summary>
                Scales the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScreenMode`2">
            <summary>
                The screen mode interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScreenMode`2.ScreenMode(`1)">
            <summary>
                Screens the mode using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISet`3">
            <summary>
                The set interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISet`3.Set``1(`2)">
            <summary>
                Sets the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2">
            <summary>
                The set audio clip interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2.SetAudioClip(`1)">
            <summary>
                Sets the audio clip using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetMax`3">
            <summary>
                The set max interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetMax`3.SetMax``1(`2)">
            <summary>
                Sets the max using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetTexture`2">
            <summary>
                The texture interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetTexture`2.SetTexture(`1)">
            <summary>
                Textures the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISettings`2">
            <summary>
                The settings interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISettings`2.Settings(`1)">
            <summary>
                Settingses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISize`3">
            <summary>
                The size interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISize`3.Size(`1,`2)">
            <summary>
                Sizes the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISpeed`2">
            <summary>
                The speed interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISpeed`2.Speed(`1)">
            <summary>
                Speeds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2">
            <summary>
                The splash screen interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2.SplashScreen(`1)">
            <summary>
                Splashes the screen using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IStyle`2">
            <summary>
                The style interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IStyle`2.Style(`1)">
            <summary>
                Styles the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITime`2">
            <summary>
                The time interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITime`2.Time(`1)">
            <summary>
                Times the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITransform`2">
            <summary>
                The transform interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITransform`2.Transform(`1)">
            <summary>
                Transforms the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IUpdate`2">
            <summary>
                The update interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IUpdate`2.Update(`1)">
            <summary>
                Updates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IVolume`2">
            <summary>
                The volume interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IVolume`2.Volume(`1)">
            <summary>
                Volumes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWhere`2">
            <summary>
                The where interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWhere`2.Where(`1)">
            <summary>Wheres the specified value.</summary>
            <param name="value">The value.</param>
            <returns>
                <br />
            </returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWindow`2">
            <summary>
                The window interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWindow`2.Window(`1)">
            <summary>
                Windows the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWith`3">
            <summary>
                Simple comment
            </summary>
            <typeparam name="TBuilder">the builder</typeparam>
            <typeparam name="TArgument">the argument</typeparam>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWith`3.With``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithName`2">
            <summary>Define the word "Name" </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithName`2.WithName(`1)">
            <summary>Withes the name.</summary>
            <param name="value">The value.</param>
            <returns>Return the value that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithTag`2">
            <summary>
                Define the word "Tag"
            </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithTag`2.WithTag(`1)">
            <summary>Withes the tag.</summary>
            <param name="value">The value.</param>
            <returns>return the object that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Color">
            <summary>
                Color for debug drawing. Each value has the range [0,1].
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.r">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.g">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.Color.b">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Color" /> class
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Color.Set(System.Single,System.Single,System.Single)">
            <summary>
                Sets the r
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleController">
            <summary>
                The console controller class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.ConsoleController" /> class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._messages">
            <summary>
                The message
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._filePath">
            <summary>
                The file path
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleController._dirPath">
            <summary>
                The dir path
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.Print(Alis.Core.Aspect.Logging.Message)">
            <summary>
                Prints the to console using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.SaveToFile(Alis.Core.Aspect.Logging.Message)">
            <summary>
                Saves the to file using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.DateTimeConverter">
            <summary>
                The date time converter class
            </summary>
            <seealso cref="T:System.Text.Json.Serialization.JsonConverter`1" />
        </member>
        <member name="M:Alis.Core.Aspect.Logging.DateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Reads the reader
            </summary>
            <param name="reader">The reader</param>
            <param name="typeToConvert">The type to convert</param>
            <param name="options">The options</param>
            <returns>The date time</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.DateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes the writer
            </summary>
            <param name="writer">The writer</param>
            <param name="value">The value</param>
            <param name="options">The options</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleLogConfig">
            <summary>
                The console log config class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.InfoMessageColor">
            <summary>
                Info text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.LogMessageColor">
            <summary>
                Log text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.TraceMessageColor">
            <summary>
                Trace text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.WarningMessageColor">
            <summary>
                Warning text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ErrorMessageColor">
            <summary>
                Error text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ExceptionMessageColor">
            <summary>
                Exception text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.EventMessageColor">
            <summary>
                Event text color
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleLogConfig.GetColorMessageByType(Alis.Core.Aspect.Logging.MessageType)">
            <summary>
                Gets the color message by type using the specified message type
            </summary>
            <param name="messageType">The message type</param>
            <exception cref="T:System.ArgumentOutOfRangeException">null</exception>
            <returns>The console color</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.FileController">
            <summary>
                The file controller class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Logger">
            <summary>
                The logger class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace">
            <summary>
                Traces the message
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace(System.String)">
            <summary>
                Traces the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info(System.String)">
            <summary>
                Infoes the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Log(System.String)">
            <summary>
                Logs the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event(System.String)">
            <summary>
                Events the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event">
            <summary>
                Events
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Warning(System.String)">
            <summary>
                Warnings the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Error(System.String)">
            <summary>
                Errors the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.String)">
            <summary>
                Exceptions the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.Exception)">
            <summary>
                Exceptions the exception
            </summary>
            <param name="exception">The exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.LogLevel">
            <summary>
                The log level enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Info">
            <summary>
                The info log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Log">
            <summary>
                The log log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Normal">
            <summary>
                The normal log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Critical">
            <summary>
                The critical log level
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Message">
            <summary>
                The message class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Message.#ctor(Alis.Core.Aspect.Logging.MessageType,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Message" /> class
            </summary>
            <param name="messageType">The message type</param>
            <param name="content">The content</param>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.DateTime">
            <summary>
                Gets or sets the value of the date time
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.MessageType">
            <summary>
                Gets or sets the value of the message type
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Level">
            <summary>
                Gets or sets the value of the level
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Content">
            <summary>
                Gets or sets the value of the content
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.StackTrace">
            <summary>
                Gets or sets the value of the stack trace
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Method">
            <summary>
                Gets or sets the value of the method
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.File">
            <summary>
                Gets or sets the value of the file
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Line">
            <summary>
                Gets or sets the value of the line
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.MessageType">
            <summary>
                The message type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Trace">
            <summary>
                The trace message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Info">
            <summary>
                The info message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Log">
            <summary>
                The log message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Event">
            <summary>
                The event message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Warning">
            <summary>
                The warning message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Error">
            <summary>
                The error message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Exception">
            <summary>
                The exception message type
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Exceptions.ArgumentExceptionDestinationTooShort">
            <summary>
                The argument exception destination too short class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException">
            <summary>
                The insufficient number of elements exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Exceptions.InsufficientNumberOfElementsException" /> class
            </summary>
            <param name="i">The </param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle.CircleF">
            <summary>
                The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Circle.CircleI">
            <summary>
                The circle
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF">
            <summary>
                RectangleI is an utility class for manipulating 2D rectangles
                with float coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the rectangle from its coordinates
            </summary>
            <param name="left">Left coordinate of the rectangle</param>
            <param name="top">Top coordinate of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Contains(System.Single,System.Single)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.op_Explicit(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF)~Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI">
            <summary>
                Explicit casting to another rectangle type
            </summary>
            <param name="r">Rectangle being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI">
            <summary>
                RectangleI is an utility class for manipulating 2D rectangles
                with integer coordinates
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the rectangle from its coordinates
            </summary>
            <param name="left">Left coordinate of the rectangle</param>
            <param name="top">Top coordinate of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.#ctor(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Construct the rectangle from position and size
            </summary>
            <param name="position">Position of the top-left corner of the rectangle</param>
            <param name="size">Size of the rectangle</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Contains(System.Int32,System.Int32)">
            <summary>
                Check if a point is inside the rectangle's area
            </summary>
            <param name="x">X coordinate of the point to test</param>
            <param name="y">Y coordinate of the point to test</param>
            <returns>True if the point is inside</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Intersects(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI@)">
            <summary>
                Check intersection between two rectangles
            </summary>
            <param name="rect"> Rectangle to test</param>
            <param name="overlap">Rectangle to be filled with overlapping rect</param>
            <returns>True if rectangles overlap</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Equals(System.Object)">
            <summary>
                Compare rectangle and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and rectangle are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Equals(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Compare two rectangles and checks if they are equal
            </summary>
            <param name="other">Rectangle to check</param>
            <returns>Rectangles are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Equality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Operator == overload ; check rect equality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 == r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Inequality(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)">
            <summary>
                Operator != overload ; check rect inequality
            </summary>
            <param name="r1">First rect</param>
            <param name="r2">Second rect</param>
            <returns>r1 != r2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.op_Explicit(Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI)~Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleF">
            <summary>
                Explicit casting to another rectangle type
            </summary>
            <param name="r">Rectangle being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Left">
            <summary>Left coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Top">
            <summary>Top coordinate of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Width">
            <summary>Width of the rectangle</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figures.D2.Rectangle.RectangleI.Height">
            <summary>Height of the rectangle</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube.CubeF">
            <summary>
                The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Cube.CubeI">
            <summary>
                The cube
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere.SphereF">
            <summary>
                The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figures.D3.Sphere.SphereI">
            <summary>
                The sphere
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F">
            <summary>
                The matrix
            </summary>
            <summary>
                The matrix
            </summary>
            <summary>
                The matrix
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis">
            <summary>
                The canonical basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis.Row0">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis.Row1">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CanonicalBasis.Row2">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.BillboardEpsilon">
            <summary>
                The billboard epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.BillboardMinAngle">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.DecomposeEpsilon">
            <summary>
                The decompose epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M11">
            <summary>The first element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M12">
            <summary>The second element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M13">
            <summary>The third element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M14">
            <summary>The fourth element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M21">
            <summary>The first element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M22">
            <summary>The second element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M23">
            <summary>The third element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M24">
            <summary>The fourth element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M31">
            <summary>The first element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M32">
            <summary>The second element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M33">
            <summary>The third element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M34">
            <summary>The fourth element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M41">
            <summary>The first element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M42">
            <summary>The second element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M43">
            <summary>The third element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M44">
            <summary>The fourth element of the fourth row.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a 4x4 matrix from the specified components.</summary>
            <param name="m11">The value to assign to the first element in the first row.</param>
            <param name="m12">The value to assign to the second element in the first row.</param>
            <param name="m13">The value to assign to the third element in the first row.</param>
            <param name="m14">The value to assign to the fourth element in the first row.</param>
            <param name="m21">The value to assign to the first element in the second row.</param>
            <param name="m22">The value to assign to the second element in the second row.</param>
            <param name="m23">The value to assign to the third element in the second row.</param>
            <param name="m24">The value to assign to the third element in the second row.</param>
            <param name="m31">The value to assign to the first element in the third row.</param>
            <param name="m32">The value to assign to the second element in the third row.</param>
            <param name="m33">The value to assign to the third element in the third row.</param>
            <param name="m34">The value to assign to the fourth element in the third row.</param>
            <param name="m41">The value to assign to the first element in the fourth row.</param>
            <param name="m42">The value to assign to the second element in the fourth row.</param>
            <param name="m43">The value to assign to the third element in the fourth row.</param>
            <param name="m44">The value to assign to the fourth element in the fourth row.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.#ctor(System.Numerics.Matrix3x2)">
            <summary>Creates a <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> object from a specified <see cref="T:System.Numerics.Matrix3x2" /> object.</summary>
            <param name="value">A 3x2 matrix.</param>
            <remarks>
                This constructor creates a 4x4 matrix whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M13" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M14" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M23" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M24" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M31" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M32" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M34" />, and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M43" /> components are
                zero, and whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M33" /> and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M44" /> components are one.
            </remarks>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Identity">
            <summary>Gets the multiplicative identity matrix.</summary>
            <value>Gets the multiplicative identity matrix.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.IsIdentity">
            <summary>Indicates whether the current matrix is the identity matrix.</summary>
            <value><see langword="true" /> if the current matrix is the identity matrix; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Translation">
            <summary>Gets or sets the translation component of this matrix.</summary>
            <value>The translation component of the current instance.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)" /> method defines the operation of the addition operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Equality(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether the specified matrices are equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to care</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>Two matrices are equal if all their corresponding elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Inequality(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether the specified matrices are not equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Subtraction(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>
                The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from
                its corresponding element in <paramref name="value1" />.
            </returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Subtraction(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)" /> method defines the operation of the subtraction operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_UnaryNegation(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Add(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a spherical billboard that rotates around a specified object position.</summary>
            <param name="objectPosition">The position of the object that the billboard will rotate around.</param>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraUpVector">The up vector of the camera.</param>
            <param name="cameraForwardVector">The forward vector of the camera.</param>
            <returns>The created billboard.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a cylindrical billboard that rotates around a specified axis.</summary>
            <param name="objectPosition">The position of the object that the billboard will rotate around.</param>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="rotateAxis">The axis to rotate the billboard around.</param>
            <param name="cameraForwardVector">The forward vector of the camera.</param>
            <param name="objectForwardVector">The forward vector of the object.</param>
            <returns>The billboard matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
            <summary>Creates a matrix that rotates around an arbitrary vector.</summary>
            <param name="axis">The axis to rotate around.</param>
            <param name="angle">The angle to rotate around <paramref name="axis" />, in radians.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateFromQuaternion(System.Numerics.Quaternion)">
            <summary>Creates a rotation matrix from the specified Quaternion rotation value.</summary>
            <param name="quaternion">The source Quaternion.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>Creates a rotation matrix from the specified yaw, pitch, and roll.</summary>
            <param name="yaw">The angle of rotation, in radians, around the Y axis.</param>
            <param name="pitch">The angle of rotation, in radians, around the X axis.</param>
            <param name="roll">The angle of rotation, in radians, around the Z axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a view matrix.</summary>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraTarget">The target towards which the camera is pointing.</param>
            <param name="cameraUpVector">The direction that is "up" from the camera's point of view.</param>
            <returns>The view matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates an orthographic perspective matrix from the given view volume dimensions.</summary>
            <param name="width">The width of the view volume.</param>
            <param name="height">The height of the view volume.</param>
            <param name="zNearPlane">The minimum Z-value of the view volume.</param>
            <param name="zFarPlane">The maximum Z-value of the view volume.</param>
            <returns>The orthographic projection matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a customized orthographic projection matrix.</summary>
            <param name="left">The minimum X-value of the view volume.</param>
            <param name="right">The maximum X-value of the view volume.</param>
            <param name="bottom">The minimum Y-value of the view volume.</param>
            <param name="top">The maximum Y-value of the view volume.</param>
            <param name="zNearPlane">The minimum Z-value of the view volume.</param>
            <param name="zFarPlane">The maximum Z-value of the view volume.</param>
            <returns>The orthographic projection matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a perspective projection matrix from the given view volume dimensions.</summary>
            <param name="width">The width of the view volume at the near view plane.</param>
            <param name="height">The height of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">The distance to the near view plane.</param>
            <param name="farPlaneDistance">The distance to the far view plane.</param>
            <returns>The perspective projection matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="nearPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="farPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="nearPlaneDistance" /> is greater than or equal to <paramref name="farPlaneDistance" />.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane
                distances.
            </summary>
            <param name="fieldOfView">The field of view in the y direction, in radians.</param>
            <param name="aspectRatio">The aspect ratio, defined as view space width divided by height.</param>
            <param name="nearPlaneDistance">The distance to the near view plane.</param>
            <param name="farPlaneDistance">The distance to the far view plane.</param>
            <returns>The perspective projection matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="fieldOfView" /> is less than or equal to zero.
                -or-
                <paramref name="fieldOfView" /> is greater than or equal to <see cref="F:System.Math.PI" />.
                <paramref name="nearPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="farPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="nearPlaneDistance" /> is greater than or equal to <paramref name="farPlaneDistance" />.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a customized perspective projection matrix.</summary>
            <param name="left">The minimum x-value of the view volume at the near view plane.</param>
            <param name="right">The maximum x-value of the view volume at the near view plane.</param>
            <param name="bottom">The minimum y-value of the view volume at the near view plane.</param>
            <param name="top">The maximum y-value of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">The distance to the near view plane.</param>
            <param name="farPlaneDistance">The distance to the far view plane.</param>
            <returns>The perspective projection matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="nearPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="farPlaneDistance" /> is less than or equal to zero.
                -or-
                <paramref name="nearPlaneDistance" /> is greater than or equal to <paramref name="farPlaneDistance" />.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateReflection(System.Numerics.Plane)">
            <summary>Creates a matrix that reflects the coordinate system about a specified plane.</summary>
            <param name="value">The plane about which to create a reflection.</param>
            <returns>A new matrix expressing the reflection.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationX(System.Single)">
            <summary>Creates a matrix for rotating points around the X axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the X axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationX(System.Single,System.Numerics.Vector3)">
            <summary>Creates a matrix for rotating points around the X axis from a center point.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the X axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationY(System.Single)">
            <summary>Creates a matrix for rotating points around the Y axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Y-axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationY(System.Single,System.Numerics.Vector3)">
            <summary>The amount, in radians, by which to rotate around the Y axis from a center point.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Y-axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationZ(System.Single)">
            <summary>Creates a matrix for rotating points around the Z axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Z-axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationZ(System.Single,System.Numerics.Vector3)">
            <summary>Creates a matrix for rotating points around the Z axis from a center point.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Z-axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single,System.Single,System.Single)">
            <summary>Creates a scaling matrix from the specified X, Y, and Z components.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <param name="zScale">The value to scale by on the Z axis.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
            <summary>Creates a scaling matrix that is offset by a given center point.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <param name="zScale">The value to scale by on the Z axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Numerics.Vector3)">
            <summary>Creates a scaling matrix from the specified vector scale.</summary>
            <param name="scales">The scale to use.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a scaling matrix with a center point.</summary>
            <param name="scales">The vector that contains the amount to scale on each axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single)">
            <summary>Creates a uniform scaling matrix that scale equally on each axis.</summary>
            <param name="scale">The uniform scaling factor.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateScale(System.Single,System.Numerics.Vector3)">
            <summary>Creates a uniform scaling matrix that scales equally on each axis with a center point.</summary>
            <param name="scale">The uniform scaling factor.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
            <summary>
                Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light
                source.
            </summary>
            <param name="lightDirection">The direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateTranslation(System.Numerics.Vector3)">
            <summary>Creates a translation matrix from the specified 3-dimensional vector.</summary>
            <param name="position">The amount to translate in each axis.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>Creates a translation matrix from the specified X, Y, and Z components.</summary>
            <param name="xPosition">The amount to translate on the X axis.</param>
            <param name="yPosition">The amount to translate on the Y axis.</param>
            <param name="zPosition">The amount to translate on the Z axis.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Creates a world matrix with the specified parameters.</summary>
            <param name="position">The position of the object.</param>
            <param name="forward">The forward direction of the object.</param>
            <param name="up">The upward direction of the object. Its value is usually <c>[0, 1, 0]</c>.</param>
            <returns>The world matrix.</returns>
            <remarks><paramref name="position" /> is used in translation operations.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Negate(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Subtract(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>
                The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from
                its corresponding element in <paramref name="value1" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Transform(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,System.Numerics.Quaternion)">
            <summary>Transforms the specified matrix by applying the specified Quaternion rotation.</summary>
            <param name="value">The matrix to transform.</param>
            <param name="rotation">The rotation t apply.</param>
            <returns>The transformed matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> object and the corresponding elements of each matrix are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Equals(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether this instance and another 4x4 matrix are equal.</summary>
            <param name="other">The other matrix.</param>
            <returns><see langword="true" /> if the two matrices are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.GetDeterminant">
            <summary>Calculates the determinant of the current 4x4 matrix.</summary>
            <returns>The determinant.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.ToString">
            <summary>Returns a string that represents this matrix.</summary>
            <returns>The string representation of this matrix.</returns>
            <remarks>
                The numeric values in the returned string are formatted by using the conventions of the current culture. For
                example, for the en-US culture, the returned string might appear as
                <c>
                    { {M11:1.1 M12:1.2 M13:1.3 M14:1.4} {M21:2.1 M22:2.2 M23:2.3 M24:2.4} {M31:3.1 M32:3.2 M33:3.3 M34:3.4}
                    {M41:4.1
                    M42:4.2 M43:4.3 M44:4.4} }
                </c>
                .
            </remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis">
            <summary>
                The vector basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis.Element0">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis.Element1">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.VectorBasis.Element2">
            <summary>
                The element
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix2X2F">
            <summary>
                A 2-by-2 matrix. Stored in column-major order.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ex">
            <summary>
                The col
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ey">
            <summary>
                The col
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Construct this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct this matrix using scalars.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single)">
            <summary>
                Construct this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Initialize this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(System.Single)">
            <summary>
                Initialize this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetIdentity">
            <summary>
                Set this to the identity matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetZero">
            <summary>
                Set this matrix to all zeros.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetAngle">
            <summary>
                Extract the angle from this matrix (assumed to be a rotation matrix).
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetInverse">
            <summary>
                Compute the inverse of this matrix, such that inv(A) * A = identity.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Solve(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient
                than computing the inverse in one-shot cases.
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Identity">
            <summary>
                Gets the value of the identity
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix2X2F,Alis.Core.Aspect.Math.Matrix.Matrix2X2F)">
            <summary>
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Inverse">
            <summary>
                Gets the value of the inverse
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> is a struct representing a glsl mat3 value
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ex">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ey">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ez">
            <summary>
                The ez
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Construct this matrix using columns.</summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="c3">The c3.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> from its components
            </summary>
            <remarks>
                Arguments are in row-major order
            </remarks>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.array">
            <summary>
                The array
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve33(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve22(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases. Solve only the upper 2-by-2 matrix equation.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetInverse22(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the inverse of this matrix as a 2-by-2.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetSymInverse33(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the symmetric inverse of this matrix as a 3-by-3.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Dot(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Dots the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Cross(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>
                Crosses the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The vector</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Rotation">
            <summary>Rotation</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Sine">
            Sine and cosine
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Cosine">
            Sine and cosine
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.#ctor(System.Single)">
            <summary>Initialize from an angle in radians</summary>
            <param name="angle">Angle in radians</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.Set(System.Single)">
            <summary>Set using an angle in radians.</summary>
            <param name="angle"></param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.SetIdentity">
            <summary>Set to the identity rotation</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetAngle">
            <summary>Get the angle in radians</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetXAxis">
            <summary>Get the x-axis</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetYAxis">
            <summary>Get the y-axis</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Transform">
            <summary>
                A transform contains translation and rotation. It is used to represent the position and orientation of rigid
                frames.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Position">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Scale">
            <summary>
                The scale
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Rotation">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Transform" /> class
            </summary>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="scale">The scale</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.SetIdentity">
            <summary>Set this to the identity transform.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.Set(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Set this based on the position and angle.</summary>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Constant">
            <summary>
                The math constants class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Euler">
            <summary>
                The euler
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.E">
            <summary>Represents the mathematical constant e(2.71828175).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log10E">
            <summary>Represents the log base ten of e(0.4342945).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log2E">
            <summary>Represents the log base two of e(1.442695).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Pi">
            <summary>Represents the value of pi(3.14159274).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver2">
            <summary>Represents the value of pi divided by two(1.57079637).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver4">
            <summary>Represents the value of pi divided by four(0.7853982).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.TwoPi">
            <summary>Represents the value of pi times two(6.28318548).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Tau">
            <summary>Represents the value of pi times two(6.28318548). This is an alias of TwoPi.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Helper">
            <summary>Contains commonly used precalculated values and mathematical operations.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two
                normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the
                coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the
                coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Single,System.Single,System.Single)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Distance(System.Single,System.Single)">
            <summary>Calculates the absolute value of the difference of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)">
            <summary>Linearly interpolates between two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>value1 + (value2 - value1) * amount</code>. Passing amount a value of 0 will cause value1 to be returned, a
                value
                of 1 will cause value2 to be returned. See <see cref="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)" /> for a less efficient version with
                more
                precision around edge cases.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)">
            <summary>
                Linearly interpolates between two values. This method is a less efficient, more precise version of
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" />. See remarks for more info.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>((1 - amount) * value1) + (value2 * amount)</code>. Passing amount a value of 0 will cause value1 to be
                returned,
                a value of 1 will cause value2 to be returned. This method does not have the floating point precision issue that
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> has. i.e. If there is a big gap between value1 and value2 in magnitude (e.g.
                value1=10000000000000000, value2=1), right at the edge of the interpolation range (amount=1),
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> will return 0 (whereas it should return 1). This also holds for value1=10^17,
                value2=10;
                value1=10^18,value2=10^2... so on. For an in depth explanation of the issue, see below references: Relevant
                Wikipedia
                Article: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support Relevant StackOverflow
                Answer:
                http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Single,System.Single)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Int32,System.Int32)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Single,System.Single)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Int32,System.Int32)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>Interpolates between two values using a cubic equation.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToDegrees(System.Single)">
            <summary>Converts radians to degrees.</summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = 180 / pi</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToRadians(System.Single)">
            <summary>Converts degrees to radians.</summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = pi / 180</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.WrapAngle(System.Single)">
            <summary>Reduces a given angle to a value between π and -π.</summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.IsPowerOfTwo(System.Int32)">
            <summary>Determines if value is powered by two.</summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> is a struct represent a glsl bvec2 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2B.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2F">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2F.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> object whose two elements have the same value.</summary>
            <param name="value">The value to assign to both elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.#ctor(System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y" /> field.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.#ctor(System.ReadOnlySpan{System.Single})">
            <summary>
                Constructs a vector from the given <see cref="T:System.ReadOnlySpan`1" />. The span must contain at least 2
                elements.
            </summary>
            <param name="values">The span of elements to assign to the vector.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.Zero">
            <summary>Returns a vector whose 2 elements are equal to zero.</summary>
            <value>A vector whose two elements are equal to zero (that is, it returns the vector <c>(0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.One">
            <summary>Gets a vector whose 2 elements are equal to one.</summary>
            <value>A vector whose two elements are equal to one (that is, it returns the vector <c>(1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.UnitX">
            <summary>Gets the vector (1,0).</summary>
            <value>The vector <c>(1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2F.UnitY">
            <summary>Gets the vector (0,1).</summary>
            <value>The vector <c>(0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Division(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Division(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> objects are equal if each value in <paramref name="left" /> is equal to the
                corresponding value in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)" /> method defines the subtraction operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2F)" /> method defines the unary negation operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Abs(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Add(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Clamp(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Distance(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Divide(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Divide(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Dot(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Lerp(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
            <remarks>
                <format type="text/markdown"><![CDATA[
            The behavior of this method changed in .NET 5.0. For more information, see [Behavior change for Vector2.Lerp and Vector4.Lerp](/dotnet/core/compatibility/3.1-5.0#behavior-change-for-vector2lerp-and-vector4lerp).
            ]]></format>
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Max(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Min(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Multiply(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Negate(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Normalize(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Reflect(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Subtract(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Transform(Alis.Core.Aspect.Math.Vector.Vector2F,System.Numerics.Matrix3x2)">
            <summary>Transforms a vector by a specified 3x2 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Transform(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Transform(Alis.Core.Aspect.Math.Vector.Vector2F,System.Numerics.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2F,System.Numerics.Matrix3x2)">
            <summary>Transforms a vector normal by the given 3x2 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least two elements. The method copies the vector's elements starting at
                index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the two vector elements. In
                other words, elements <paramref name="index" /> and <paramref name="index" /> + 1 must already exist in
                <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.CopyTo(System.Span{System.Single})">
            <summary>Copies the vector to the given <see cref="T:System.Span`1" />.The length of the destination span must be at least 2.</summary>
            <param name="destination">The destination span which the values are copied into.</param>
            <exception cref="T:System.ArgumentException">
                If number of elements in source vector is greater than those available in
                destination span.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.TryCopyTo(System.Span{System.Single})">
            <summary>
                Attempts to copy the vector to the given <see cref="T:System.Span`1" />. The length of the destination span must
                be at least 2.
            </summary>
            <param name="destination">The destination span which the values are copied into.</param>
            <returns>
                <see langword="true" /> if the source vector was successfully copied to <paramref name="destination" />.
                <see langword="false" /> if <paramref name="destination" /> is not large enough to hold the source vector.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2F" /> object and their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Equals(Alis.Core.Aspect.Math.Vector.Vector2F)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2F.Y" /> elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.Length">
            <summary>Returns the length of the vector.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2F.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2F.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Vector2i is an utility class for manipulating 2 dimensional
                vectors with integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; returns the opposite of a vector
            </summary>
            <param name="v">Vector to negate</param>
            <returns>-v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(System.Int32,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Division(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2F">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Vector2u is an utility class for manipulating 2 dimensional
                vectors with unsigned integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(System.UInt32,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Division(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2F">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> is a struct represent a glsl bvec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3B.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3F">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3F.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3F.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3F.Z">
            <summary>The Z component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> object whose three elements have the same value.</summary>
            <param name="value">The value to assign to all three elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(Alis.Core.Aspect.Math.Vector.Vector2F,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> class
            </summary>
            <param name="value">The value</param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(System.Single,System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Y" /> field.</param>
            <param name="z">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Z" /> field.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.#ctor(System.ReadOnlySpan{System.Single})">
            <summary>
                Constructs a vector from the given <see cref="T:System.ReadOnlySpan`1" />. The span must contain at least 3
                elements.
            </summary>
            <param name="values">The span of elements to assign to the vector.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.Zero">
            <summary>Gets a vector whose 3 elements are equal to zero.</summary>
            <value>A vector whose three elements are equal to zero (that is, it returns the vector <c>(0,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.One">
            <summary>Gets a vector whose 3 elements are equal to one.</summary>
            <value>A vector whose three elements are equal to one (that is, it returns the vector <c>(1,1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.UnitX">
            <summary>Gets the vector (1,0,0).</summary>
            <value>The vector <c>(1,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.UnitY">
            <summary>Gets the vector (0,1,0).</summary>
            <value>The vector <c>(0,1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3F.UnitZ">
            <summary>Gets the vector (0,0,1).</summary>
            <value>The vector <c>(0,0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Division(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Division(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Equality(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> objects are equal if each element in <paramref name="right" /> is equal to the
                corresponding element in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)" /> method defines the subtraction operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3F)" /> method defines the unary negation operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Abs(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Add(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Clamp(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Cross(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Computes the cross product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Distance(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Divide(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Divide(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Dot(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Lerp(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Max(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Min(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Multiply(Alis.Core.Aspect.Math.Vector.Vector3F,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Negate(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Normalize(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Reflect(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Subtract(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Transform(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Transform(Alis.Core.Aspect.Math.Vector.Vector3F,System.Numerics.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector3F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least three elements. The method copies the vector's elements starting
                at index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the three vector elements.
                In other words, elements <paramref name="index" />, <paramref name="index" /> + 1, and <paramref name="index" /> +
                2 must already exist in <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.CopyTo(System.Span{System.Single})">
            <summary>Copies the vector to the given <see cref="T:System.Span`1" />. The length of the destination span must be at least 3.</summary>
            <param name="destination">The destination span which the values are copied into.</param>
            <exception cref="T:System.ArgumentException">
                If number of elements in source vector is greater than those available in
                destination span.
            </exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.TryCopyTo(System.Span{System.Single})">
            <summary>
                Attempts to copy the vector to the given <see cref="T:System.Span`1" />. The length of the destination span must
                be at least 3.
            </summary>
            <param name="destination">The destination span which the values are copied into.</param>
            <returns>
                <see langword="true" /> if the source vector was successfully copied to <paramref name="destination" />.
                <see langword="false" /> if <paramref name="destination" /> is not large enough to hold the source vector.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3F" /> object and their corresponding elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Equals(Alis.Core.Aspect.Math.Vector.Vector3F)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>
                Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.X" />, <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Y" />, and
                <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3F.Z" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.Length">
            <summary>Returns the length of this vector object.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3F.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3F.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> is a struct represent a glsl ivec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> is a struct represent a glsl bvec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4B.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4F">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4F" /> is a struct represent a glsl vec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4F" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4F.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> is a struct represent a glsl ivec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4I.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.FastList`1">
            <summary>
            The fast list class
            </summary>
            <seealso cref="T:System.Collections.Generic.IList`1"/>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.FastList`1.items">
            <summary>
            The items
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.FastList`1.count">
            <summary>
            The count
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.#ctor">
            <summary>
            Initializes a new instance of the class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.FastList`1.Count">
            <summary>
            Gets the value of the count
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.FastList`1.IsReadOnly">
            <summary>
            Gets the value of the is read only
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.FastList`1.Item(System.Int32)">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.Add(`0)">
            <summary>
            Adds the item
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.Clear">
            <summary>
            Clears this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.Contains(`0)">
            <summary>
            Describes whether this instance contains
            </summary>
            <param name="item">The item</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the to using the specified array
            </summary>
            <param name="array">The array</param>
            <param name="arrayIndex">The array index</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.GetEnumerator">
            <summary>
            Gets the enumerator
            </summary>
            <returns>An enumerator of t</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.IndexOf(`0)">
            <summary>
            Indexes the of using the specified item
            </summary>
            <param name="item">The item</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the index
            </summary>
            <param name="index">The index</param>
            <param name="item">The item</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.ShiftRight(System.Int32,System.Int32)">
            <summary>
            Shifts the right using the specified start
            </summary>
            <param name="start">The start</param>
            <param name="shift">The shift</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.Remove(`0)">
            <summary>
            Describes whether this instance remove
            </summary>
            <param name="item">The item</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the at using the specified index
            </summary>
            <param name="index">The index</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.GetRefNativeArray">
            <summary>
            Gets the items
            </summary>
            <returns>The items</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.FastList`1.ForEach(System.Action{`0})">
            <summary>
            For the each using the specified action
            </summary>
            <param name="action">The action</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.RawArrayData">
            <summary>
            The raw array data class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.RawArrayData.Length">
            <summary>
            The length
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.RawArrayData.Padding">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.RawArrayData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.RawArrayData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Memory.RawArrayData"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.RawArrayData.#ctor(System.UInt32,System.UInt32,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Memory.RawArrayData"/> class
            </summary>
            <param name="length">The length</param>
            <param name="padding">The padding</param>
            <param name="data">The data</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream">
            <summary>
                Structure that contains InputStream callbacks
                (directly maps to a CSFML sfInputStream)
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.ReadCallbackType">
            <summary>
                Type of callback to read data from the current stream
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.SeekCallbackType">
            <summary>
                Type of callback to seek the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.TellCallbackType">
            <summary>
                Type of callback to return the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSizeCallbackType">
            <summary>
                Type of callback to return the current stream's size
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Read">
            <summary>
                Function that is called to read data from the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Seek">
            <summary>
                Function that is called to seek the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Tell">
            <summary>
                Function that is called to return the positon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSize">
            <summary>
                Function that is called to return the size
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor">
            <summary>
                Adapts a System.IO.Stream to be usable as a SFML InputStream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStream">
            <summary>
                The my input stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStreamPtr">
            <summary>
                The my input stream ptr
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.#ctor(System.IO.Stream)">
            <summary>
                Construct from a System.IO.Stream
            </summary>
            <param name="stream">Stream to adapt</param>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.InputStreamPtr">
            <summary>
                The pointer to the CSFML InputStream structure
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Read(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
                Called to read from the stream
            </summary>
            <param name="data">Where to copy the read bytes</param>
            <param name="size">Size to read, in bytes</param>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Seek(System.Int64,System.IntPtr)">
            <summary>
                Called to set the read position in the stream
            </summary>
            <param name="position">New read position</param>
            <param name="userData">User data -- unused</param>
            <returns>Actual position</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Tell(System.IntPtr)">
            <summary>
                Get the current read position in the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Current position in the stream</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.GetSize(System.IntPtr)">
            <summary>
                Called to get the total size of the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes in the stream</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Security.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Thread.ExampleClass">
            <summary>
                The example class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Time.TimeStep">
            <summary>This is an internal class.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTime">
            <summary>Time step (Delta time)</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTimeRatio">
            <summary>dt * inv_dt0</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTime">
            <summary>Inverse time step (0 if dt == 0).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTimeZero">
            <summary>
                The inverted delta time
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.PositionIterations">
            <summary>
                The position iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.VelocityIterations">
            <summary>
                The velocity iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.WarmStarting">
            <summary>
                The warm starting
            </summary>
        </member>
    </members>
</doc>
