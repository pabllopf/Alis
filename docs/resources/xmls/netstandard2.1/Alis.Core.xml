<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.Builder.Component.Audio.AudioSourceBuilder">
            <summary>
            The audio source builder class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Fluent.IBuild`1"/>
        </member>
        <member name="P:Alis.Core.Builder.Component.Audio.AudioSourceBuilder.AudioSource">
            <summary>
            Gets or sets the value of the audio source
            </summary>
        </member>
        <member name="M:Alis.Core.Builder.Component.Audio.AudioSourceBuilder.Build">
            <summary>
            Builds this instance
            </summary>
            <returns>The audio source</returns>
        </member>
        <member name="T:Alis.Core.Builder.Component.Render.SpriteBuilder">
            <summary>
            The sprite builder class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Fluent.IBuild`1"/>
        </member>
        <member name="F:Alis.Core.Builder.Component.Render.SpriteBuilder.sprite">
            <summary>
            The sprite
            </summary>
        </member>
        <member name="M:Alis.Core.Builder.Component.Render.SpriteBuilder.Build">
            <summary>
            Builds this instance
            </summary>
            <returns>The sprite</returns>
        </member>
        <member name="M:Alis.Core.Builder.Component.Render.SpriteBuilder.Depth(System.Int32)">
            <summary>
            Depths the value
            </summary>
            <param name="value">The value</param>
            <returns>The sprite builder</returns>
        </member>
        <member name="T:Alis.Core.Builder.Entity.GameObjectBuilder">
            <summary>
                The game object builder class
            </summary>
        </member>
        <member name="F:Alis.Core.Builder.Entity.GameObjectBuilder.gameObject">
            <summary>
                Gets or sets the value of the game object
            </summary>
        </member>
        <member name="M:Alis.Core.Builder.Entity.GameObjectBuilder.Add``1(Alis.Core.Component.ComponentBase)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The game object builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.GameObjectBuilder.Build">
            <summary>
                Builds this instance
            </summary>
            <returns>The game object</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.GameObjectBuilder.Name(System.String)">
            <summary>
                Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The game object builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.GameObjectBuilder.Transform(System.Func{Alis.Core.Builder.Entity.TransformBuilder,Alis.Core.Entity.Transform})">
            <summary>
            Transforms the value
            </summary>
            <param name="value">The value</param>
            <returns>The game object builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.GameObjectBuilder.Add``1(System.Func{Alis.Core.Builder.Component.Render.SpriteBuilder,Alis.Core.Component.Render.Sprite})">
            <summary>
            Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The game object builder</returns>
        </member>
        <member name="T:Alis.Core.Builder.Entity.SceneBuilder">
            <summary>
            The scene builder class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Fluent.IBuild`1"/>
        </member>
        <member name="P:Alis.Core.Builder.Entity.SceneBuilder.Scene">
            <summary>
            Gets the value of the scene
            </summary>
        </member>
        <member name="M:Alis.Core.Builder.Entity.SceneBuilder.Name(System.String)">
            <summary>
            Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The scene builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.SceneBuilder.Add``1(System.Func{Alis.Core.Builder.Entity.GameObjectBuilder,Alis.Core.Entity.GameObject})">
            <summary>
            Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The scene builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.SceneBuilder.Build">
            <summary>
            Builds this instance
            </summary>
            <returns>The scene</returns>
        </member>
        <member name="T:Alis.Core.Builder.Entity.TransformBuilder">
            <summary>
            The transform builder class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Fluent.IBuild`1"/>
        </member>
        <member name="F:Alis.Core.Builder.Entity.TransformBuilder.transform">
            <summary>
            The transform
            </summary>
        </member>
        <member name="M:Alis.Core.Builder.Entity.TransformBuilder.Build">
            <summary>
            Builds this instance
            </summary>
            <returns>The transform</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.TransformBuilder.Position(System.Single,System.Single)">
            <summary>
            Positions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The transform builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.TransformBuilder.Rotation(System.Single)">
            <summary>
            Rotations the angle
            </summary>
            <param name="angle">The angle</param>
            <returns>The transform builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Entity.TransformBuilder.Scale(System.Single,System.Single)">
            <summary>
            Scales the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The transform builder</returns>
        </member>
        <member name="T:Alis.Core.Builder.Manager.SceneManagerBuilder">
            <summary>
            The scene manager builder class
            </summary>
        </member>
        <member name="P:Alis.Core.Builder.Manager.SceneManagerBuilder.SceneManager">
            <summary>
            Gets the value of the scene manager
            </summary>
        </member>
        <member name="M:Alis.Core.Builder.Manager.SceneManagerBuilder.Add``1(System.Func{Alis.Core.Builder.Entity.SceneBuilder,Alis.Core.Entity.Scene})">
            <summary>
            Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The scene builder</returns>
        </member>
        <member name="M:Alis.Core.Builder.Manager.SceneManagerBuilder.Build">
            <summary>
            Builds this instance
            </summary>
            <returns>The scene manager</returns>
        </member>
        <member name="T:Alis.Core.Component.Audio.AudioClip">
            <summary>
                The audio clip class
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Audio.AudioSource">
            <summary>
                The audio source class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="F:Alis.Core.Component.Audio.AudioSource.AudioClip">
            <summary>
            The audio clip
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Audio.AudioSource.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Audio.AudioSource.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Body.BodyBase">
            <summary>
                The physical body class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="M:Alis.Core.Component.Body.BodyBase.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Body.BodyBase.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Collider.BoxCollider">
            <summary>
                The box collider class
            </summary>
            <seealso cref="T:Alis.Core.Component.Collider.ColliderBase" />
        </member>
        <member name="M:Alis.Core.Component.Collider.BoxCollider.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Collider.BoxCollider.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Collider.CircleCollider">
            <summary>
                The circle collider class
            </summary>
            <seealso cref="T:Alis.Core.Component.Collider.ColliderBase" />
        </member>
        <member name="M:Alis.Core.Component.Collider.CircleCollider.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Collider.CircleCollider.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Collider.ColliderBase">
            <summary>
                The collider class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="T:Alis.Core.Component.ComponentBase">
            <summary>Define a general component.</summary>
        </member>
        <member name="P:Alis.Core.Component.ComponentBase.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="P:Alis.Core.Component.ComponentBase.Destroyed">
            <summary>
                Gets or sets the value of the destroyed
            </summary>
        </member>
        <member name="P:Alis.Core.Component.ComponentBase.GameObject">
            <summary>
                Gets or sets the value of the game object
            </summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.AttachTo(Alis.Core.Entity.GameObject)">
            <summary>
                Attaches the to using the specified game object
            </summary>
            <param name="gameObject">The game object</param>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.OnDestroy">
            <summary>
                Ons the destroy
            </summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Enable">
            <summary>Enables this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Disable">
            <summary>Disables this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Awake">
            <summary>Awakes this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Start">
            <summary>Starts this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.BeforeUpdate">
            <summary>Befores the update.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.AfterUpdate">
            <summary>Afters the update.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.FixedUpdate">
            <summary>Fixeds the update.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Stop">
            <summary>Stops this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Reset">
            <summary>Resets this instance.</summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Destroy">
            <summary>
                Destroys this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.OnPressKey(System.String)">
            <summary>
                Ons the press key using the specified key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.OnPressDownKey(System.String)">
            <summary>
                Ons the press down key using the specified key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.OnReleaseKey(System.String)">
            <summary>
                Ons the release key using the specified key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:Alis.Core.Component.ComponentBase.Exit">
            <summary>Exits this instance.</summary>
        </member>
        <member name="T:Alis.Core.Component.Light.AreaLight">
            <summary>
                The area light class
            </summary>
            <seealso cref="T:Alis.Core.Component.Light.LightBase" />
        </member>
        <member name="M:Alis.Core.Component.Light.AreaLight.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Light.AreaLight.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Light.DirectionalLight">
            <summary>
                The directional light class
            </summary>
            <seealso cref="T:Alis.Core.Component.Light.LightBase" />
        </member>
        <member name="M:Alis.Core.Component.Light.DirectionalLight.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Light.DirectionalLight.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Light.LightBase">
            <summary>
                The light class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="T:Alis.Core.Component.Light.PointLight">
            <summary>
                The point light class
            </summary>
            <seealso cref="T:Alis.Core.Component.Light.LightBase" />
        </member>
        <member name="M:Alis.Core.Component.Light.PointLight.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Light.PointLight.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Light.SpotLight">
            <summary>
                The spot light class
            </summary>
            <seealso cref="T:Alis.Core.Component.Light.LightBase" />
        </member>
        <member name="M:Alis.Core.Component.Light.SpotLight.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Light.SpotLight.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Mesh.BoxMesh">
            <summary>
                The cube mesh class
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Mesh.BoxMesh.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Mesh.BoxMesh.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Mesh.CircleMesh">
            <summary>
                The sphere mesh class
            </summary>
            <seealso cref="T:Alis.Core.Component.Mesh.MeshBase" />
        </member>
        <member name="M:Alis.Core.Component.Mesh.CircleMesh.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Mesh.CircleMesh.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Mesh.MeshBase">
            <summary>
                The mesh class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="T:Alis.Core.Component.Particle.ParticleBase">
            <summary>
                The particle class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="M:Alis.Core.Component.Particle.ParticleBase.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Particle.ParticleBase.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Alis.Core.Component.Render.Animation">
            <summary>
                The animation class
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Render.Animator">
            <summary>
                The animator class
            </summary>
        </member>
        <member name="F:Alis.Core.Component.Render.Animator.Animations">
            <summary>
            animations
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.Animator.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.Animator.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Render.Camera">
            <summary>
                The camera class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="M:Alis.Core.Component.Render.Camera.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.Camera.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Render.Image">
            <summary>
                The image class
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Render.RenderBase">
            <summary>
            The render base class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase"/>
        </member>
        <member name="M:Alis.Core.Component.Render.RenderBase.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.RenderBase.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Component.Render.Sprite">
            <summary>
                The sprite class
            </summary>
            <seealso cref="T:Alis.Core.Component.ComponentBase" />
        </member>
        <member name="P:Alis.Core.Component.Render.Sprite.Depth">
            <summary>
                The level
            </summary>
        </member>
        <member name="F:Alis.Core.Component.Render.Sprite.sprite">
            <summary>
                The sprite
            </summary>
        </member>
        <member name="F:Alis.Core.Component.Render.Sprite.texturePath">
            <summary>
                The texture path
            </summary>
        </member>
        <member name="F:Alis.Core.Component.Render.Sprite.Image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Alis.Core.Component.Render.Sprite.size">
            <summary>
            The size
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.Sprite.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.Sprite.Awake">
            <summary>
            Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Component.Render.Sprite.Start">
            <summary>
                Starts this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Render.Sprite.Update">
            <summary>
                Updates this instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Alis.Core.Component.Render.Sprite.Exit">
            <summary>
            Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Entity.GameObject">
            <summary>Represent a object of the game.</summary>
        </member>
        <member name="F:Alis.Core.Entity.GameObject.Transform">
            <summary>
            The transform
            </summary>
        </member>
        <member name="F:Alis.Core.Entity.GameObject.components">
            <summary>
            The components
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Entity.GameObject"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Add(Alis.Core.Component.ComponentBase)">
            <summary>
            Adds the component
            </summary>
            <param name="component">The component</param>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Remove(Alis.Core.Component.ComponentBase)">
            <summary>
            Removes the component
            </summary>
            <param name="component">The component</param>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Builder">
            <summary>
            Builders this instance
            </summary>
            <returns>The game object builder</returns>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Awake">
            <summary>Awakes this instance.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Start">
            <summary>Starts this instance.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.BeforeUpdate">
            <summary>Befores the update.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.AfterUpdate">
            <summary>Afters the update.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.FixedUpdate">
            <summary>Afters the update.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.DispatchEvents">
            <summary>
                Dispatches the events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Stop">
            <summary>Stops this instance.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Reset">
            <summary>Resets this instance.</summary>
        </member>
        <member name="M:Alis.Core.Entity.GameObject.Exit">
            <summary>Exits this instance.</summary>
        </member>
        <member name="T:Alis.Core.Entity.Scene">
            <summary>
                The scene class
            </summary>
        </member>
        <member name="F:Alis.Core.Entity.Scene.gameObjects">
            <summary>
            The game objects
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Entity.Scene"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.BeforeUpdate">
            <summary>
                Before run the update
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.FixedUpdate">
            <summary>
                Update every frame.
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Entity.Scene.Add(Alis.Core.Entity.GameObject)">
            <summary>
            Adds the game object
            </summary>
            <param name="gameObject">The game object</param>
        </member>
        <member name="T:Alis.Core.Entity.Transform">
            <summary>Control the object space in the game.</summary>
        </member>
        <member name="P:Alis.Core.Entity.Transform.Position">
            <summary>
            The position
            </summary>
        </member>
        <member name="P:Alis.Core.Entity.Transform.Rotation">
            <summary>
            The rotation
            </summary>
        </member>
        <member name="P:Alis.Core.Entity.Transform.Scale">
            <summary>
            The scale
            </summary>
        </member>
        <member name="T:Alis.Core.Exceptions.ComponentDontExits">
            <summary>
                The component dont exits class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.ComponentInstancieIsTheSame">
            <summary>
                The component instancie is the same class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.ComponentTypeAlredyExist">
            <summary>
                The component type alredy exist class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.GameObjectIsFull">
            <summary>
                The game object is full class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.IndexOutOfBounds">
            <summary>
                The index out of bounds class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.LimitOfComponents">
            <summary>
                The limit of components class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.MaxSceneGame">
            <summary>
                The max scene game class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.Exceptions.NullArgumentException">
            <summary>
                The null argument exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Alis.Core.GameBase">
            <summary>
            Define a game.
            </summary>
        </member>
        <member name="F:Alis.Core.GameBase.IsRunning">
            <summary>
            Active game
            </summary>
        </member>
        <member name="P:Alis.Core.GameBase.Setting">
            <summary>
            Gets the value of the setting
            </summary>
        </member>
        <member name="F:Alis.Core.GameBase.timeManager">
            <summary>
            The time manager
            </summary>
        </member>
        <member name="F:Alis.Core.GameBase.Managers">
            <summary>
            The manager base
            </summary>
        </member>
        <member name="M:Alis.Core.GameBase.Run">
            <summary>
            Run program
            </summary>
        </member>
        <member name="M:Alis.Core.GameBase.FindManager``1">
            <summary>
            Gets the manager using the specified type
            </summary>
            <typeparam name="T">The </typeparam>
            <returns>The manager base</returns>
        </member>
        <member name="M:Alis.Core.GameBase.SetManager``1(``0)">
            <summary>
            Sets the manager using the specified manager
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="manager">The manager</param>
        </member>
        <member name="T:Alis.Core.Manager.AudioManager">
            <summary>
            The audio manager class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase"/>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.AfterUpdate">
            <summary>
            Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Awake">
            <summary>
            Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.BeforeUpdate">
            <summary>
            Befores the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.DispatchEvents">
            <summary>
            Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Exit">
            <summary>
            Exits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.FixedUpdate">
            <summary>
            Fixeds the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Reset">
            <summary>
            Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Stop">
            <summary>
            Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.AudioManager.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.GraphicManager">
            <summary>
            The graphic manager class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase"/>
        </member>
        <member name="F:Alis.Core.Manager.GraphicManager.renderWindow">
            <summary>
            The renderWindow
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.GraphicManager.Sprites">
            <summary>
            Gets or sets the value of the sprites
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Awake">
            <summary>
            Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.BeforeUpdate">
            <summary>
            Befores the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.AfterUpdate">
            <summary>
            Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.DispatchEvents">
            <summary>
            Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.FixedUpdate">
            <summary>
            Fixeds the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Reset">
            <summary>
            Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Stop">
            <summary>
            Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Exit">
            <summary>
            Exits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.RenderWindowOnClosed(System.Object,System.EventArgs)">
            <summary>
            Windows the on closed using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.Attach(Alis.Core.Component.Render.Sprite)">
            <summary>
            Attaches the sprite
            </summary>
            <param name="sprite">The sprite</param>
        </member>
        <member name="M:Alis.Core.Manager.GraphicManager.UnAttach(Alis.Core.Component.Render.Sprite)">
            <summary>
            Uns the attach using the specified sprite
            </summary>
            <param name="sprite">The sprite</param>
        </member>
        <member name="T:Alis.Core.Manager.ManagerBase">
            <summary>
            Manager base
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Awake">
            <summary>Awakes this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Start">
            <summary>Starts this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.BeforeUpdate">
            <summary>Befores the update.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.AfterUpdate">
            <summary>Afters the update.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.FixedUpdate">
            <summary>Fixeds the update.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.DispatchEvents">
            <summary>Dispatches the events.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Reset">
            <summary>Resets this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Stop">
            <summary>Stops this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Exit">
            <summary>Exits this instance.</summary>
        </member>
        <member name="T:Alis.Core.Manager.PhysicManager">
            <summary>
            The physic manager class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase"/>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.AfterUpdate">
            <summary>
            Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Awake">
            <summary>
            Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.BeforeUpdate">
            <summary>
            Befores the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.DispatchEvents">
            <summary>
            Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Exit">
            <summary>
            Exits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.FixedUpdate">
            <summary>
            Fixeds the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Reset">
            <summary>
            Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Stop">
            <summary>
            Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.PhysicManager.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.SceneManager">
            <summary>
            Scene manager
            </summary>
        </member>
        <member name="F:Alis.Core.Manager.SceneManager.scenes">
            <summary>
            Scene list
            </summary>
        </member>
        <member name="F:Alis.Core.Manager.SceneManager.currentScene">
            <summary>
            The current scene
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Manager.SceneManager"/> class
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Awake">
            <summary>
            Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.BeforeUpdate">
            <summary>
            Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.AfterUpdate">
            <summary>
            Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.DispatchEvents">
            <summary>
            Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.FixedUpdate">
            <summary>
            Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Reset">
            <summary>
            Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Stop">
            <summary>
            Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Exit">
            <summary>
            Exits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.SceneManager.Add(Alis.Core.Entity.Scene)">
            <summary>
            Adds the scene
            </summary>
            <param name="scene">The scene</param>
        </member>
        <member name="T:Alis.Core.Manager.TimeManager">
            <summary>
            The time manager class
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Manager.TimeManager"/> class
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.Timer">
            <summary>
                Gets the value of the timer
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.FixedTime">
            <summary>
                Gets or sets the value of the fixed time
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.TimeScale">
            <summary>
                Gets or sets the value of the time scale
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.FrameCount">
            <summary>
                Gets or sets the value of the frame count
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.CurrentFrame">
            <summary>
                Gets or sets the value of the current frame
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.FixedDeltaTime">
            <summary>
                Gets or sets the value of the fixed delta time
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.MaximumFramesPerSecond">
            <summary>
                Gets or sets the value of the maximum frames per second
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.TimeStep">
            <summary>
                Gets or sets the value of the time step
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.TimeManager.MaximunAllowedTimeStep">
            <summary>
                Gets or sets the value of the maximun allowed time step
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.SyncFixedDeltaTime">
            <summary>
                Syncs the fixed delta time
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.IsNewFrame">
            <summary>
                Describes whether this instance is new frame
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.UpdateTimeStep">
            <summary>
                Updates the time step
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.CounterFrames">
            <summary>
                Counters the frames
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.UpdateFixedTime">
            <summary>
                Updates the fixed time
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Init">
            <summary>
            Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Awake">
            <summary>
            Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Start">
            <summary>
            Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.BeforeUpdate">
            <summary>
            Befores the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Update">
            <summary>
            Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.AfterUpdate">
            <summary>
            Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.FixedUpdate">
            <summary>
            Fixeds the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.DispatchEvents">
            <summary>
            Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Reset">
            <summary>
            Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Stop">
            <summary>
            Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.TimeManager.Exit">
            <summary>
            Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Setting.DebugSetting">
            <summary>
                The debug class
            </summary>
        </member>
        <member name="P:Alis.Core.Setting.DebugSetting.Level">
            <summary>
                The log level
            </summary>
        </member>
        <member name="T:Alis.Core.Setting.GeneralSetting">
            <summary>Define a </summary>
        </member>
        <member name="P:Alis.Core.Setting.GeneralSetting.GameName">
            <summary>
            Gets or sets the value of the game name
            </summary>
        </member>
        <member name="P:Alis.Core.Setting.GeneralSetting.Author">
            <summary>
            Gets or sets the value of the author
            </summary>
        </member>
        <member name="P:Alis.Core.Setting.GeneralSetting.Description">
            <summary>
            Gets or sets the value of the description
            </summary>
        </member>
        <member name="T:Alis.Core.Setting.SettingBase">
            <summary>
            The setting base class
            </summary>
        </member>
        <member name="P:Alis.Core.Setting.SettingBase.Debug">
            <summary>
                The debug
            </summary>
        </member>
        <member name="P:Alis.Core.Setting.SettingBase.General">
            <summary>
                The general
            </summary>
        </member>
    </members>
</doc>
