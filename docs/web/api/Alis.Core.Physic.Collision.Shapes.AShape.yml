### YamlMime:ApiPage
title: Class AShape
body:
- api1: Class AShape
  id: Alis_Core_Physic_Collision_Shapes_AShape
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L44
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape
    commentId: T:Alis.Core.Physic.Collision.Shapes.AShape
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Collision.Shapes
      url: Alis.Core.Physic.Collision.Shapes.html
  - name: Assembly
    value: Alis.dll
- markdown: >-
    A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation

    in World are created automatically when a Fixture is created. Shapes may encapsulate a one or more child shapes.

    A shape is 2D geometrical object, such as a circle or polygon.
- code: public abstract class AShape
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: AShape
    url: Alis.Core.Physic.Collision.Shapes.AShape.html
- h4: Derived
- list:
  - text: ChainShape
    url: Alis.Core.Physic.Collision.Shapes.ChainShape.html
  - text: CircleShape
    url: Alis.Core.Physic.Collision.Shapes.CircleShape.html
  - text: EdgeShape
    url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
  - text: PolygonShape
    url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: AShape(ShapeType, float, float)
  id: Alis_Core_Physic_Collision_Shapes_AShape__ctor_Alis_Core_Physic_Collision_Shapes_ShapeType_System_Single_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L72
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.#ctor(Alis.Core.Physic.Collision.Shapes.ShapeType,System.Single,System.Single)
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.#ctor(Alis.Core.Physic.Collision.Shapes.ShapeType,System.Single,System.Single)
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Collision.Shapes.AShape" data-throw-if-not-resolved="false"></xref> class
- code: internal AShape(ShapeType type, float radius = 0, float density = 0)
- h4: Parameters
- parameters:
  - name: type
    type:
    - text: ShapeType
      url: Alis.Core.Physic.Collision.Shapes.ShapeType.html
    description: The type
  - name: radius
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The radius
    optional: true
  - name: density
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The density
    optional: true
- h2: Fields
- api3: DensityPrivate
  id: Alis_Core_Physic_Collision_Shapes_AShape_DensityPrivate
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L49
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.DensityPrivate
    commentId: F:Alis.Core.Physic.Collision.Shapes.AShape.DensityPrivate
- markdown: The density
- code: internal float DensityPrivate
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: MassDataPrivate
  id: Alis_Core_Physic_Collision_Shapes_AShape_MassDataPrivate
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L54
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.MassDataPrivate
    commentId: F:Alis.Core.Physic.Collision.Shapes.AShape.MassDataPrivate
- markdown: The mass data
- code: internal MassData MassDataPrivate
- h4: Field Value
- parameters:
  - type:
    - text: MassData
      url: Alis.Core.Physic.Collision.Shapes.MassData.html
- api3: RadiusPrivate
  id: Alis_Core_Physic_Collision_Shapes_AShape_RadiusPrivate
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L59
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.RadiusPrivate
    commentId: F:Alis.Core.Physic.Collision.Shapes.AShape.RadiusPrivate
- markdown: The radius
- code: internal float RadiusPrivate
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: ShapeTypePrivate
  id: Alis_Core_Physic_Collision_Shapes_AShape_ShapeTypePrivate
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L64
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.ShapeTypePrivate
    commentId: F:Alis.Core.Physic.Collision.Shapes.AShape.ShapeTypePrivate
- markdown: The shape type
- code: internal ShapeType ShapeTypePrivate
- h4: Field Value
- parameters:
  - type:
    - text: ShapeType
      url: Alis.Core.Physic.Collision.Shapes.ShapeType.html
- h2: Properties
- api3: ChildCount
  id: Alis_Core_Physic_Collision_Shapes_AShape_ChildCount
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L88
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.ChildCount
    commentId: P:Alis.Core.Physic.Collision.Shapes.AShape.ChildCount
- markdown: Get the number of child primitives.
- code: public abstract int ChildCount { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Density
  id: Alis_Core_Physic_Collision_Shapes_AShape_Density
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L109
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.Density
    commentId: P:Alis.Core.Physic.Collision.Shapes.AShape.Density
- markdown: Gets or sets the density. Changing the density causes a recalculation of shape properties.
- code: public float Density { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: Radius
  id: Alis_Core_Physic_Collision_Shapes_AShape_Radius
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L91
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.Radius
    commentId: P:Alis.Core.Physic.Collision.Shapes.AShape.Radius
- markdown: Radius of the Shape Changing the radius causes a recalculation of shape properties.
- code: public float Radius { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: ShapeType
  id: Alis_Core_Physic_Collision_Shapes_AShape_ShapeType
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L85
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.ShapeType
    commentId: P:Alis.Core.Physic.Collision.Shapes.AShape.ShapeType
- markdown: Get the type of this shape.
- code: public ShapeType ShapeType { get; }
- h4: Property Value
- parameters:
  - type:
    - text: ShapeType
      url: Alis.Core.Physic.Collision.Shapes.ShapeType.html
- h2: Methods
- api3: Clone()
  id: Alis_Core_Physic_Collision_Shapes_AShape_Clone
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L138
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.Clone
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.Clone
- markdown: Clone the concrete shape
- code: public abstract AShape Clone()
- h4: Returns
- parameters:
  - type:
    - text: AShape
      url: Alis.Core.Physic.Collision.Shapes.AShape.html
    description: A clone of the shape
- api3: ComputeAabb(ref Transform, int, out Aabb)
  id: Alis_Core_Physic_Collision_Shapes_AShape_ComputeAabb_Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Shared_Aabb__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L159
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)
- markdown: Given a transform, compute the associated axis aligned bounding box for a child shape.
- code: public abstract void ComputeAabb(ref Transform transform, int childIndex, out Aabb aabb)
- h4: Parameters
- parameters:
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The world transform of the shape.
  - name: childIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The child shape index.
  - name: aabb
    type:
    - text: Aabb
      url: Alis.Core.Physic.Shared.Aabb.html
    description: The AABB results.
- api3: ComputeProperties()
  id: Alis_Core_Physic_Collision_Shapes_AShape_ComputeProperties
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L165
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.ComputeProperties
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.ComputeProperties
- markdown: >-
    Compute the mass properties of this shape using its dimensions and density. The inertia tensor is computed

    about the local origin, not the centroid.
- code: internal virtual void ComputeProperties()
- api3: GetMassData(out MassData)
  id: Alis_Core_Physic_Collision_Shapes_AShape_GetMassData_Alis_Core_Physic_Collision_Shapes_MassData__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L131
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.GetMassData(Alis.Core.Physic.Collision.Shapes.MassData@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.GetMassData(Alis.Core.Physic.Collision.Shapes.MassData@)
- markdown: >-
    Contains the properties of the shape such as:

    - Area of the shape

    - Centroid

    - Inertia

    - Mass
- code: public void GetMassData(out MassData massData)
- h4: Parameters
- parameters:
  - name: massData
    type:
    - text: MassData
      url: Alis.Core.Physic.Collision.Shapes.MassData.html
- api3: RayCast(ref RayCastInput, ref Transform, int, out RayCastOutput)
  id: Alis_Core_Physic_Collision_Shapes_AShape_RayCast_Alis_Core_Physic_Collision_RayCast_RayCastInput__Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Collision_RayCast_RayCastOutput__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L152
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)
- markdown: Cast a ray against a child shape.
- code: public abstract bool RayCast(ref RayCastInput input, ref Transform transform, int childIndex, out RayCastOutput output)
- h4: Parameters
- parameters:
  - name: input
    type:
    - text: RayCastInput
      url: Alis.Core.Physic.Collision.RayCast.RayCastInput.html
    description: The ray-cast input parameters.
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform to be applied to the shape.
  - name: childIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The child shape index.
  - name: output
    type:
    - text: RayCastOutput
      url: Alis.Core.Physic.Collision.RayCast.RayCastOutput.html
    description: The ray-cast results.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: True if the ray-cast hits the shape
- api3: TestPoint(ref Transform, ref Vector2)
  id: Alis_Core_Physic_Collision_Shapes_AShape_TestPoint_Alis_Core_Aspect_Math_Transform__Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/AShape.cs#L144
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.AShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.AShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: 'Test a point for containment in this shape. Note: This only works for convex shapes.'
- code: public abstract bool TestPoint(ref Transform transform, ref Vector2 point)
- h4: Parameters
- parameters:
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The shape world transform.
  - name: point
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: A point in world coordinates.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: True if the point is inside the shape
languageId: csharp
metadata:
  description: >-
    A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation

    in World are created automatically when a Fixture is created. Shapes may encapsulate a one or more child shapes.

    A shape is 2D geometrical object, such as a circle or polygon.
