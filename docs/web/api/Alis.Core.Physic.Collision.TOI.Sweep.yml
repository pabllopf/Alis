### YamlMime:ApiPage
title: Class Sweep
body:
- api1: Class Sweep
  id: Alis_Core_Physic_Collision_TOI_Sweep
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L44
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep
    commentId: T:Alis.Core.Physic.Collision.TOI.Sweep
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Collision.TOI
      url: Alis.Core.Physic.Collision.TOI.html
  - name: Assembly
    value: Alis.dll
- markdown: >-
    This describes the motion of a body/shape for TOI computation. Shapes are defined with respect to the body

    origin, which may no coincide with the center of mass. However, to support dynamics we must interpolate the center

    of

    mass position.
- code: public class Sweep
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Sweep
    url: Alis.Core.Physic.Collision.TOI.Sweep.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Fields
- api3: A
  id: Alis_Core_Physic_Collision_TOI_Sweep_A
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L47
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.A
    commentId: F:Alis.Core.Physic.Collision.TOI.Sweep.A
- markdown: World angles
- code: public float A
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: A0
  id: Alis_Core_Physic_Collision_TOI_Sweep_A0
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L53
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.A0
    commentId: F:Alis.Core.Physic.Collision.TOI.Sweep.A0
- markdown: The
- code: public float A0
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: Alpha0
  id: Alis_Core_Physic_Collision_TOI_Sweep_Alpha0
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L57
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.Alpha0
    commentId: F:Alis.Core.Physic.Collision.TOI.Sweep.Alpha0
- markdown: Fraction of the current time step in the range [0,1] c0 and a0 are the positions at alpha0.
- code: public float Alpha0
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: C
  id: Alis_Core_Physic_Collision_TOI_Sweep_C
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L61
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.C
    commentId: F:Alis.Core.Physic.Collision.TOI.Sweep.C
- markdown: Center world positions
- code: public Vector2 C
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: C0
  id: Alis_Core_Physic_Collision_TOI_Sweep_C0
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L67
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.C0
    commentId: F:Alis.Core.Physic.Collision.TOI.Sweep.C0
- markdown: The
- code: public Vector2 C0
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: LocalCenter
  id: Alis_Core_Physic_Collision_TOI_Sweep_LocalCenter
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L70
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.LocalCenter
    commentId: F:Alis.Core.Physic.Collision.TOI.Sweep.LocalCenter
- markdown: Local center of mass position
- code: public Vector2 LocalCenter
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- h2: Methods
- api3: Advance(float)
  id: Alis_Core_Physic_Collision_TOI_Sweep_Advance_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L94
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.Advance(System.Single)
    commentId: M:Alis.Core.Physic.Collision.TOI.Sweep.Advance(System.Single)
- markdown: Advance the sweep forward, yielding a new initial state.
- code: public void Advance(float alpha)
- h4: Parameters
- parameters:
  - name: alpha
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: new initial time
- api3: GetTransform(out Transform, float)
  id: Alis_Core_Physic_Collision_TOI_Sweep_GetTransform_Alis_Core_Aspect_Math_Transform__System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L76
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.GetTransform(Alis.Core.Aspect.Math.Transform@,System.Single)
    commentId: M:Alis.Core.Physic.Collision.TOI.Sweep.GetTransform(Alis.Core.Aspect.Math.Transform@,System.Single)
- markdown: Get the interpolated transform at a specific time.
- code: public void GetTransform(out Transform xfb, float beta)
- h4: Parameters
- parameters:
  - name: xfb
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform.
  - name: beta
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: beta is a factor in [0,1], where 0 indicates alpha0.
- api3: Normalize()
  id: Alis_Core_Physic_Collision_TOI_Sweep_Normalize
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/TOI/Sweep.cs#L104
  metadata:
    uid: Alis.Core.Physic.Collision.TOI.Sweep.Normalize
    commentId: M:Alis.Core.Physic.Collision.TOI.Sweep.Normalize
- markdown: Normalize the angles.
- code: public void Normalize()
languageId: csharp
metadata:
  description: >-
    This describes the motion of a body/shape for TOI computation. Shapes are defined with respect to the body

    origin, which may no coincide with the center of mass. However, to support dynamics we must interpolate the center

    of

    mass position.
