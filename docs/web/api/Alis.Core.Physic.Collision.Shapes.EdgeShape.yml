### YamlMime:ApiPage
title: Class EdgeShape
body:
- api1: Class EdgeShape
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L42
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape
    commentId: T:Alis.Core.Physic.Collision.Shapes.EdgeShape
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Collision.Shapes
      url: Alis.Core.Physic.Collision.Shapes.html
  - name: Assembly
    value: Alis.dll
- markdown: >-
    A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. Edges created

    independently are two-sided and do no provide smooth movement across junctions.
- code: 'public class EdgeShape : AShape'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: AShape
    url: Alis.Core.Physic.Collision.Shapes.AShape.html
  - text: EdgeShape
    url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
- h4: Inherited Members
- list:
  - text: AShape.DensityPrivate
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_DensityPrivate
  - text: AShape.MassDataPrivate
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_MassDataPrivate
  - text: AShape.RadiusPrivate
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_RadiusPrivate
  - text: AShape.ShapeTypePrivate
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ShapeTypePrivate
  - text: AShape.ShapeType
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ShapeType
  - text: AShape.ChildCount
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ChildCount
  - text: AShape.Radius
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_Radius
  - text: AShape.Density
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_Density
  - text: AShape.GetMassData(out MassData)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_GetMassData_Alis_Core_Physic_Collision_Shapes_MassData__
  - text: AShape.Clone()
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_Clone
  - text: AShape.TestPoint(ref Transform, ref Vector2)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_TestPoint_Alis_Core_Aspect_Math_Transform__Alis_Core_Aspect_Math_Vector_Vector2__
  - text: AShape.RayCast(ref RayCastInput, ref Transform, int, out RayCastOutput)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_RayCast_Alis_Core_Physic_Collision_RayCast_RayCastInput__Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Collision_RayCast_RayCastOutput__
  - text: AShape.ComputeAabb(ref Transform, int, out Aabb)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ComputeAabb_Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Shared_Aabb__
  - text: AShape.ComputeProperties()
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ComputeProperties
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: EdgeShape(Vector2, Vector2)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape__ctor_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L57
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Create a new EdgeShape with the specified start and end. This edge supports two-sided collision.
- code: public EdgeShape(Vector2 start, Vector2 end)
- h4: Parameters
- parameters:
  - name: start
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The start of the edge.
  - name: end
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The end of the edge.
- api3: EdgeShape(Vector2, Vector2, Vector2, Vector2)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape__ctor_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L63
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Create a new EdgeShape with ghost vertices for smooth collision. This edge only supports one-sided collision.
- code: public EdgeShape(Vector2 v0, Vector2 v1, Vector2 v2, Vector2 v3)
- h4: Parameters
- parameters:
  - name: v0
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
  - name: v1
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
  - name: v2
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
  - name: v3
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: EdgeShape()
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape__ctor
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L71
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Collision.Shapes.EdgeShape" data-throw-if-not-resolved="false"></xref> class
- code: public EdgeShape()
- h2: Fields
- api3: vertex1
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_vertex1
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L47
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex1
    commentId: F:Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex1
- markdown: The vertex
- code: private Vector2 vertex1
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: vertex2
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_vertex2
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L52
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex2
    commentId: F:Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex2
- markdown: The vertex
- code: private Vector2 vertex2
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- h2: Properties
- api3: ChildCount
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_ChildCount
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L78
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.ChildCount
    commentId: P:Alis.Core.Physic.Collision.Shapes.EdgeShape.ChildCount
- markdown: Gets the value of the child count
- code: public override int ChildCount { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: OneSided
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_OneSided
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L81
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.OneSided
    commentId: P:Alis.Core.Physic.Collision.Shapes.EdgeShape.OneSided
- markdown: Is true if the edge is connected to an adjacent vertex before vertex 1.
- code: public bool OneSided { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: Vertex0
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_Vertex0
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L84
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex0
    commentId: P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex0
- markdown: Optional adjacent vertices. These are used for smooth collision.
- code: public Vector2 Vertex0 { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: Vertex1
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_Vertex1
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L90
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex1
    commentId: P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex1
- markdown: These are the edge vertices
- code: public Vector2 Vertex1 { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: Vertex2
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_Vertex2
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L101
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex2
    commentId: P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex2
- markdown: These are the edge vertices
- code: public Vector2 Vertex2 { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: Vertex3
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_Vertex3
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L87
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex3
    commentId: P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex3
- markdown: Optional adjacent vertices. These are used for smooth collision.
- code: public Vector2 Vertex3 { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- h2: Methods
- api3: Clone()
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_Clone
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L187
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.Clone
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.Clone
- markdown: Clones this instance
- code: public override AShape Clone()
- h4: Returns
- parameters:
  - type:
    - text: AShape
      url: Alis.Core.Physic.Collision.Shapes.AShape.html
    description: The clone
- api3: ComputeAabb(ref Transform, int, out Aabb)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_ComputeAabb_Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Shared_Aabb__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L170
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)
- markdown: Computes the aabb using the specified transform
- code: public override void ComputeAabb(ref Transform transform, int childIndex, out Aabb aabb)
- h4: Parameters
- parameters:
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform
  - name: childIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The child index
  - name: aabb
    type:
    - text: Aabb
      url: Alis.Core.Physic.Shared.Aabb.html
    description: The aabb
- api3: ComputeProperties()
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_ComputeProperties
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L178
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.ComputeProperties
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.ComputeProperties
- markdown: Computes the properties
- code: internal override sealed void ComputeProperties()
- api3: RayCast(ref RayCastInput, ref Transform, int, out RayCastOutput)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_RayCast_Alis_Core_Physic_Collision_RayCast_RayCastInput__Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Collision_RayCast_RayCastOutput__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L159
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)
- markdown: Describes whether this instance ray cast
- code: public override bool RayCast(ref RayCastInput input, ref Transform transform, int childIndex, out RayCastOutput output)
- h4: Parameters
- parameters:
  - name: input
    type:
    - text: RayCastInput
      url: Alis.Core.Physic.Collision.RayCast.RayCastInput.html
    description: The input
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform
  - name: childIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The child index
  - name: output
    type:
    - text: RayCastOutput
      url: Alis.Core.Physic.Collision.RayCast.RayCastOutput.html
    description: The output
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: The bool
- api3: SetOneSided(Vector2, Vector2, Vector2, Vector2)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_SetOneSided_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L118
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.SetOneSided(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.SetOneSided(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Sets the one sided using the specified v 0
- code: internal void SetOneSided(Vector2 v0, Vector2 v1, Vector2 v2, Vector2 v3)
- h4: Parameters
- parameters:
  - name: v0
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The
  - name: v1
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The
  - name: v2
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The
  - name: v3
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The
- api3: SetTwoSided(Vector2, Vector2)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_SetTwoSided_Alis_Core_Aspect_Math_Vector_Vector2_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L134
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.SetTwoSided(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.SetTwoSided(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Sets the two sided using the specified start
- code: internal void SetTwoSided(Vector2 start, Vector2 end)
- h4: Parameters
- parameters:
  - name: start
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The start
  - name: end
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The end
- api3: TestPoint(ref Transform, ref Vector2)
  id: Alis_Core_Physic_Collision_Shapes_EdgeShape_TestPoint_Alis_Core_Aspect_Math_Transform__Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/EdgeShape.cs#L149
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.EdgeShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.EdgeShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: Describes whether this instance test point
- code: public override bool TestPoint(ref Transform transform, ref Vector2 point)
- h4: Parameters
- parameters:
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform
  - name: point
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The point
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: The bool
languageId: csharp
metadata:
  description: >-
    A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. Edges created

    independently are two-sided and do no provide smooth movement across junctions.
