### YamlMime:ApiPage
title: Struct DistanceProxy
body:
- api1: Struct DistanceProxy
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L38
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy
    commentId: T:Alis.Core.Physic.Collision.Distance.DistanceProxy
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Collision.Distance
      url: Alis.Core.Physic.Collision.Distance.html
  - name: Assembly
    value: Alis.dll
- markdown: A distance proxy is used by the GJK algorithm. It encapsulates any shape.
- code: public struct DistanceProxy
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: DistanceProxy(AShape, int)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy__ctor_Alis_Core_Physic_Collision_Shapes_AShape_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L56
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.#ctor(Alis.Core.Physic.Collision.Shapes.AShape,System.Int32)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.#ctor(Alis.Core.Physic.Collision.Shapes.AShape,System.Int32)
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Collision.Distance.DistanceProxy" data-throw-if-not-resolved="false"></xref> class
- code: public DistanceProxy(AShape shape, int index)
- h4: Parameters
- parameters:
  - name: shape
    type:
    - text: AShape
      url: Alis.Core.Physic.Collision.Shapes.AShape.html
    description: The shape
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index
- h4: Exceptions
- parameters:
  - type:
    - text: NotSupportedException
      url: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
    description: ''
- api3: DistanceProxy(Vector2[], float)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy__ctor_Alis_Core_Aspect_Math_Vector_Vector2___System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L141
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.#ctor(Alis.Core.Aspect.Math.Vector.Vector2[],System.Single)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.#ctor(Alis.Core.Aspect.Math.Vector.Vector2[],System.Single)
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Collision.Distance.DistanceProxy" data-throw-if-not-resolved="false"></xref> class
- code: public DistanceProxy(Vector2[] vertices, float radius)
- h4: Parameters
- parameters:
  - name: vertices
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    - '['
    - ']'
    description: The vertices
  - name: radius
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The radius
- h2: Fields
- api3: Radius
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_Radius
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L43
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.Radius
    commentId: F:Alis.Core.Physic.Collision.Distance.DistanceProxy.Radius
- markdown: The radius
- code: internal float Radius
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: Vertices
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_Vertices
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L48
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.Vertices
    commentId: F:Alis.Core.Physic.Collision.Distance.DistanceProxy.Vertices
- markdown: The vertices
- code: internal Vector2[] Vertices
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    - '['
    - ']'
- h2: Methods
- api3: GetSupport(Vector2)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_GetSupport_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L149
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.GetSupport(Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.GetSupport(Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Get the supporting vertex index in the given direction.
- code: public int GetSupport(Vector2 direction)
- h4: Parameters
- parameters:
  - name: direction
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The direction.
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: GetVertex(int)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_GetVertex_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L171
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.GetVertex(System.Int32)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.GetVertex(System.Int32)
- markdown: Gets the vertex using the specified index
- code: public Vector2 GetVertex(int index)
- h4: Parameters
- parameters:
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index
- h4: Returns
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The vector
- api3: InitializeChainShape(ChainShape, int)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_InitializeChainShape_Alis_Core_Physic_Collision_Shapes_ChainShape_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L113
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializeChainShape(Alis.Core.Physic.Collision.Shapes.ChainShape,System.Int32)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializeChainShape(Alis.Core.Physic.Collision.Shapes.ChainShape,System.Int32)
- markdown: Initializes the chain shape using the specified chain
- code: internal void InitializeChainShape(ChainShape chain, int index)
- h4: Parameters
- parameters:
  - name: chain
    type:
    - text: ChainShape
      url: Alis.Core.Physic.Collision.Shapes.ChainShape.html
    description: The chain
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index
- api3: InitializeCircleShape(CircleShape)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_InitializeCircleShape_Alis_Core_Physic_Collision_Shapes_CircleShape_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L85
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializeCircleShape(Alis.Core.Physic.Collision.Shapes.CircleShape)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializeCircleShape(Alis.Core.Physic.Collision.Shapes.CircleShape)
- markdown: Initializes the circle shape using the specified circle
- code: private void InitializeCircleShape(CircleShape circle)
- h4: Parameters
- parameters:
  - name: circle
    type:
    - text: CircleShape
      url: Alis.Core.Physic.Collision.Shapes.CircleShape.html
    description: The circle
- api3: InitializeEdgeShape(EdgeShape)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_InitializeEdgeShape_Alis_Core_Physic_Collision_Shapes_EdgeShape_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L128
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializeEdgeShape(Alis.Core.Physic.Collision.Shapes.EdgeShape)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializeEdgeShape(Alis.Core.Physic.Collision.Shapes.EdgeShape)
- markdown: Initializes the edge shape using the specified edge
- code: internal void InitializeEdgeShape(EdgeShape edge)
- h4: Parameters
- parameters:
  - name: edge
    type:
    - text: EdgeShape
      url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
    description: The edge
- api3: InitializePolygonShape(PolygonShape)
  id: Alis_Core_Physic_Collision_Distance_DistanceProxy_InitializePolygonShape_Alis_Core_Physic_Collision_Shapes_PolygonShape_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Distance/DistanceProxy.cs#L96
  metadata:
    uid: Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializePolygonShape(Alis.Core.Physic.Collision.Shapes.PolygonShape)
    commentId: M:Alis.Core.Physic.Collision.Distance.DistanceProxy.InitializePolygonShape(Alis.Core.Physic.Collision.Shapes.PolygonShape)
- markdown: Initializes the polygon shape using the specified polygon
- code: internal void InitializePolygonShape(PolygonShape polygon)
- h4: Parameters
- parameters:
  - name: polygon
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The polygon
languageId: csharp
metadata:
  description: A distance proxy is used by the GJK algorithm. It encapsulates any shape.
