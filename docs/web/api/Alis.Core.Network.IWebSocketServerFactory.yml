### YamlMime:ApiPage
title: Interface IWebSocketServerFactory
body:
- api1: Interface IWebSocketServerFactory
  id: Alis_Core_Network_IWebSocketServerFactory
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/IWebSocketServerFactory.cs#L40
  metadata:
    uid: Alis.Core.Network.IWebSocketServerFactory
    commentId: T:Alis.Core.Network.IWebSocketServerFactory
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Network
      url: Alis.Core.Network.html
  - name: Assembly
    value: Alis.dll
- markdown: Web socket server factory used to open web socket server connections
- code: public interface IWebSocketServerFactory
- h2: Methods
- api3: AcceptWebSocketAsync(WebSocketHttpContext, CancellationToken)
  id: Alis_Core_Network_IWebSocketServerFactory_AcceptWebSocketAsync_Alis_Core_Network_WebSocketHttpContext_System_Threading_CancellationToken_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/IWebSocketServerFactory.cs#L58
  metadata:
    uid: Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,System.Threading.CancellationToken)
    commentId: M:Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,System.Threading.CancellationToken)
- markdown: >-
    Accept web socket with default options

    Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
- code: Task<WebSocket> AcceptWebSocketAsync(WebSocketHttpContext context, CancellationToken token = default)
- h4: Parameters
- parameters:
  - name: context
    type:
    - text: WebSocketHttpContext
      url: Alis.Core.Network.WebSocketHttpContext.html
    description: The http context used to initiate this web socket request
  - name: token
    type:
    - text: CancellationToken
      url: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
    description: The optional cancellation token
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Task
      url: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
    - <
    - text: WebSocket
      url: https://learn.microsoft.com/dotnet/api/system.net.websockets.websocket
    - '>'
    description: A connected web socket
- api3: AcceptWebSocketAsync(WebSocketHttpContext, WebSocketServerOptions, CancellationToken)
  id: Alis_Core_Network_IWebSocketServerFactory_AcceptWebSocketAsync_Alis_Core_Network_WebSocketHttpContext_Alis_Core_Network_WebSocketServerOptions_System_Threading_CancellationToken_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/IWebSocketServerFactory.cs#L69
  metadata:
    uid: Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,Alis.Core.Network.WebSocketServerOptions,System.Threading.CancellationToken)
    commentId: M:Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,Alis.Core.Network.WebSocketServerOptions,System.Threading.CancellationToken)
- markdown: >-
    Accept web socket with options specified

    Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
- code: Task<WebSocket> AcceptWebSocketAsync(WebSocketHttpContext context, WebSocketServerOptions options, CancellationToken token = default)
- h4: Parameters
- parameters:
  - name: context
    type:
    - text: WebSocketHttpContext
      url: Alis.Core.Network.WebSocketHttpContext.html
    description: The http context used to initiate this web socket request
  - name: options
    type:
    - text: WebSocketServerOptions
      url: Alis.Core.Network.WebSocketServerOptions.html
    description: The web socket options
  - name: token
    type:
    - text: CancellationToken
      url: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
    description: The optional cancellation token
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Task
      url: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
    - <
    - text: WebSocket
      url: https://learn.microsoft.com/dotnet/api/system.net.websockets.websocket
    - '>'
    description: A connected web socket
- api3: ReadHttpHeaderFromStreamAsync(Stream, CancellationToken)
  id: Alis_Core_Network_IWebSocketServerFactory_ReadHttpHeaderFromStreamAsync_System_IO_Stream_System_Threading_CancellationToken_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/IWebSocketServerFactory.cs#L48
  metadata:
    uid: Alis.Core.Network.IWebSocketServerFactory.ReadHttpHeaderFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
    commentId: M:Alis.Core.Network.IWebSocketServerFactory.ReadHttpHeaderFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
- markdown: Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade
- code: Task<WebSocketHttpContext> ReadHttpHeaderFromStreamAsync(Stream stream, CancellationToken token = default)
- h4: Parameters
- parameters:
  - name: stream
    type:
    - text: Stream
      url: https://learn.microsoft.com/dotnet/api/system.io.stream
    description: The network stream
  - name: token
    type:
    - text: CancellationToken
      url: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
    description: The optional cancellation token
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Task
      url: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
    - <
    - text: WebSocketHttpContext
      url: Alis.Core.Network.WebSocketHttpContext.html
    - '>'
    description: Http data read from the stream
languageId: csharp
metadata:
  description: Web socket server factory used to open web socket server connections
