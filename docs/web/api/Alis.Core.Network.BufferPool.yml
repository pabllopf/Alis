### YamlMime:ApiPage
title: Class BufferPool
body:
- api1: Class BufferPool
  id: Alis_Core_Network_BufferPool
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L42
  metadata:
    uid: Alis.Core.Network.BufferPool
    commentId: T:Alis.Core.Network.BufferPool
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Network
      url: Alis.Core.Network.html
  - name: Assembly
    value: Alis.dll
- markdown: >-
    This buffer pool is instance thread safe

    Use GetBuffer to get a MemoryStream (with a publically accessible buffer)

    Calling Close on this MemoryStream will clear its internal buffer and return the buffer to the pool for reuse

    MemoryStreams can grow larger than the DEFAULT_BUFFER_SIZE (or whatever you passed in)

    and the underlying buffers will be returned to the pool at their larger sizes
- code: 'public class BufferPool : IBufferPool'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: BufferPool
    url: Alis.Core.Network.BufferPool.html
- h4: Implements
- list:
  - text: IBufferPool
    url: Alis.Core.Network.IBufferPool.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: BufferPool()
  id: Alis_Core_Network_BufferPool__ctor
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L62
  metadata:
    uid: Alis.Core.Network.BufferPool.#ctor
    commentId: M:Alis.Core.Network.BufferPool.#ctor
- markdown: Initializes a new instance of the <xref href="Alis.Core.Network.BufferPool" data-throw-if-not-resolved="false"></xref> class
- code: public BufferPool()
- api3: BufferPool(int)
  id: Alis_Core_Network_BufferPool__ctor_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L70
  metadata:
    uid: Alis.Core.Network.BufferPool.#ctor(System.Int32)
    commentId: M:Alis.Core.Network.BufferPool.#ctor(System.Int32)
- markdown: Initializes a new instance of the <xref href="Alis.Core.Network.BufferPool" data-throw-if-not-resolved="false"></xref> class
- code: public BufferPool(int bufferSize)
- h4: Parameters
- parameters:
  - name: bufferSize
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The buffer size
- h2: Fields
- api3: DefaultBufferSize
  id: Alis_Core_Network_BufferPool_DefaultBufferSize
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L47
  metadata:
    uid: Alis.Core.Network.BufferPool.DefaultBufferSize
    commentId: F:Alis.Core.Network.BufferPool.DefaultBufferSize
- markdown: The default buffer size
- code: private const int DefaultBufferSize = 16384
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: _bufferPoolStack
  id: Alis_Core_Network_BufferPool__bufferPoolStack
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L52
  metadata:
    uid: Alis.Core.Network.BufferPool._bufferPoolStack
    commentId: F:Alis.Core.Network.BufferPool._bufferPoolStack
- markdown: The buffer pool stack
- code: private readonly ConcurrentStack<byte[]> _bufferPoolStack
- h4: Field Value
- parameters:
  - type:
    - text: ConcurrentStack
      url: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentstack-1
    - <
    - text: byte
      url: https://learn.microsoft.com/dotnet/api/system.byte
    - '['
    - ']'
    - '>'
- api3: _bufferSize
  id: Alis_Core_Network_BufferPool__bufferSize
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L57
  metadata:
    uid: Alis.Core.Network.BufferPool._bufferSize
    commentId: F:Alis.Core.Network.BufferPool._bufferSize
- markdown: The buffer size
- code: private readonly int _bufferSize
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- h2: Methods
- api3: GetBuffer()
  id: Alis_Core_Network_BufferPool_GetBuffer
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L81
  metadata:
    uid: Alis.Core.Network.BufferPool.GetBuffer
    commentId: M:Alis.Core.Network.BufferPool.GetBuffer
- markdown: >-
    Gets a MemoryStream built from a buffer plucked from a thread safe pool

    The pool grows automatically.

    Closing the memory stream clears the buffer and returns it to the pool
- code: public MemoryStream GetBuffer()
- h4: Returns
- parameters:
  - type:
    - text: MemoryStream
      url: https://learn.microsoft.com/dotnet/api/system.io.memorystream
- api3: ReturnBuffer(byte[])
  id: Alis_Core_Network_BufferPool_ReturnBuffer_System_Byte___
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/BufferPool.cs#L95
  metadata:
    uid: Alis.Core.Network.BufferPool.ReturnBuffer(System.Byte[])
    commentId: M:Alis.Core.Network.BufferPool.ReturnBuffer(System.Byte[])
- markdown: Returns the buffer using the specified buffer
- code: protected internal void ReturnBuffer(byte[] buffer)
- h4: Parameters
- parameters:
  - name: buffer
    type:
    - text: byte
      url: https://learn.microsoft.com/dotnet/api/system.byte
    - '['
    - ']'
    description: The buffer
languageId: csharp
metadata:
  description: >-
    This buffer pool is instance thread safe

    Use GetBuffer to get a MemoryStream (with a publically accessible buffer)

    Calling Close on this MemoryStream will clear its internal buffer and return the buffer to the pool for reuse

    MemoryStreams can grow larger than the DEFAULT_BUFFER_SIZE (or whatever you passed in)

    and the underlying buffers will be returned to the pool at their larger sizes
