### YamlMime:ApiPage
title: Class ChainShape
body:
- api1: Class ChainShape
  id: Alis_Core_Physic_Collision_Shapes_ChainShape
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L45
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape
    commentId: T:Alis.Core.Physic.Collision.Shapes.ChainShape
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Collision.Shapes
      url: Alis.Core.Physic.Collision.Shapes.html
  - name: Assembly
    value: Alis.dll
- markdown: >-
    A chain shape is a free form sequence of line segments. The chain has one-sided collision, with the surface

    normal pointing to the right of the edge. This provides a counter-clockwise winding like the polygon shape.

    Connectivity information is used to create smooth collisions. Warning: the chain will not collide properly if there

    are

    self-intersections.
- code: 'public sealed class ChainShape : AShape'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: AShape
    url: Alis.Core.Physic.Collision.Shapes.AShape.html
  - text: ChainShape
    url: Alis.Core.Physic.Collision.Shapes.ChainShape.html
- h4: Inherited Members
- list:
  - text: AShape.ShapeType
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ShapeType
  - text: AShape.ChildCount
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ChildCount
  - text: AShape.Radius
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_Radius
  - text: AShape.Density
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_Density
  - text: AShape.GetMassData(out MassData)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_GetMassData_Alis_Core_Physic_Collision_Shapes_MassData__
  - text: AShape.Clone()
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_Clone
  - text: AShape.TestPoint(ref Transform, ref Vector2)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_TestPoint_Alis_Core_Aspect_Math_Transform__Alis_Core_Aspect_Math_Vector_Vector2__
  - text: AShape.RayCast(ref RayCastInput, ref Transform, int, out RayCastOutput)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_RayCast_Alis_Core_Physic_Collision_RayCast_RayCastInput__Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Collision_RayCast_RayCastOutput__
  - text: AShape.ComputeAabb(ref Transform, int, out Aabb)
    url: Alis.Core.Physic.Collision.Shapes.AShape.html#Alis_Core_Physic_Collision_Shapes_AShape_ComputeAabb_Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Shared_Aabb__
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: ChainShape(Vertices, bool)
  id: Alis_Core_Physic_Collision_Shapes_ChainShape__ctor_Alis_Core_Physic_Shared_Vertices_System_Boolean_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L53
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.#ctor(Alis.Core.Physic.Shared.Vertices,System.Boolean)
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.#ctor(Alis.Core.Physic.Shared.Vertices,System.Boolean)
- markdown: Create a new ChainShape from the vertices.
- code: public ChainShape(Vertices vertices, bool createLoop = false)
- h4: Parameters
- parameters:
  - name: vertices
    type:
    - text: Vertices
      url: Alis.Core.Physic.Shared.Vertices.html
    description: The vertices to use. Must contain 2 or more vertices.
  - name: createLoop
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: >-
      Set to true to create a closed loop. It connects the first vertex to the last, and

      automatically adjusts connectivity to create smooth collisions along the chain.
    optional: true
- api3: ChainShape()
  id: Alis_Core_Physic_Collision_Shapes_ChainShape__ctor
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L71
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.#ctor
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.#ctor
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Collision.Shapes.ChainShape" data-throw-if-not-resolved="false"></xref> class
- code: private ChainShape()
- h2: Properties
- api3: ChildCount
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_ChildCount
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L79
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.ChildCount
    commentId: P:Alis.Core.Physic.Collision.Shapes.ChainShape.ChildCount
- markdown: Edge count = vertex count - 1
- code: public override int ChildCount { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: NextVertex
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_NextVertex
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L85
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.NextVertex
    commentId: P:Alis.Core.Physic.Collision.Shapes.ChainShape.NextVertex
- markdown: Establish connectivity to a vertex that follows the last vertex. Don't call this for loops.
- code: internal Vector2 NextVertex { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: PrevVertex
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_PrevVertex
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L82
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.PrevVertex
    commentId: P:Alis.Core.Physic.Collision.Shapes.ChainShape.PrevVertex
- markdown: Establish connectivity to a vertex that precedes the first vertex. Don't call this for loops.
- code: internal Vector2 PrevVertex { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: Vertices
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_Vertices
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L76
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.Vertices
    commentId: P:Alis.Core.Physic.Collision.Shapes.ChainShape.Vertices
- markdown: The vertices. These are not owned/freed by the chain Shape.
- code: public Vertices Vertices { get; internal set; }
- h4: Property Value
- parameters:
  - type:
    - text: Vertices
      url: Alis.Core.Physic.Shared.Vertices.html
- h2: Methods
- api3: Clone()
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_Clone
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L177
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.Clone
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.Clone
- markdown: Clones this instance
- code: public override AShape Clone()
- h4: Returns
- parameters:
  - type:
    - text: AShape
      url: Alis.Core.Physic.Collision.Shapes.AShape.html
    description: The clone
- api3: ComputeAabb(ref Transform, int, out Aabb)
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_ComputeAabb_Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Shared_Aabb__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L157
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)
- markdown: Computes the aabb using the specified transform
- code: public override void ComputeAabb(ref Transform transform, int childIndex, out Aabb aabb)
- h4: Parameters
- parameters:
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform
  - name: childIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The child index
  - name: aabb
    type:
    - text: Aabb
      url: Alis.Core.Physic.Shared.Aabb.html
    description: The aabb
- api3: GetChildEdge(EdgeShape, int)
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_GetChildEdge_Alis_Core_Physic_Collision_Shapes_EdgeShape_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L93
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.GetChildEdge(Alis.Core.Physic.Collision.Shapes.EdgeShape,System.Int32)
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.GetChildEdge(Alis.Core.Physic.Collision.Shapes.EdgeShape,System.Int32)
- markdown: Gets the child edge using the specified edge
- code: internal void GetChildEdge(EdgeShape edge, int index)
- h4: Parameters
- parameters:
  - name: edge
    type:
    - text: EdgeShape
      url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
    description: The edge
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index
- api3: GetChildEdge(int)
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_GetChildEdge_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L111
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.GetChildEdge(System.Int32)
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.GetChildEdge(System.Int32)
- markdown: Gets the child edge using the specified index
- code: public EdgeShape GetChildEdge(int index)
- h4: Parameters
- parameters:
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index
- h4: Returns
- parameters:
  - type:
    - text: EdgeShape
      url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
    description: The edge shape
- api3: RayCast(ref RayCastInput, ref Transform, int, out RayCastOutput)
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_RayCast_Alis_Core_Physic_Collision_RayCast_RayCastInput__Alis_Core_Aspect_Math_Transform__System_Int32_Alis_Core_Physic_Collision_RayCast_RayCastOutput__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L134
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)
- markdown: Describes whether this instance ray cast
- code: public override bool RayCast(ref RayCastInput input, ref Transform transform, int childIndex, out RayCastOutput output)
- h4: Parameters
- parameters:
  - name: input
    type:
    - text: RayCastInput
      url: Alis.Core.Physic.Collision.RayCast.RayCastInput.html
    description: The input
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform
  - name: childIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The child index
  - name: output
    type:
    - text: RayCastOutput
      url: Alis.Core.Physic.Collision.RayCast.RayCastOutput.html
    description: The output
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: The bool
- api3: TestPoint(ref Transform, ref Vector2)
  id: Alis_Core_Physic_Collision_Shapes_ChainShape_TestPoint_Alis_Core_Aspect_Math_Transform__Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Shapes/ChainShape.cs#L124
  metadata:
    uid: Alis.Core.Physic.Collision.Shapes.ChainShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Collision.Shapes.ChainShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: Describes whether this instance test point
- code: public override bool TestPoint(ref Transform transform, ref Vector2 point)
- h4: Parameters
- parameters:
  - name: transform
    type:
    - text: Transform
      url: Alis.Core.Aspect.Math.Transform.html
    description: The transform
  - name: point
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The point
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: The bool
languageId: csharp
metadata:
  description: >-
    A chain shape is a free form sequence of line segments. The chain has one-sided collision, with the surface

    normal pointing to the right of the edge. This provides a counter-clockwise winding like the polygon shape.

    Connectivity information is used to create smooth collisions. Warning: the chain will not collide properly if there

    are

    self-intersections.
