### YamlMime:ApiPage
title: Class Settings
body:
- api1: Class Settings
  id: Alis_Core_Physic_Config_Settings
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L39
  metadata:
    uid: Alis.Core.Physic.Config.Settings
    commentId: T:Alis.Core.Physic.Config.Settings
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Config
      url: Alis.Core.Physic.Config.html
  - name: Assembly
    value: Alis.dll
- markdown: The settings class
- code: internal static class Settings
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Settings
    url: Alis.Core.Physic.Config.Settings.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Fields
- api3: AabbExtension
  id: Alis_Core_Physic_Config_Settings_AabbExtension
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L101
  metadata:
    uid: Alis.Core.Physic.Config.Settings.AabbExtension
    commentId: F:Alis.Core.Physic.Config.Settings.AabbExtension
- markdown: >-
    This is used to fatten AABBs in the dynamic tree. This allows proxies to move by a small amount without

    triggering a tree adjustment. This is in meters.
- code: public const float AabbExtension = 0.1
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: AabbMultiplier
  id: Alis_Core_Physic_Config_Settings_AabbMultiplier
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L107
  metadata:
    uid: Alis.Core.Physic.Config.Settings.AabbMultiplier
    commentId: F:Alis.Core.Physic.Config.Settings.AabbMultiplier
- markdown: >-
    This is used to fatten AABBs in the dynamic tree. This is used to predict the future position based on the

    current displacement. This is a dimensionless multiplier.
- code: public const float AabbMultiplier = 4
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: AngularCorrection
  id: Alis_Core_Physic_Config_Settings_AngularCorrection
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L133
  metadata:
    uid: Alis.Core.Physic.Config.Settings.AngularCorrection
    commentId: F:Alis.Core.Physic.Config.Settings.AngularCorrection
- markdown: The maximum angular position correction used when solving constraints. This helps to prevent overshoot.
- code: public const float AngularCorrection = 0.13962635
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: AngularSleepTolerance
  id: Alis_Core_Physic_Config_Settings_AngularSleepTolerance
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L167
  metadata:
    uid: Alis.Core.Physic.Config.Settings.AngularSleepTolerance
    commentId: F:Alis.Core.Physic.Config.Settings.AngularSleepTolerance
- markdown: A body cannot sleep if its angular velocity is above this tolerance.
- code: public const float AngularSleepTolerance = 0.03490659
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: AngularSlop
  id: Alis_Core_Physic_Config_Settings_AngularSlop
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L119
  metadata:
    uid: Alis.Core.Physic.Config.Settings.AngularSlop
    commentId: F:Alis.Core.Physic.Config.Settings.AngularSlop
- markdown: >-
    A small angle used as a collision and constraint tolerance. Usually it is chosen to be numerically

    significant, but visually insignificant.
- code: public const float AngularSlop = 0.03490659
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: AutoClearForces
  id: Alis_Core_Physic_Config_Settings_AutoClearForces
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L177
  metadata:
    uid: Alis.Core.Physic.Config.Settings.AutoClearForces
    commentId: F:Alis.Core.Physic.Config.Settings.AutoClearForces
- markdown: >-
    By default, forces are cleared automatically after each call to Step. The default behavior is modified with

    this setting. The purpose of this setting is to support sub-stepping. Sub-stepping is often used to maintain a

    fixed

    sized time step under a variable frame-rate. When you perform sub-stepping you should disable auto clearing of

    forces

    and instead call ClearForces after all sub-steps are complete in one pass of your game loop.
- code: public const bool AutoClearForces = true
- h4: Field Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: Baumgarte
  id: Alis_Core_Physic_Config_Settings_Baumgarte
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L151
  metadata:
    uid: Alis.Core.Physic.Config.Settings.Baumgarte
    commentId: F:Alis.Core.Physic.Config.Settings.Baumgarte
- markdown: >-
    This scale factor controls how fast overlap is resolved. Ideally this would be 1 so that overlap is removed in

    one time step. However using values close to 1 often lead to overshoot.
- code: public const float Baumgarte = 0.2
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: BlockSolve
  id: Alis_Core_Physic_Config_Settings_BlockSolve
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L50
  metadata:
    uid: Alis.Core.Physic.Config.Settings.BlockSolve
    commentId: F:Alis.Core.Physic.Config.Settings.BlockSolve
- markdown: Enable or disable the block contact solver. Used for debugging.
- code: internal const bool BlockSolve = true
- h4: Field Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: DefaultCollisionGroup
  id: Alis_Core_Physic_Config_Settings_DefaultCollisionGroup
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L89
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultCollisionGroup
    commentId: F:Alis.Core.Physic.Config.Settings.DefaultCollisionGroup
- markdown: Set the default collision group
- code: public const short DefaultCollisionGroup = 0
- h4: Field Value
- parameters:
  - type:
    - text: short
      url: https://learn.microsoft.com/dotnet/api/system.int16
- api3: DefaultFixtureCollidesWith
  id: Alis_Core_Physic_Config_Settings_DefaultFixtureCollidesWith
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L81
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultFixtureCollidesWith
    commentId: F:Alis.Core.Physic.Config.Settings.DefaultFixtureCollidesWith
- markdown: This is used by the Fixture constructor as the default value for Fixture.CollidesWith member.
- code: public const Category DefaultFixtureCollidesWith = Cat1 | Cat2 | Cat3 | Cat4 | Cat5 | Cat6 | Cat7 | Cat8 | Cat9 | Cat10 | Cat11 | Cat12 | Cat13 | Cat14 | Cat15 | Cat16 | Cat17 | Cat18 | Cat19 | Cat20 | Cat21 | Cat22 | Cat23 | Cat24 | Cat25 | Cat26 | Cat27 | Cat28 | Cat29 | Cat30 | Cat31
- h4: Field Value
- parameters:
  - type:
    - text: Category
      url: Alis.Core.Physic.Collision.Filtering.Category.html
- api3: DefaultFixtureCollisionCategories
  id: Alis_Core_Physic_Config_Settings_DefaultFixtureCollisionCategories
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L78
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultFixtureCollisionCategories
    commentId: F:Alis.Core.Physic.Config.Settings.DefaultFixtureCollisionCategories
- markdown: >-
    This is used by the Fixture constructor as the default value for Fixture.CollisionCategories member. Note that

    you may need to change this depending on the setting of UseFPECollisionCategories, above.
- code: public const Category DefaultFixtureCollisionCategories = Cat1
- h4: Field Value
- parameters:
  - type:
    - text: Category
      url: Alis.Core.Physic.Collision.Filtering.Category.html
- api3: DefaultFixtureIgnoreCcdWith
  id: Alis_Core_Physic_Config_Settings_DefaultFixtureIgnoreCcdWith
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L84
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultFixtureIgnoreCcdWith
    commentId: F:Alis.Core.Physic.Config.Settings.DefaultFixtureIgnoreCcdWith
- markdown: This is used by the Fixture constructor as the default value for Fixture.IgnoreCCDWith member.
- code: public const Category DefaultFixtureIgnoreCcdWith = None
- h4: Field Value
- parameters:
  - type:
    - text: Category
      url: Alis.Core.Physic.Collision.Filtering.Category.html
- api3: EnableSubStepping
  id: Alis_Core_Physic_Config_Settings_EnableSubStepping
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L46
  metadata:
    uid: Alis.Core.Physic.Config.Settings.EnableSubStepping
    commentId: F:Alis.Core.Physic.Config.Settings.EnableSubStepping
- markdown: Enable or disable sub stepping. Used for debugging.
- code: internal const bool EnableSubStepping = false
- h4: Field Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: GjkIterations
  id: Alis_Core_Physic_Config_Settings_GjkIterations
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L93
  metadata:
    uid: Alis.Core.Physic.Config.Settings.GjkIterations
    commentId: F:Alis.Core.Physic.Config.Settings.GjkIterations
- markdown: Defines the maximum number of iterations made by the GJK algorithm.
- code: public const int GjkIterations = 20
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: LinearCorrection
  id: Alis_Core_Physic_Config_Settings_LinearCorrection
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L130
  metadata:
    uid: Alis.Core.Physic.Config.Settings.LinearCorrection
    commentId: F:Alis.Core.Physic.Config.Settings.LinearCorrection
- markdown: The maximum linear position correction used when solving constraints. This helps to prevent overshoot.
- code: public const float LinearCorrection = 0.2
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: LinearSleepTolerance
  id: Alis_Core_Physic_Config_Settings_LinearSleepTolerance
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L164
  metadata:
    uid: Alis.Core.Physic.Config.Settings.LinearSleepTolerance
    commentId: F:Alis.Core.Physic.Config.Settings.LinearSleepTolerance
- markdown: A body cannot sleep if its linear velocity is above this tolerance.
- code: public const float LinearSleepTolerance = 0.01
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: LinearSlop
  id: Alis_Core_Physic_Config_Settings_LinearSlop
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L113
  metadata:
    uid: Alis.Core.Physic.Config.Settings.LinearSlop
    commentId: F:Alis.Core.Physic.Config.Settings.LinearSlop
- markdown: >-
    A small length used as a collision and constraint tolerance. Usually it is chosen to be numerically

    significant, but visually insignificant.
- code: public const float LinearSlop = 0.005
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: ManifoldPoints
  id: Alis_Core_Physic_Config_Settings_ManifoldPoints
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L42
  metadata:
    uid: Alis.Core.Physic.Config.Settings.ManifoldPoints
    commentId: F:Alis.Core.Physic.Config.Settings.ManifoldPoints
- markdown: The maximum number of contact points between two convex shapes. DO NOT CHANGE THIS VALUE!
- code: internal const int ManifoldPoints = 2
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: MixFriction
  id: Alis_Core_Physic_Config_Settings_MixFriction
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L193
  metadata:
    uid: Alis.Core.Physic.Config.Settings.MixFriction
    commentId: F:Alis.Core.Physic.Config.Settings.MixFriction
- markdown: >-
    Gets called when there is a collision between 2 fixtures. The first two parameters are the friction values of

    either fixture. The return value should be the desired friction value of the collection.
- code: public static readonly Func<float, float, float> MixFriction
- h4: Field Value
- parameters:
  - type:
    - text: Func
      url: https://learn.microsoft.com/dotnet/api/system.func-3
    - <
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - ','
    - " "
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - ','
    - " "
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - '>'
- api3: MixRestitution
  id: Alis_Core_Physic_Config_Settings_MixRestitution
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L199
  metadata:
    uid: Alis.Core.Physic.Config.Settings.MixRestitution
    commentId: F:Alis.Core.Physic.Config.Settings.MixRestitution
- markdown: >-
    Gets called when there is a collision between 2 fixtures. The first two parameters are the restitution values

    of either fixture. The return value should be the desired restitution value of the collection.
- code: public static readonly Func<float, float, float> MixRestitution
- h4: Field Value
- parameters:
  - type:
    - text: Func
      url: https://learn.microsoft.com/dotnet/api/system.func-3
    - <
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - ','
    - " "
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - ','
    - " "
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - '>'
- api3: MixRestitutionThreshold
  id: Alis_Core_Physic_Config_Settings_MixRestitutionThreshold
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L204
  metadata:
    uid: Alis.Core.Physic.Config.Settings.MixRestitutionThreshold
    commentId: F:Alis.Core.Physic.Config.Settings.MixRestitutionThreshold
- markdown: The default mix restitution threshold
- code: public static readonly Func<float, float, float> MixRestitutionThreshold
- h4: Field Value
- parameters:
  - type:
    - text: Func
      url: https://learn.microsoft.com/dotnet/api/system.func-3
    - <
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - ','
    - " "
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - ','
    - " "
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    - '>'
- api3: PolygonRadius
  id: Alis_Core_Physic_Config_Settings_PolygonRadius
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L187
  metadata:
    uid: Alis.Core.Physic.Config.Settings.PolygonRadius
    commentId: F:Alis.Core.Physic.Config.Settings.PolygonRadius
- markdown: >-
    The radius of the polygon/edge shape skin. This should not be modified. Making this smaller means polygons

    will have an insufficient buffer for continuous collision. Making it larger may create artifacts for vertex

    collision.
- code: public static readonly float PolygonRadius
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: PolygonVertices
  id: Alis_Core_Physic_Config_Settings_PolygonVertices
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L180
  metadata:
    uid: Alis.Core.Physic.Config.Settings.PolygonVertices
    commentId: F:Alis.Core.Physic.Config.Settings.PolygonVertices
- markdown: The maximum number of vertices on a convex polygon.
- code: public const int PolygonVertices = 8
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Rotation
  id: Alis_Core_Physic_Config_Settings_Rotation
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L145
  metadata:
    uid: Alis.Core.Physic.Config.Settings.Rotation
    commentId: F:Alis.Core.Physic.Config.Settings.Rotation
- markdown: >-
    The maximum angular velocity of a body. This limit is very large and is used to prevent numerical problems.

    You shouldn't need to adjust this.
- code: public const float Rotation = 1.5707964
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: SkipSanityChecks
  id: Alis_Core_Physic_Config_Settings_SkipSanityChecks
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L57
  metadata:
    uid: Alis.Core.Physic.Config.Settings.SkipSanityChecks
    commentId: F:Alis.Core.Physic.Config.Settings.SkipSanityChecks
- markdown: >-
    Set this to true to skip sanity checks in the engine. This will speed up the tools by removing the overhead of

    the checks, but you will need to handle checks yourself where it is needed.
- code: internal const bool SkipSanityChecks = false
- h4: Field Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: SubSteps
  id: Alis_Core_Physic_Config_Settings_SubSteps
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L122
  metadata:
    uid: Alis.Core.Physic.Config.Settings.SubSteps
    commentId: F:Alis.Core.Physic.Config.Settings.SubSteps
- markdown: Maximum number of sub-steps per contact in continuous physics simulation.
- code: public const int SubSteps = 8
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: TimeToSleep
  id: Alis_Core_Physic_Config_Settings_TimeToSleep
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L161
  metadata:
    uid: Alis.Core.Physic.Config.Settings.TimeToSleep
    commentId: F:Alis.Core.Physic.Config.Settings.TimeToSleep
- markdown: The time that a body must be still before it will go to sleep.
- code: public const float TimeToSleep = 0.5
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: ToiBaumgarte
  id: Alis_Core_Physic_Config_Settings_ToiBaumgarte
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L156
  metadata:
    uid: Alis.Core.Physic.Config.Settings.ToiBaumgarte
    commentId: F:Alis.Core.Physic.Config.Settings.ToiBaumgarte
- markdown: The toi baumgarte
- code: public const float ToiBaumgarte = 0.75
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: ToiContacts
  id: Alis_Core_Physic_Config_Settings_ToiContacts
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L127
  metadata:
    uid: Alis.Core.Physic.Config.Settings.ToiContacts
    commentId: F:Alis.Core.Physic.Config.Settings.ToiContacts
- markdown: Maximum number of contacts to be handled to solve a TOI impact.
- code: public const int ToiContacts = 32
- h4: Field Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Translation
  id: Alis_Core_Physic_Config_Settings_Translation
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L139
  metadata:
    uid: Alis.Core.Physic.Config.Settings.Translation
    commentId: F:Alis.Core.Physic.Config.Settings.Translation
- markdown: >-
    The maximum linear velocity of a body. This limit is very large and is used to prevent numerical problems. You

    shouldn't need to adjust this.
- code: public const float Translation = 2
- h4: Field Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: UseConvexHullPolygons
  id: Alis_Core_Physic_Config_Settings_UseConvexHullPolygons
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L64
  metadata:
    uid: Alis.Core.Physic.Config.Settings.UseConvexHullPolygons
    commentId: F:Alis.Core.Physic.Config.Settings.UseConvexHullPolygons
- markdown: >-
    If true, it will run a GiftWrap convex hull on all polygon inputs. This makes for a more stable engine when

    given random input, but if speed of the creation of polygons are more important, you might want to set this to

    false.
- code: public const bool UseConvexHullPolygons = true
- h4: Field Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: UseFpeCollisionCategories
  id: Alis_Core_Physic_Config_Settings_UseFpeCollisionCategories
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L72
  metadata:
    uid: Alis.Core.Physic.Config.Settings.UseFpeCollisionCategories
    commentId: F:Alis.Core.Physic.Config.Settings.UseFpeCollisionCategories
- markdown: >-
    Velcro Physics has a different way of filtering fixtures than Box2d. We have both FPE and Box2D filtering in

    the engine. If you are upgrading from earlier versions of FPE, set this to true and

    DefaultFixtureCollisionCategories

    to Category.All.
- code: internal const bool UseFpeCollisionCategories = false
- h4: Field Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- h2: Methods
- api3: DefaultMixFriction(float, float)
  id: Alis_Core_Physic_Config_Settings_DefaultMixFriction_System_Single_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L210
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultMixFriction(System.Single,System.Single)
    commentId: M:Alis.Core.Physic.Config.Settings.DefaultMixFriction(System.Single,System.Single)
- markdown: >-
    Friction mixing law. The idea is to allow either fixture to drive the friction to zero. For example, anything

    slides on ice.
- code: private static float DefaultMixFriction(float friction1, float friction2)
- h4: Parameters
- parameters:
  - name: friction1
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
  - name: friction2
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: DefaultMixRestitution(float, float)
  id: Alis_Core_Physic_Config_Settings_DefaultMixRestitution_System_Single_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L217
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultMixRestitution(System.Single,System.Single)
    commentId: M:Alis.Core.Physic.Config.Settings.DefaultMixRestitution(System.Single,System.Single)
- markdown: >-
    Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface. For example, a

    superball bounces on anything.
- code: private static float DefaultMixRestitution(float restitution1, float restitution2)
- h4: Parameters
- parameters:
  - name: restitution1
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
  - name: restitution2
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- api3: DefaultMixRestitutionThreshold(float, float)
  id: Alis_Core_Physic_Config_Settings_DefaultMixRestitutionThreshold_System_Single_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Config/Settings.cs#L221
  metadata:
    uid: Alis.Core.Physic.Config.Settings.DefaultMixRestitutionThreshold(System.Single,System.Single)
    commentId: M:Alis.Core.Physic.Config.Settings.DefaultMixRestitutionThreshold(System.Single,System.Single)
- markdown: Restitution mixing law. This picks the lowest value.
- code: private static float DefaultMixRestitutionThreshold(float threshold1, float threshold2)
- h4: Parameters
- parameters:
  - name: threshold1
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
  - name: threshold2
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
languageId: csharp
metadata:
  description: The settings class
