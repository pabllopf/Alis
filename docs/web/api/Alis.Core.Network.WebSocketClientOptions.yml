### YamlMime:ApiPage
title: Class WebSocketClientOptions
body:
- api1: Class WebSocketClientOptions
  id: Alis_Core_Network_WebSocketClientOptions
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L38
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions
    commentId: T:Alis.Core.Network.WebSocketClientOptions
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Network
      url: Alis.Core.Network.html
  - name: Assembly
    value: Alis.dll
- markdown: Client WebSocket init options
- code: public class WebSocketClientOptions
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: WebSocketClientOptions
    url: Alis.Core.Network.WebSocketClientOptions.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: WebSocketClientOptions()
  id: Alis_Core_Network_WebSocketClientOptions__ctor
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L43
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.#ctor
    commentId: M:Alis.Core.Network.WebSocketClientOptions.#ctor
- markdown: Initialises a new instance of the WebSocketClientOptions class
- code: public WebSocketClientOptions()
- h2: Properties
- api3: AdditionalHttpHeaders
  id: Alis_Core_Network_WebSocketClientOptions_AdditionalHttpHeaders
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L75
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.AdditionalHttpHeaders
    commentId: P:Alis.Core.Network.WebSocketClientOptions.AdditionalHttpHeaders
- markdown: Add any additional http headers to this dictionary
- code: public Dictionary<string, string> AdditionalHttpHeaders { get; }
- h4: Property Value
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - ','
    - " "
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
- api3: IncludeExceptionInCloseResponse
  id: Alis_Core_Network_WebSocketClientOptions_IncludeExceptionInCloseResponse
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L82
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.IncludeExceptionInCloseResponse
    commentId: P:Alis.Core.Network.WebSocketClientOptions.IncludeExceptionInCloseResponse
- markdown: >-
    Include the full exception (with stack trace) in the close response

    when an exception is encountered and the WebSocket connection is closed

    The default is false
- code: public bool IncludeExceptionInCloseResponse { get; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: KeepAliveInterval
  id: Alis_Core_Network_WebSocketClientOptions_KeepAliveInterval
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L61
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.KeepAliveInterval
    commentId: P:Alis.Core.Network.WebSocketClientOptions.KeepAliveInterval
- markdown: >-
    How often to send ping requests to the Server

    This is done to prevent proxy servers from closing your connection

    The default is TimeSpan.Zero meaning that it is disabled.

    WebSocket servers usually send ping messages so it is not normally necessary for the client to send them (hence the

    TimeSpan.Zero default)

    You can manually control ping pong messages using the PingPongManager class.

    If you do that it is advisible to set this KeepAliveInterval to zero for the WebSocketClientFactory
- code: public TimeSpan KeepAliveInterval { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: TimeSpan
      url: https://learn.microsoft.com/dotnet/api/system.timespan
- api3: NoDelay
  id: Alis_Core_Network_WebSocketClientOptions_NoDelay
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L70
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.NoDelay
    commentId: P:Alis.Core.Network.WebSocketClientOptions.NoDelay
- markdown: >-
    Set to true to send a message immediately with the least amount of latency (typical usage for chat)

    This will disable Nagle's algorithm which can cause high tcp latency for small packets sent infrequently

    However, if you are streaming large packets or sending large numbers of small packets frequently it is advisable to

    set NoDelay to false

    This way data will be bundled into larger packets for better throughput
- code: public bool NoDelay { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: SecWebSocketExtensions
  id: Alis_Core_Network_WebSocketClientOptions_SecWebSocketExtensions
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L87
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.SecWebSocketExtensions
    commentId: P:Alis.Core.Network.WebSocketClientOptions.SecWebSocketExtensions
- markdown: WebSocket Extensions as an HTTP header value
- code: public string SecWebSocketExtensions { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: SecWebSocketProtocol
  id: Alis_Core_Network_WebSocketClientOptions_SecWebSocketProtocol
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Network/src/WebSocketClientOptions.cs#L94
  metadata:
    uid: Alis.Core.Network.WebSocketClientOptions.SecWebSocketProtocol
    commentId: P:Alis.Core.Network.WebSocketClientOptions.SecWebSocketProtocol
- markdown: >-
    A comma separated list of sub protocols in preference order (first one being the most preferred)

    The server will return the first supported sub protocol (or none if none are supported)

    Can be null
- code: public string SecWebSocketProtocol { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
languageId: csharp
metadata:
  description: Client WebSocket init options
