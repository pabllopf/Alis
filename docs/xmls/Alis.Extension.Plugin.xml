<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Extension.Plugin</name>
    </assembly>
    <members>
        <member name="T:Alis.Extension.Plugin.IPlatformDetector">
            <summary>
                The platform detector interface
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlatformDetector.IsWindows">
            <summary>
                Describes whether this instance is windows
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlatformDetector.IsOSX">
            <summary>
                Describes whether this instance is osx
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlatformDetector.IsLinux">
            <summary>
                Describes whether this instance is linux
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlatformDetector.IsiOS">
            <summary>
                Describes whether this instance isi os
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlatformDetector.IsAndroid">
            <summary>
                Describes whether this instance is android
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Extension.Plugin.IPlugin">
            <summary>
                The plugin interface
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlugin.Initialize">
            <summary>
                Initializes this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlugin.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlugin.Render">
            <summary>
                Renders this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.IPlugin.Shutdown">
            <summary>
                Shutdowns this instance
            </summary>
        </member>
        <member name="T:Alis.Extension.Plugin.IPluginManager">
            <summary>
                The plugin manager interface
            </summary>
            <seealso cref="T:Alis.Core.Ecs.System.Manager.IManager" />
        </member>
        <member name="T:Alis.Extension.Plugin.IPluginSetting">
            <summary>
                The plugin manager interface
            </summary>
            <seealso cref="T:Alis.Core.Ecs.System.Manager.IManager" />
        </member>
        <member name="T:Alis.Extension.Plugin.PlatformDetector">
            <summary>
                The platform detector class
            </summary>
            <seealso cref="T:Alis.Extension.Plugin.IPlatformDetector" />
        </member>
        <member name="M:Alis.Extension.Plugin.PlatformDetector.IsWindows">
            <summary>
                Describes whether this instance is windows
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PlatformDetector.IsOSX">
            <summary>
                Describes whether this instance is osx
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PlatformDetector.IsLinux">
            <summary>
                Describes whether this instance is linux
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PlatformDetector.IsiOS">
            <summary>
                Describes whether this instance isi os
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PlatformDetector.IsAndroid">
            <summary>
                Describes whether this instance is android
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Extension.Plugin.PluginManager">
            <summary>
                The plugin manager class
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Alis.Extension.Plugin.PluginManager._platformDetector">
            <summary>
                The platform detector
            </summary>
        </member>
        <member name="F:Alis.Extension.Plugin.PluginManager.LoadedAssemblies">
            <summary>
                The loaded assemblies
            </summary>
        </member>
        <member name="F:Alis.Extension.Plugin.PluginManager.LoadedPlugins">
            <summary>
                The loaded plugins
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Extension.Plugin.PluginManager" /> class
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.#ctor(Alis.Extension.Plugin.IPlatformDetector)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Extension.Plugin.PluginManager" /> class
            </summary>
            <param name="platformDetector">The platform detector</param>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.Dispose">
            <summary>
                Disposes this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.LoadPlugins(System.String)">
            <summary>
                Loads the plugins using the specified plugins directory
            </summary>
            <param name="pluginsDirectory">The plugins directory</param>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.GetPlatformPluginsDirectory(System.String,System.String)">
            <summary>
                Gets the platform plugins directory
            </summary>
            <param name="pluginsDirectory">The plugins directory</param>
            <param name="platformFolder">The platform folder</param>
            <returns>The platform plugins directory</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.LoadPluginsFromFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Loads the plugins from the specified files
            </summary>
            <param name="pluginFiles">The plugin files</param>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.GetPlatformFolder">
            <summary>
                Gets the platform folder
            </summary>
            <exception cref="T:System.NotSupportedException">Unsupported platform. Plugins will not be loaded.</exception>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.IsRunningOnAndroid">
            <summary>
                Describes whether this instance is running on android
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.IsRunningOniOS">
            <summary>
                Describes whether this instance is running oni os
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.ValidatePluginsDirectory(System.String)">
            <summary>
                Validates the plugins directory using the specified directory
            </summary>
            <param name="directory">The directory</param>
            <returns>True if the directory exists, false otherwise</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.GetPluginFiles(System.String)">
            <summary>
                Gets the plugin files using the specified directory
            </summary>
            <param name="directory">The directory</param>
            <returns>The string array</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.LoadPluginFromFile(System.String)">
            <summary>
                Loads the plugin from file using the specified plugin file
            </summary>
            <param name="pluginFile">The plugin file</param>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.LoadAssembly(System.String)">
            <summary>
                Loads the assembly from the specified file
            </summary>
            <param name="pluginFile">The plugin file</param>
            <returns>The loaded assembly</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.InstantiatePlugins(System.Reflection.Assembly)">
            <summary>
                Instantiates the plugins from the specified assembly
            </summary>
            <param name="assembly">The assembly</param>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.GetPluginTypes(System.Reflection.Assembly)">
            <summary>
                Gets the plugin types from the specified assembly
            </summary>
            <param name="assembly">The assembly</param>
            <returns>An array of plugin types</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.CreatePluginInstance(System.Type)">
            <summary>
                Creates a plugin instance from the specified type
            </summary>
            <param name="type">The type</param>
            <returns>A plugin instance</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.IsPluginFile(System.String)">
            <summary>
                Describes whether this instance is plugin file
            </summary>
            <param name="filePath">The file path</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.UnloadPlugins">
            <summary>
                Unloads the plugins
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.Initialize">
            <summary>
                Initializes this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.Render">
            <summary>
                Renders this instance
            </summary>
        </member>
        <member name="M:Alis.Extension.Plugin.PluginManager.Shutdown">
            <summary>
                Shutdowns this instance
            </summary>
        </member>
    </members>
</doc>
